{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Edito \u00b6 Bienvenue. Ce site est mon espace d'expression. J'y ajoute ce qui m'amuse \u00e0 un moment donn\u00e9. Mais attention : la plupart des pages ici sont inachev\u00e9es. Si vous trouvez des sujets qui vous int\u00e9ressent, servez-vous. Si vous voulez plus de pr\u00e9cisions sur un sujet, ou un article/support plus d\u00e9taill\u00e9, contactez-moi. __ Fabien","title":"Accueil"},{"location":"#edito","text":"Bienvenue. Ce site est mon espace d'expression. J'y ajoute ce qui m'amuse \u00e0 un moment donn\u00e9. Mais attention : la plupart des pages ici sont inachev\u00e9es. Si vous trouvez des sujets qui vous int\u00e9ressent, servez-vous. Si vous voulez plus de pr\u00e9cisions sur un sujet, ou un article/support plus d\u00e9taill\u00e9, contactez-moi. __ Fabien","title":"Edito"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/","text":"Comment produire un rapport de couverture de code, sur une application Java multi-module, avec et sans, les tests d'int\u00e9gration, \u00e0 l'aide de JaCoCo. JaCoCo sur un projet Maven multi-modules \u00b6 JaCoCo est un ensemble d'outils permettant d'instrumentaliser le code Java, et de collecter des m\u00e9triques lors de l'ex\u00e9cution de ce code. Avec les outils JaCoCo \u00b6 R\u00e9cup\u00e9rer les outils JaCoCo \u00b6 T\u00e9l\u00e9charger JaCoCo depuis le site officiel: ici . D\u00e9compresser les fichiers, et r\u00e9cup\u00e9rer le chemin vers le dossier lib : JACOCO_HOME = ~/jacoco-0.8.x/lib/ Ce r\u00e9pertoire contient les jars, dont on se servira par la suite : # Agent JaCoCo JACOCO_AGENT = $JACOCO_HOME /jacocoagent.jar # Command Line Interface JACOCO_CLI = $JACOCO_HOME /jacococli.jar G\u00e9n\u00e9rer le fichier d'analyse \u00b6 L'utilisation de JaCoCo a pour objectif d'analyser le code. Pour cela, JaCoCo va g\u00e9n\u00e9rer un fichier d'analyse : jacoco.exec . Ce fichier, et son emplacement sont configurables: JACOCO_EXEC_FILE = ~/target/my-jacoco-execution-data.exec # Par d\u00e9faut: JACOCO_EXEC_FILE = ./jacoco.exec Instrumentaliser le code \u00e0 analyser \u00b6 L'agent Jacoco, jacocoagent , permet de collecter les donn\u00e9es sur une JVM, et de les dumper lorsque la JVM s'\u00e9teint. Pour ce faire, il faut d\u00e9marrer la JVM avec l'option appropri\u00e9e : # VM Options: add jacocoagent -javaagent: $JACOCO_AGENT # Windows exemple without env variables: -javaagent:D: \\\\ develop \\\\ tools \\\\ jacoco \\\\ jacocoagent.jar # Configuration pattern -javaagent: [ yourpath/ ] jacocoagent.jar =[ option1 ]=[ value1 ] , [ option2 ]=[ value2 ] Sous IntelliJ: Run > Edit Configuration > [ Select Configuration ] > First Tab \"Configuration\" > VM Options Avec cette configuration, JaCoCo g\u00e9n\u00e8re un fichier d'analyse \u00e0 l'emplacement par d\u00e9faut, lorsque l'on \u00e9teint la JVM. Cet emplacement peut \u00eatre configur\u00e9 de la mani\u00e8re suivante : -javaagent: $JACOCO_AGENT = destfile = $JACOCO_EXEC_FILE # Windows exemple without env variable: -javaagent:D: \\\\ develop \\\\ tools \\\\ jacoco \\\\ jacocoagent.jar = destfile = $JACOCO_EXEC_FILE Tests d'int\u00e9gration \u00b6 En testant une application en mode \"Boite noire\", on pr\u00e9f\u00e9rera mieux ma\u00eetriser la g\u00e9n\u00e9ration des donn\u00e9es. Pour cela, on configure le jacocoagent de la mani\u00e8re suivante : -javaagent: $JACOCO_AGENT = output = tcpserver Cela signifie que le rapport d'ex\u00e9cution sera \u00e9crit dans une socket, sur un couple host:port d\u00e9fini, localhost:6300 par d\u00e9faut. On peut configurer ce couple de la mani\u00e8re suivante : -javaagent: $JACOCO_AGENT = output = tcpserver,address = 10 .2.10.2,port = 8080 Attention: la configuration destfile=$JACOCO_EXEC_FILE devient alors caduque. A tout moment, et tant que la JVM tourne, on peut r\u00e9cup\u00e9rer en local les donn\u00e9es analys\u00e9es par JaCoCo sur la JVM instrumentalis\u00e9e. Avec les outils en ligne de commande : java -jar $JACOCO_CLI \\ dump \\ --destfile $JACOCO_EXEC_FILE Par d\u00e9faut, le dump s'effectue sur localhost:6300 , et g\u00e9n\u00e8re un fichier ./jacoco.exec . Synth\u00e8se: Avec les \u00e9tapes ci-dessus, on est en mesure de g\u00e9n\u00e9rer, via des instructions en ligne de commande, un rapport d'analyse JaCoCo explopitable. Le fichier $JACOCO_EXEC_FILE peut \u00eatre transmis \u00e0 un Sonar, ou \u00e0 tout autre outil permettant de centraliser les analyse de code. Utiliser les outils de ligne de commande de JaCoCo peut \u00eatre pratique dans une pipeline industrialis\u00e9e, par exemple avec du Jenkin et du Docker. G\u00e9n\u00e9rer un rapport compr\u00e9hensible par un \u00eatre humain \u00b6 Avant d'industrialiser tout le processus sur Sonar, on voudra probablement analyser manuellement le fichier g\u00e9n\u00e9r\u00e9. C'est possible via un rapport g\u00e9n\u00e9r\u00e9 avec les outils en ligne de commande : java -jar $JACOCO_CLI \\ report \\ --classfiles ./target/classes/ Cela n'est valable que pour un projet simple. JaCoCo a besoin du chemin vers les classes compil\u00e9es, pour lesquelles il va g\u00e9n\u00e9rer un rapport, et du chemin vers le le fichier d'analyse, ./jacoco.exec par d\u00e9faut. En fait, c'est \u00e9galement possible pour un projet en multi-modules: java -jar $JACOCO_CLI \\ report \\ ./first-module/jacoco.exec \\ ./second-module/jacoco.exec \\ ./third-module/jacoco.exec \\ --classfiles ./first-module/target/classes/ \\ --classfiles ./second-module/target/classes/ \\ --classfiles ./third-module/target/classes/ JaCoCo sait utiliser plusieurs fichiers d'analyse, et parcourir plusieurs r\u00e9pertoires de classes compil\u00e9es, pour g\u00e9n\u00e9rer le rapport final. D'ailleurs, on pourra vouloir lui d\u00e9finir l'emplacement o\u00f9 l'on g\u00e9n\u00e8re le rapport: java -jar $JACOCO_CLI \\ report \\ ./first-module/jacoco.exec \\ ./second-module/jacoco.exec \\ ./third-module/jacoco.exec \\ --classfiles ./first-module//target/classes/ \\ --classfiles ./second-module/target/classes/ \\ --classfiles ./third-module/target/classes/ \\ --html jacoco/report Enjoy! Avec Maven \u00b6 Utiliser le plugin JaCoCo \u00b6 Dans le POM Maven, il faut rajouter le plugin JaCoCo <properties> ... <!-- Go on JaCoCo website for the latest version: https://www.jacoco.org/jacoco/trunk/doc/maven.html --> <jacoco.version> 0.8.4 </jacoco.version> ... </properties> ... <plugins> ... <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <version> ${jacoco.version} </version> <executions> <execution> <id> agent </id> <goals> <goal> prepare-agent </goal> </goals> </execution> <execution> <id> generate-report </id> <goals> <goal> report </goal> </goals> </execution> </executions> </plugin> ... </plugins> Par d\u00e9faut, JaCoCo collecte les donn\u00e9es d'analyse d'ex\u00e9cution dans un fichier target/jacoco.exec . Ce fichier est local \u00e0 chaque projet Maven, et re-g\u00e9n\u00e9r\u00e9 \u00e0 chaque build. prepare-agent est automatiquement utilis\u00e9 \u00e0 la phase Maven initialize . Pour analyser le code, il suffit de jouer la commande: mvn test Par d\u00e9faut, JaCoCo g\u00e9n\u00e8re le rapport dans le dossier target/jacoco . Ce rapport est automatiquement g\u00e9n\u00e9r\u00e9 \u00e0 la phase Maven verify . Pour analyser le code, et g\u00e9n\u00e9rer le rapport, il suffit de jouer la commande: mvn verify Pour un projet en multi-modules \u00b6 Sur mon projet multi-modules, Sonar me donne des r\u00e9sultats ne refl\u00e9tant pas la r\u00e9alit\u00e9 ! C'est nul Sonar ! D\u00e9veloppeur lambda Si, dans certains cas, le rapport Sonar ne correspond pas \u00e0 la r\u00e9alit\u00e9 du code, c'est que Sonar n'a pas les informations pr\u00e9cises de ce qu'il doit analyser. La solution ci-dessous, permet de configurer correctement JaCoCo, pour qu'il g\u00e9n\u00e8re un rapport complet \u00e0 Sonar. Elle consiste \u00e0 : G\u00e9n\u00e9rer le fichier jacoco.exec avec TOUTES les donn\u00e9es consolid\u00e9es de TOUS les modules \u00e0 analyser. S'appuyer sur ce fichier pour g\u00e9n\u00e9rer un rapport consolid\u00e9, utilisant le classpath de tous les modules Dire \u00e0 Sonar d'utiliser ce rapport consolid\u00e9 pour effectuer son analyse Le projet impact\u00e9, est un projet multi-module, dont les modules h\u00e9ritent d'un POM parent. Les modifications sont \u00e0 porter dans le POM parent, ainsi, tous les sous-modules en b\u00e9n\u00e9ficieront automatiquement. Si votre projet utilise une structure diff\u00e9rente, il faudra revoir les properties pour que les chemins des fichiers g\u00e9n\u00e9r\u00e9s et utilis\u00e9s, restent coh\u00e9rents Configuration pr\u00e9alable \u00b6 Dans cette solution, on a besoin d'avoir un r\u00e9pertoire commun \u00e0 tous les modules, pour \u00e9crire/lire des fichiers. Pour davantage de simplicit\u00e9, ce r\u00e9pertoire sera le r\u00e9pertoire de build du projet parent: <properties> <root.build.directory> ${maven.multiModuleProjectDirectory}/target </root.build.directory> </properties> G\u00e9n\u00e9ration du fichier jacoco.exec \u00b6 L'objectif de cette \u00e9tape est de g\u00e9n\u00e9rer un fichier jacoco.exec unique. Il suffit, de pr\u00e9ciser, dans le plugin, le chemin du fichier, qui doit \u00eatre le m\u00eame pour tous les modules du projet. On rajoute les propri\u00e9t\u00e9s: <properties> ... <jacoco.dir> ${root.build.directory}/jacoco </jacoco.dir> <jacoco.execFile> ${jacoco.dir}/jacoco.exec </jacoco.execFile> ... </properties> On configure le plugin, dans un profile sp\u00e9cifique <profile> <id> generate-jacoco-exec </id> <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <configuration> <destFile> ${jacoco.execFile} </destFile> <append> true </append> </configuration> <executions> <execution> <id> agent </id> <goals> <goal> prepare-agent </goal> </goals> </execution> </executions> </plugin> </plugins> </build> </profile> D\u00e9sormais, on g\u00e9n\u00e8re le fichier jacoco.exec pour tous les modules, via la commande : mvn -Pgenerate-jacoco-exec clean verify G\u00e9n\u00e9ration le rapport JaCoCo \u00b6 On g\u00e9n\u00e8re le rapport xml, \u00e0 partir du fichier jacoco.exec pr\u00e9alablement g\u00e9n\u00e9r\u00e9. On rajoute les propri\u00e9t\u00e9s: <properties> ... <!-- D\u00e9j\u00e0 d\u00e9fini \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente: <jacoco.execFile>${jacoco.dir}/jacoco.exec</jacoco.execFile> --> <jacoco.report.dir> ${jacoco.dir}/report </jacoco.report.dir> ... </properties> On configure le plugin, dans un profile sp\u00e9cifique: <profile> <id> generate-jacoco-report </id> <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <configuration> <dataFile> ${jacoco.execFile} </dataFile> <outputDirectory> ${jacoco.report.dir} </outputDirectory> </configuration> <executions> <execution> <id> xml-report </id> <goals> <goal> report </goal> </goals> </execution> </executions> </plugin> </plugins> </build> </profile> Avec une telle configuration, on g\u00e9n\u00e8re un rapport par module. Le rapport d'un module venant remplacer le rapport existant, ce n'est pas exploitable. Il nous faut donc le g\u00e9n\u00e9rer une seule fois, pour tout le classpath du projet; ce que l'on va faire \u00e0 partir du projet parent. Malheureusement, le rapport via plugin maven jacoco, mvn jacoco:report , n'est pas aussi complet que sont pendant en ligne de commande. On ne peut pas configurer le classpath pour r\u00e9pertorier toutes les classes du projet. Il va falloir ruser: lors de la g\u00e9n\u00e9ration du fichier jacoco.exec , on passe sur tout le classpath du projet. On va donc copier toutes les classes \u00e0 un unique emplacement, pour les r\u00e9utiliser \u00e0 la g\u00e9n\u00e9ration du rapport. Attention: Cette copie des classes com\u00f9il\u00e9es, a pour seul but de g\u00e9n\u00e9rer un rapport JaCoCo. Il faut imp\u00e9rativement \u00e9viter de faire cette manipulation lors du packaging de l'application pour la production! On rajoute les propri\u00e9t\u00e9s: <properties> ... <jacoco.classpath> ${root.build.directory}/classes </jacoco.classpath> ... </properties> On modifie le profil pr\u00e9c\u00e9dent, pour copier les classes compil\u00e9es: <profile> <id> generate-jacoco-exec </id> <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <configuration> <destFile> ${jacoco.execFile} </destFile> <append> true </append> </configuration> <executions> <execution> <id> agent </id> <goals> <goal> prepare-agent </goal> </goals> </execution> </executions> </plugin> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-resources-plugin </artifactId> <executions> <execution> <id> copy-resources </id> <phase> package </phase> <goals> <goal> copy-resources </goal> </goals> <configuration> <outputDirectory> ${jacoco.classpath} </outputDirectory> <resources> <resource> <directory> ${project.basedir}/target/classes </directory> </resource> </resources> </configuration> </execution> </executions> </plugin> </plugins> </build> </profile> D\u00e9sormais, on g\u00e9n\u00e8re le rapport JaCoCo, XML et HTML, pour tous les modules, via la commande : mvn -Pgenerate-jacoco-report jacoco:report -N # -N permet de n'ex\u00e9cuter la commande que pour le POM parent Envoi du rapport \u00e0 Sonar \u00b6 Il suffit d\u00e9sormais, d'envoyer correctement le rapport \u00e0 Sonar. On doit lui pr\u00e9ciser qu'on envoie un rapport JaCoCo, l'emplacement du rapport, et des binaires \u00e0 analyser. On rajoute les propri\u00e9t\u00e9s: <properties> ... <!-- D\u00e9j\u00e0 d\u00e9fini aux \u00e9tapes pr\u00e9c\u00e9dentes: <jacoco.report.dir>${jacoco.dir}/report</jacoco.report.dir> <jacoco.classpath>${root.build.directory}/classes</jacoco.classpath> --> <sonar.binaries> ${jacoco.classpath} </sonar.binaries> <sonar.java.coveragePlugin> jacoco </sonar.java.coveragePlugin> <sonar.dynamicAnalysis> reuseReports </sonar.dynamicAnalysis> <sonar.coverage.jacoco.xmlReportPaths> ${jacoco.report.dir}/jacoco.xml </sonar.coverage.jacoco.xmlReportPaths> ... </properties> On configure le plugin, dans un profile sp\u00e9cifique: <profile> <id> sonar </id> <build> <plugins> <plugin> <groupId> org.sonarsource.scanner.maven </groupId> <artifactId> sonar-maven-plugin </artifactId> </plugin> </plugins> </build> </profile> D\u00e9sormais, on envoie le rapport JaCoCo \u00e0 Sonar, via la commande: mvn -Psonar sonar:sonar -Dsonar.host.url = http://my.own.sonar.com TL;DR \u00b6 Rajouter les propri\u00e9t\u00e9s permettant de mutualiser les emplacement de lecture/ecriture des fichiers : <properties> ... <jacoco.version> 0.8.4 </jacoco.version> <root.build.directory> ${maven.multiModuleProjectDirectory}/target </root.build.directory> <jacoco.dir> ${root.build.directory}/jacoco </jacoco.dir> <jacoco.classpath> ${root.build.directory}/classes </jacoco.classpath> <jacoco.execFile> ${jacoco.dir}/jacoco.exec </jacoco.execFile> <jacoco.report.dir> ${jacoco.dir}/report </jacoco.report.dir> <sonar.maven-plugin.version> 3.6.0.1398 </sonar.maven-plugin.version> <sonar.binaries> ${jacoco.classpath} </sonar.binaries> <sonar.java.coveragePlugin> jacoco </sonar.java.coveragePlugin> <sonar.dynamicAnalysis> reuseReports </sonar.dynamicAnalysis> <sonar.coverage.jacoco.xmlReportPaths> ${jacoco.report.dir}/jacoco.xml </sonar.coverage.jacoco.xmlReportPaths> </properties> Dans un profile sp\u00e9cifique, generate-jacoco-exec : - on configure le plugin JaCoCo, pour g\u00e9n\u00e9rer le fichier jacoco.exec consolid\u00e9 - on copie les classes compil\u00e9es en vue de g\u00e9n\u00e9rer le rapport XML consolid\u00e9 <profile> <id> generate-jacoco-exec </id> <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <configuration> <destFile> ${jacoco.execFile} </destFile> <append> true </append> </configuration> <executions> <execution> <id> agent </id> <goals> <goal> prepare-agent </goal> </goals> </execution> </executions> </plugin> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-resources-plugin </artifactId> <executions> <execution> <id> copy-resources </id> <phase> package </phase> <goals> <goal> copy-resources </goal> </goals> <configuration> <outputDirectory> ${jacoco.classpath} </outputDirectory> <resources> <resource> <directory> ${project.basedir}/target/classes </directory> </resource> </resources> </configuration> </execution> </executions> </plugin> </plugins> </build> </profile> Dans un profile sp\u00e9cifique, generate-jacoco-report : - on configure le plugin JaCoCo, pour g\u00e9n\u00e9rer le rapport XML et HTML \u00e0 partir d'un seul fichier - cette g\u00e9n\u00e9ration se fera depuis le projet parent, dans lequel on a dupliqu\u00e9 les binaires \u00e0 seule fin d'analyse <profile> <id> generate-jacoco-report </id> <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <configuration> <dataFile> ${jacoco.execFile} </dataFile> <outputDirectory> ${jacoco.report.dir} </outputDirectory> </configuration> <executions> <execution> <id> xml-report </id> <goals> <goal> report </goal> </goals> </execution> </executions> </plugin> </plugins> </build> </profile> Dans un profile sp\u00e9cifique, sonar : - on d\u00e9clare l'utilisation du plugin sonar <profile> <id> sonar </id> <build> <plugins> <plugin> <groupId> org.sonarsource.scanner.maven </groupId> <artifactId> sonar-maven-plugin </artifactId> </plugin> </plugins> </build> </profile> On peut maintenant ex\u00e9cuter les commandes suivante: # G\u00e9n\u00e9ration du rapport binaire mvn -Pgenerate-jacoco-exec clean verify # G\u00e9n\u00e9ration du rapport XML mvn -Pgenerate-jacoco-report jacoco:report -N # Analyse Sonar mvn -Psonar sonar:sonar -Dsonar.host.url = http://my.own.sonar.com Int\u00e9gration dans une pipeline Jenkins Multibranche \u00b6 pipeline { agent { label 'maven3 && java10' } stages { stage ( 'Checkout' ) { steps { checkout scm } } stage ( 'Generate JaCoCo Report' ) { steps { withMaven () { sh \"mvn -Pgenerate-jacoco-exec verify\" sh \"mvn -Pgenerate-jacoco-report jacoco:report -N\" } } } stage ( 'Send to Sonar' ) { steps { withMaven () { sh \"mvn -Psonar sonar:sonar -Dsonar.host.url=http://my.own.sonar.com\" } } } } } Conclusion \u00b6 G\u00e9n\u00e9rer un rapport Sonar coh\u00e9rent, c'est possible avec JaCoCo. Ce n'est qu'une question de configuration, avec des outils pas toujours homog\u00e8nes.","title":"HOWTO: Use of JaCoCo"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#jacoco-sur-un-projet-maven-multi-modules","text":"JaCoCo est un ensemble d'outils permettant d'instrumentaliser le code Java, et de collecter des m\u00e9triques lors de l'ex\u00e9cution de ce code.","title":"JaCoCo sur un projet Maven multi-modules"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#avec-les-outils-jacoco","text":"","title":"Avec les outils JaCoCo"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#recuperer-les-outils-jacoco","text":"T\u00e9l\u00e9charger JaCoCo depuis le site officiel: ici . D\u00e9compresser les fichiers, et r\u00e9cup\u00e9rer le chemin vers le dossier lib : JACOCO_HOME = ~/jacoco-0.8.x/lib/ Ce r\u00e9pertoire contient les jars, dont on se servira par la suite : # Agent JaCoCo JACOCO_AGENT = $JACOCO_HOME /jacocoagent.jar # Command Line Interface JACOCO_CLI = $JACOCO_HOME /jacococli.jar","title":"R\u00e9cup\u00e9rer les outils JaCoCo"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#generer-le-fichier-danalyse","text":"L'utilisation de JaCoCo a pour objectif d'analyser le code. Pour cela, JaCoCo va g\u00e9n\u00e9rer un fichier d'analyse : jacoco.exec . Ce fichier, et son emplacement sont configurables: JACOCO_EXEC_FILE = ~/target/my-jacoco-execution-data.exec # Par d\u00e9faut: JACOCO_EXEC_FILE = ./jacoco.exec","title":"G\u00e9n\u00e9rer le fichier d'analyse"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#instrumentaliser-le-code-a-analyser","text":"L'agent Jacoco, jacocoagent , permet de collecter les donn\u00e9es sur une JVM, et de les dumper lorsque la JVM s'\u00e9teint. Pour ce faire, il faut d\u00e9marrer la JVM avec l'option appropri\u00e9e : # VM Options: add jacocoagent -javaagent: $JACOCO_AGENT # Windows exemple without env variables: -javaagent:D: \\\\ develop \\\\ tools \\\\ jacoco \\\\ jacocoagent.jar # Configuration pattern -javaagent: [ yourpath/ ] jacocoagent.jar =[ option1 ]=[ value1 ] , [ option2 ]=[ value2 ] Sous IntelliJ: Run > Edit Configuration > [ Select Configuration ] > First Tab \"Configuration\" > VM Options Avec cette configuration, JaCoCo g\u00e9n\u00e8re un fichier d'analyse \u00e0 l'emplacement par d\u00e9faut, lorsque l'on \u00e9teint la JVM. Cet emplacement peut \u00eatre configur\u00e9 de la mani\u00e8re suivante : -javaagent: $JACOCO_AGENT = destfile = $JACOCO_EXEC_FILE # Windows exemple without env variable: -javaagent:D: \\\\ develop \\\\ tools \\\\ jacoco \\\\ jacocoagent.jar = destfile = $JACOCO_EXEC_FILE","title":"Instrumentaliser le code \u00e0 analyser"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#tests-dintegration","text":"En testant une application en mode \"Boite noire\", on pr\u00e9f\u00e9rera mieux ma\u00eetriser la g\u00e9n\u00e9ration des donn\u00e9es. Pour cela, on configure le jacocoagent de la mani\u00e8re suivante : -javaagent: $JACOCO_AGENT = output = tcpserver Cela signifie que le rapport d'ex\u00e9cution sera \u00e9crit dans une socket, sur un couple host:port d\u00e9fini, localhost:6300 par d\u00e9faut. On peut configurer ce couple de la mani\u00e8re suivante : -javaagent: $JACOCO_AGENT = output = tcpserver,address = 10 .2.10.2,port = 8080 Attention: la configuration destfile=$JACOCO_EXEC_FILE devient alors caduque. A tout moment, et tant que la JVM tourne, on peut r\u00e9cup\u00e9rer en local les donn\u00e9es analys\u00e9es par JaCoCo sur la JVM instrumentalis\u00e9e. Avec les outils en ligne de commande : java -jar $JACOCO_CLI \\ dump \\ --destfile $JACOCO_EXEC_FILE Par d\u00e9faut, le dump s'effectue sur localhost:6300 , et g\u00e9n\u00e8re un fichier ./jacoco.exec . Synth\u00e8se: Avec les \u00e9tapes ci-dessus, on est en mesure de g\u00e9n\u00e9rer, via des instructions en ligne de commande, un rapport d'analyse JaCoCo explopitable. Le fichier $JACOCO_EXEC_FILE peut \u00eatre transmis \u00e0 un Sonar, ou \u00e0 tout autre outil permettant de centraliser les analyse de code. Utiliser les outils de ligne de commande de JaCoCo peut \u00eatre pratique dans une pipeline industrialis\u00e9e, par exemple avec du Jenkin et du Docker.","title":"Tests d'int\u00e9gration"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#generer-un-rapport-comprehensible-par-un-etre-humain","text":"Avant d'industrialiser tout le processus sur Sonar, on voudra probablement analyser manuellement le fichier g\u00e9n\u00e9r\u00e9. C'est possible via un rapport g\u00e9n\u00e9r\u00e9 avec les outils en ligne de commande : java -jar $JACOCO_CLI \\ report \\ --classfiles ./target/classes/ Cela n'est valable que pour un projet simple. JaCoCo a besoin du chemin vers les classes compil\u00e9es, pour lesquelles il va g\u00e9n\u00e9rer un rapport, et du chemin vers le le fichier d'analyse, ./jacoco.exec par d\u00e9faut. En fait, c'est \u00e9galement possible pour un projet en multi-modules: java -jar $JACOCO_CLI \\ report \\ ./first-module/jacoco.exec \\ ./second-module/jacoco.exec \\ ./third-module/jacoco.exec \\ --classfiles ./first-module/target/classes/ \\ --classfiles ./second-module/target/classes/ \\ --classfiles ./third-module/target/classes/ JaCoCo sait utiliser plusieurs fichiers d'analyse, et parcourir plusieurs r\u00e9pertoires de classes compil\u00e9es, pour g\u00e9n\u00e9rer le rapport final. D'ailleurs, on pourra vouloir lui d\u00e9finir l'emplacement o\u00f9 l'on g\u00e9n\u00e8re le rapport: java -jar $JACOCO_CLI \\ report \\ ./first-module/jacoco.exec \\ ./second-module/jacoco.exec \\ ./third-module/jacoco.exec \\ --classfiles ./first-module//target/classes/ \\ --classfiles ./second-module/target/classes/ \\ --classfiles ./third-module/target/classes/ \\ --html jacoco/report Enjoy!","title":"G\u00e9n\u00e9rer un rapport compr\u00e9hensible par un \u00eatre humain"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#avec-maven","text":"","title":"Avec Maven"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#utiliser-le-plugin-jacoco","text":"Dans le POM Maven, il faut rajouter le plugin JaCoCo <properties> ... <!-- Go on JaCoCo website for the latest version: https://www.jacoco.org/jacoco/trunk/doc/maven.html --> <jacoco.version> 0.8.4 </jacoco.version> ... </properties> ... <plugins> ... <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <version> ${jacoco.version} </version> <executions> <execution> <id> agent </id> <goals> <goal> prepare-agent </goal> </goals> </execution> <execution> <id> generate-report </id> <goals> <goal> report </goal> </goals> </execution> </executions> </plugin> ... </plugins> Par d\u00e9faut, JaCoCo collecte les donn\u00e9es d'analyse d'ex\u00e9cution dans un fichier target/jacoco.exec . Ce fichier est local \u00e0 chaque projet Maven, et re-g\u00e9n\u00e9r\u00e9 \u00e0 chaque build. prepare-agent est automatiquement utilis\u00e9 \u00e0 la phase Maven initialize . Pour analyser le code, il suffit de jouer la commande: mvn test Par d\u00e9faut, JaCoCo g\u00e9n\u00e8re le rapport dans le dossier target/jacoco . Ce rapport est automatiquement g\u00e9n\u00e9r\u00e9 \u00e0 la phase Maven verify . Pour analyser le code, et g\u00e9n\u00e9rer le rapport, il suffit de jouer la commande: mvn verify","title":"Utiliser le plugin JaCoCo"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#pour-un-projet-en-multi-modules","text":"Sur mon projet multi-modules, Sonar me donne des r\u00e9sultats ne refl\u00e9tant pas la r\u00e9alit\u00e9 ! C'est nul Sonar ! D\u00e9veloppeur lambda Si, dans certains cas, le rapport Sonar ne correspond pas \u00e0 la r\u00e9alit\u00e9 du code, c'est que Sonar n'a pas les informations pr\u00e9cises de ce qu'il doit analyser. La solution ci-dessous, permet de configurer correctement JaCoCo, pour qu'il g\u00e9n\u00e8re un rapport complet \u00e0 Sonar. Elle consiste \u00e0 : G\u00e9n\u00e9rer le fichier jacoco.exec avec TOUTES les donn\u00e9es consolid\u00e9es de TOUS les modules \u00e0 analyser. S'appuyer sur ce fichier pour g\u00e9n\u00e9rer un rapport consolid\u00e9, utilisant le classpath de tous les modules Dire \u00e0 Sonar d'utiliser ce rapport consolid\u00e9 pour effectuer son analyse Le projet impact\u00e9, est un projet multi-module, dont les modules h\u00e9ritent d'un POM parent. Les modifications sont \u00e0 porter dans le POM parent, ainsi, tous les sous-modules en b\u00e9n\u00e9ficieront automatiquement. Si votre projet utilise une structure diff\u00e9rente, il faudra revoir les properties pour que les chemins des fichiers g\u00e9n\u00e9r\u00e9s et utilis\u00e9s, restent coh\u00e9rents","title":"Pour un projet en multi-modules"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#configuration-prealable","text":"Dans cette solution, on a besoin d'avoir un r\u00e9pertoire commun \u00e0 tous les modules, pour \u00e9crire/lire des fichiers. Pour davantage de simplicit\u00e9, ce r\u00e9pertoire sera le r\u00e9pertoire de build du projet parent: <properties> <root.build.directory> ${maven.multiModuleProjectDirectory}/target </root.build.directory> </properties>","title":"Configuration pr\u00e9alable"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#generation-du-fichier-jacocoexec","text":"L'objectif de cette \u00e9tape est de g\u00e9n\u00e9rer un fichier jacoco.exec unique. Il suffit, de pr\u00e9ciser, dans le plugin, le chemin du fichier, qui doit \u00eatre le m\u00eame pour tous les modules du projet. On rajoute les propri\u00e9t\u00e9s: <properties> ... <jacoco.dir> ${root.build.directory}/jacoco </jacoco.dir> <jacoco.execFile> ${jacoco.dir}/jacoco.exec </jacoco.execFile> ... </properties> On configure le plugin, dans un profile sp\u00e9cifique <profile> <id> generate-jacoco-exec </id> <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <configuration> <destFile> ${jacoco.execFile} </destFile> <append> true </append> </configuration> <executions> <execution> <id> agent </id> <goals> <goal> prepare-agent </goal> </goals> </execution> </executions> </plugin> </plugins> </build> </profile> D\u00e9sormais, on g\u00e9n\u00e8re le fichier jacoco.exec pour tous les modules, via la commande : mvn -Pgenerate-jacoco-exec clean verify","title":"G\u00e9n\u00e9ration du fichier jacoco.exec"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#generation-le-rapport-jacoco","text":"On g\u00e9n\u00e8re le rapport xml, \u00e0 partir du fichier jacoco.exec pr\u00e9alablement g\u00e9n\u00e9r\u00e9. On rajoute les propri\u00e9t\u00e9s: <properties> ... <!-- D\u00e9j\u00e0 d\u00e9fini \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente: <jacoco.execFile>${jacoco.dir}/jacoco.exec</jacoco.execFile> --> <jacoco.report.dir> ${jacoco.dir}/report </jacoco.report.dir> ... </properties> On configure le plugin, dans un profile sp\u00e9cifique: <profile> <id> generate-jacoco-report </id> <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <configuration> <dataFile> ${jacoco.execFile} </dataFile> <outputDirectory> ${jacoco.report.dir} </outputDirectory> </configuration> <executions> <execution> <id> xml-report </id> <goals> <goal> report </goal> </goals> </execution> </executions> </plugin> </plugins> </build> </profile> Avec une telle configuration, on g\u00e9n\u00e8re un rapport par module. Le rapport d'un module venant remplacer le rapport existant, ce n'est pas exploitable. Il nous faut donc le g\u00e9n\u00e9rer une seule fois, pour tout le classpath du projet; ce que l'on va faire \u00e0 partir du projet parent. Malheureusement, le rapport via plugin maven jacoco, mvn jacoco:report , n'est pas aussi complet que sont pendant en ligne de commande. On ne peut pas configurer le classpath pour r\u00e9pertorier toutes les classes du projet. Il va falloir ruser: lors de la g\u00e9n\u00e9ration du fichier jacoco.exec , on passe sur tout le classpath du projet. On va donc copier toutes les classes \u00e0 un unique emplacement, pour les r\u00e9utiliser \u00e0 la g\u00e9n\u00e9ration du rapport. Attention: Cette copie des classes com\u00f9il\u00e9es, a pour seul but de g\u00e9n\u00e9rer un rapport JaCoCo. Il faut imp\u00e9rativement \u00e9viter de faire cette manipulation lors du packaging de l'application pour la production! On rajoute les propri\u00e9t\u00e9s: <properties> ... <jacoco.classpath> ${root.build.directory}/classes </jacoco.classpath> ... </properties> On modifie le profil pr\u00e9c\u00e9dent, pour copier les classes compil\u00e9es: <profile> <id> generate-jacoco-exec </id> <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <configuration> <destFile> ${jacoco.execFile} </destFile> <append> true </append> </configuration> <executions> <execution> <id> agent </id> <goals> <goal> prepare-agent </goal> </goals> </execution> </executions> </plugin> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-resources-plugin </artifactId> <executions> <execution> <id> copy-resources </id> <phase> package </phase> <goals> <goal> copy-resources </goal> </goals> <configuration> <outputDirectory> ${jacoco.classpath} </outputDirectory> <resources> <resource> <directory> ${project.basedir}/target/classes </directory> </resource> </resources> </configuration> </execution> </executions> </plugin> </plugins> </build> </profile> D\u00e9sormais, on g\u00e9n\u00e8re le rapport JaCoCo, XML et HTML, pour tous les modules, via la commande : mvn -Pgenerate-jacoco-report jacoco:report -N # -N permet de n'ex\u00e9cuter la commande que pour le POM parent","title":"G\u00e9n\u00e9ration le rapport JaCoCo"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#envoi-du-rapport-a-sonar","text":"Il suffit d\u00e9sormais, d'envoyer correctement le rapport \u00e0 Sonar. On doit lui pr\u00e9ciser qu'on envoie un rapport JaCoCo, l'emplacement du rapport, et des binaires \u00e0 analyser. On rajoute les propri\u00e9t\u00e9s: <properties> ... <!-- D\u00e9j\u00e0 d\u00e9fini aux \u00e9tapes pr\u00e9c\u00e9dentes: <jacoco.report.dir>${jacoco.dir}/report</jacoco.report.dir> <jacoco.classpath>${root.build.directory}/classes</jacoco.classpath> --> <sonar.binaries> ${jacoco.classpath} </sonar.binaries> <sonar.java.coveragePlugin> jacoco </sonar.java.coveragePlugin> <sonar.dynamicAnalysis> reuseReports </sonar.dynamicAnalysis> <sonar.coverage.jacoco.xmlReportPaths> ${jacoco.report.dir}/jacoco.xml </sonar.coverage.jacoco.xmlReportPaths> ... </properties> On configure le plugin, dans un profile sp\u00e9cifique: <profile> <id> sonar </id> <build> <plugins> <plugin> <groupId> org.sonarsource.scanner.maven </groupId> <artifactId> sonar-maven-plugin </artifactId> </plugin> </plugins> </build> </profile> D\u00e9sormais, on envoie le rapport JaCoCo \u00e0 Sonar, via la commande: mvn -Psonar sonar:sonar -Dsonar.host.url = http://my.own.sonar.com","title":"Envoi du rapport \u00e0 Sonar"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#tldr","text":"Rajouter les propri\u00e9t\u00e9s permettant de mutualiser les emplacement de lecture/ecriture des fichiers : <properties> ... <jacoco.version> 0.8.4 </jacoco.version> <root.build.directory> ${maven.multiModuleProjectDirectory}/target </root.build.directory> <jacoco.dir> ${root.build.directory}/jacoco </jacoco.dir> <jacoco.classpath> ${root.build.directory}/classes </jacoco.classpath> <jacoco.execFile> ${jacoco.dir}/jacoco.exec </jacoco.execFile> <jacoco.report.dir> ${jacoco.dir}/report </jacoco.report.dir> <sonar.maven-plugin.version> 3.6.0.1398 </sonar.maven-plugin.version> <sonar.binaries> ${jacoco.classpath} </sonar.binaries> <sonar.java.coveragePlugin> jacoco </sonar.java.coveragePlugin> <sonar.dynamicAnalysis> reuseReports </sonar.dynamicAnalysis> <sonar.coverage.jacoco.xmlReportPaths> ${jacoco.report.dir}/jacoco.xml </sonar.coverage.jacoco.xmlReportPaths> </properties> Dans un profile sp\u00e9cifique, generate-jacoco-exec : - on configure le plugin JaCoCo, pour g\u00e9n\u00e9rer le fichier jacoco.exec consolid\u00e9 - on copie les classes compil\u00e9es en vue de g\u00e9n\u00e9rer le rapport XML consolid\u00e9 <profile> <id> generate-jacoco-exec </id> <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <configuration> <destFile> ${jacoco.execFile} </destFile> <append> true </append> </configuration> <executions> <execution> <id> agent </id> <goals> <goal> prepare-agent </goal> </goals> </execution> </executions> </plugin> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-resources-plugin </artifactId> <executions> <execution> <id> copy-resources </id> <phase> package </phase> <goals> <goal> copy-resources </goal> </goals> <configuration> <outputDirectory> ${jacoco.classpath} </outputDirectory> <resources> <resource> <directory> ${project.basedir}/target/classes </directory> </resource> </resources> </configuration> </execution> </executions> </plugin> </plugins> </build> </profile> Dans un profile sp\u00e9cifique, generate-jacoco-report : - on configure le plugin JaCoCo, pour g\u00e9n\u00e9rer le rapport XML et HTML \u00e0 partir d'un seul fichier - cette g\u00e9n\u00e9ration se fera depuis le projet parent, dans lequel on a dupliqu\u00e9 les binaires \u00e0 seule fin d'analyse <profile> <id> generate-jacoco-report </id> <build> <plugins> <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <configuration> <dataFile> ${jacoco.execFile} </dataFile> <outputDirectory> ${jacoco.report.dir} </outputDirectory> </configuration> <executions> <execution> <id> xml-report </id> <goals> <goal> report </goal> </goals> </execution> </executions> </plugin> </plugins> </build> </profile> Dans un profile sp\u00e9cifique, sonar : - on d\u00e9clare l'utilisation du plugin sonar <profile> <id> sonar </id> <build> <plugins> <plugin> <groupId> org.sonarsource.scanner.maven </groupId> <artifactId> sonar-maven-plugin </artifactId> </plugin> </plugins> </build> </profile> On peut maintenant ex\u00e9cuter les commandes suivante: # G\u00e9n\u00e9ration du rapport binaire mvn -Pgenerate-jacoco-exec clean verify # G\u00e9n\u00e9ration du rapport XML mvn -Pgenerate-jacoco-report jacoco:report -N # Analyse Sonar mvn -Psonar sonar:sonar -Dsonar.host.url = http://my.own.sonar.com","title":"TL;DR"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#integration-dans-une-pipeline-jenkins-multibranche","text":"pipeline { agent { label 'maven3 && java10' } stages { stage ( 'Checkout' ) { steps { checkout scm } } stage ( 'Generate JaCoCo Report' ) { steps { withMaven () { sh \"mvn -Pgenerate-jacoco-exec verify\" sh \"mvn -Pgenerate-jacoco-report jacoco:report -N\" } } } stage ( 'Send to Sonar' ) { steps { withMaven () { sh \"mvn -Psonar sonar:sonar -Dsonar.host.url=http://my.own.sonar.com\" } } } } }","title":"Int\u00e9gration dans une pipeline Jenkins Multibranche"},{"location":"blog/2019-04-04---Howto--the-use-of-JaCoCo/#conclusion","text":"G\u00e9n\u00e9rer un rapport Sonar coh\u00e9rent, c'est possible avec JaCoCo. Ce n'est qu'une question de configuration, avec des outils pas toujours homog\u00e8nes.","title":"Conclusion"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/","text":"A la rencontre d'une pratique : le Pair-Programming \u00b6 Vous en avez probablement d\u00e9j\u00e0 entendu parler, peut-\u00eatre que vous l'utilisez d\u00e9j\u00e0, le Pair-Programming est une pratique de d\u00e9veloppement mettant deux d\u00e9veloppeurs \u00e0 contribution, pour d\u00e9velopper ensemble un m\u00eame logiciel. Le Pair-Programming est l'une des 12 pratiques issues de l'eXtreme Programming ( \"eXtreme Programming Explained\", Kent Beck, 1999 ), qui propose de faire du Pair-Programming tout le temps, quel que soit le sujet. Il s'agit de l'une des 12 pratiques qui nous viennent de l'eXtreme Programming ( \"Extreme Programming Explained\", Kent Beck, 1999 ), qui propose de faire du Pair-Programming tout le temps, sur tous les sujets. Mais comment est-ce que \u00e7a fonctionne dans la vraie vie ? Pairer : deux personnes, une machine \u00b6 Pour faire simple ; le Pair-Programming, c'est de faire travailler deux personnes sur une seule machine. Point. Une seule machine. Une seule machine. UNE SEULE machine. Encore une fois ? UNE SEULE MACHINE. C'est-\u00e0-dire un seul clavier, une seule souris, et un m\u00eame \u00e9cran. \u00c7a veut \u00e9galement dire : une seule et m\u00eame source d'information pour les deux d\u00e9veloppeurs. Ca veut dire : ni ordinateur portable suppl\u00e9mentaire, ni t\u00e9l\u00e9phone portable pendant la session de pair-programming. Lorsque deux d\u00e9veloppeurs travaillent ensemble sur une m\u00eame fonctionnalit\u00e9, mais que chacun travaille sur sa machine, \u00e7a n'est pas du Pair-Programming. L'id\u00e9e derri\u00e8re cette fa\u00e7on de faire, est d'avoir deux points de vue sur la m\u00eame information. Quand la paire avance sur du code, il y a une revue permanente du code. Quand la paire analyse de l'information, elle partage deux compr\u00e9hension diff\u00e9rentes, et on peut parler d'intelligence collective. L'avantage principal de cette fa\u00e7on de faire, est d'am\u00e9liorer la r\u00e9activit\u00e9 face aux blocages qui emp\u00eacheraient une personne seule d'avancer. Les \u00e9quipes pratiquant le Pair-Programming se sont rendues compte que la qualit\u00e9 de leur logiciel augmentait, et sans doubler le temps de d\u00e9veloppement. Elles arrivaient \u00e0 d\u00e9cortiquer plus rapidement les difficult\u00e9s auxquelles elles \u00e9taient confront\u00e9es, et arrivaient \u00e0 rester concentr\u00e9es sur une seule t\u00e2che \u00e0 la fois, ce qui leur permettait d'\u00e9crire moins de code pour impl\u00e9menter une m\u00eame fonctionnalit\u00e9. \u00c7a a l'air facile, dit comme \u00e7a, mais la r\u00e9alit\u00e9 est tout autre. Comment \u00e7a fonctionne \u00b6 Chaque d\u00e9veloppeur a son r\u00f4le \u00e0 jouer. Deux d\u00e9veloppeurs, donc deux r\u00f4les. Driver \u00b6 Le \"Driver\", ou \"Pilote\" en fran\u00e7ais, est le d\u00e9veloppeur qui a la main sur le clavier et la souris. C'est le seul du bin\u00f4me \u00e0 pouvoir agir sur la machine. Navigator \u00b6 Le \"Navigator\", ou \" Copilote\" en fran\u00e7ais, n'agit pas directement sur la machine. Il peut, et doit prendre du recul sur ce que le bin\u00f4me produit. Driver et Navigator sont des r\u00f4les tournants. C'est-\u00e0-dire que les deux participants alternent les r\u00f4les. Pour garder un bon rythme, il est conseill\u00e9 de changer de r\u00f4le fr\u00e9quemment. Pr\u00e9-requis. \u00b6 Pour pouvoir faire correctement du Pair-Programming, il faut instaurer un climat de confiance, et aligner les deux d\u00e9veloppeurs sur une m\u00eame fa\u00e7on de travailler. Pour cela, chaque bin\u00f4me doit d\u00e9finir des r\u00e8gles, une charte de travail. Volontaires Le Pair-Programming ne fonctionne pas s\u2019il est impos\u00e9 ; on doit y adh\u00e9rer Ne pas l\u2019imposer sur les d\u00e9veloppeurs, mais on peut l\u2019imposer sur une t\u00e2che. Actifs et impliqu\u00e9s N\u2019a aucun int\u00e9r\u00eat si l\u2019un des deux est passif Align\u00e9s Le bin\u00f4me travaille sur une m\u00eame t\u00e2che, avec le m\u00eame but Synchronis\u00e9s La paire doit \u00eatre au m\u00eame niveau d\u2019information sur ce qui est affich\u00e9 \u00e0 l\u2019\u00e9cran \u00c9changeant les r\u00f4les Rythme le d\u00e9veloppement, et multiple les points de vue Communication Le Pair-Programming est une activit\u00e9 sociale Parler Donnez du feedback \u00e0 votre bin\u00f4me en lui parlant ! Bienveillance \u2026 et respect Quelques conseils \u00b6 Don't be afraid of pair programming: You're not as good as you think you are, but You're not as bad as you fear Ron Jeffries Impl\u00e9menter et se planter, au lieu de se disputer Rythme, Pauses. Pomodoro. \u00b6 Pour \u00eatre efficace tout au long de la journ\u00e9e, il est n\u00e9cessaire d'utiliser correctement son \u00e9nergie, et d'avoir un bon flux de d\u00e9veloppement. Le flux, vient du rythme que le bin\u00f4me arrive \u00e0 instaurer dans sa mani\u00e8re de travailler; ce dernier se met en place en alternant r\u00e9guli\u00e8rment les r\u00f4les des d\u00e9veloppeurs, et en faisant des pauses r\u00e9guli\u00e8res. Une m\u00e9thode qui fonctionne bien pour fair des pauses r\u00e9guli\u00e8res: le Pomodoro. Elle consite \u00e0 se donner \u00e0 fond sur un sujet pendant 25 minutes, puis d'enchainer avec 5 minutes de vraie pause, c'est \u00e0 dire, changer d'air, parler d'autre chose, mais pas du travail. La pause n'est pas le moment de consulter ses emails. Quelques patterns \u00b6 WardAndKent lead a BOF at OOPSLA'97 that included looking for patterns in the code and in the recorded dialog between programmers as they work together. These are the patterns they found ... Let me drive. (One of the idioms of PairProgramming) Trust me. (Sometimes you have an idea for how to do something, but not the words to explain it. \"Trust me\" gives you a couple of minutes to type it in without your partner stopping you.) look where you would write it. (When looking to see whether a method you need already exists, look in the place you would put it if you had to write it.) AskTheComputer. (Don't reason about what will happen if you do X. Do X and see what happens. Send the message and see what it does.) BlameYourselfFirst. E-mail : autre article d\u00e9di\u00e9. Quelques styles \u00b6 Strong Style Navigation \u00b6 For an idea to go from your head into the computer it MUST go through someone else's hands\" Llewellyn Falco Cette citation de Llewellyn Falco, est l'essence m\u00eame du Pair-Programming \"Strong Style\". La seule contrainte du Pair-Programming: deux personne sur une seule machine. Le Strong Style ajoute une contrainte au Pair-Programming : \"Toute id\u00e9e doit \u00eatre exprim\u00e9e et passer par les main d'un autre d\u00e9veloppeur avant d'appara\u00eetre dans le code\". Lorsqu'une id\u00e9e d'impl\u00e9mentation germe dans la t\u00eate d'un d\u00e9veloppeur, il doit prendre le temps de l'exprimer et c'est \u00e0 son bin\u00f4me de prendre le clavier et de l'impl\u00e9menter. Le Driver cesse alors de s'int\u00e9resser au \"Quoi\" pour se concentrer sur le \"Comment\". Ce qui peut se r\u00e9sumer par le mantra : Ne pas cogiter au clavier Le Navigator d\u00e9crit son id\u00e9e : prend sur lui de trouver le \"Quoi\", et il peut contribuer \u00e0 exprimer le \"Comment\". Il exprime dans cet ordre: Intention \"Cr\u00e9\u00e9 une variable que l'on appellera 'd\u00e9compte'\" Emplacement \"\u00c0 la ligne 27 et demi (une nouvelle ligne entre la #27 & #28 )\" D\u00e9tails \"Tape v,a,r espace 'd\u00e9compte' \u00e9gal 1\" Les \u00e9tapes \"Emplacement\" et \"D\u00e9tails\" peuvent \u00eatre superflues. Tant que c'est possible, laissez-les dans les mains du Driver. Ping Pong. \u00b6 Le \"Ping Pong\" est une mani\u00e8re d'alterner le clavier de mani\u00e8re ludique. Mais elle implique une contrainte suppl\u00e9mentaire: pratiquer le TDD (Test Driven Development). Le principe du Ping Pong : faire tourner le clavier au rythme du cycle de TDD. Exemple : Alice \u00e9crit un test en \u00e9chec (Red) Alice donne le clavier \u00e0 Bertrand. Bertrand \u00e9crit le minimum de code pour faire passer le test (Green) Bertrand donne le clavier \u00e0 Alice. Alice remanie le code, pour qu'il satisfasse ses exigences de qualit\u00e9 et de design (Refactor) Alice donne le clavier \u00e0 Bertrand. Bertrand \u00e9crit un test en \u00e9chec (Red) ... on it\u00e8re Autre exemple, plus simple \u00e0 mettre en \u0153uvre: Alice \u00e9crit un test en \u00e9chec (Red) Alice donne le clavier \u00e0 Bertrand. Bertrand \u00e9crit le minimum de code pour faire passer le test (Green) Bertrand remanie le code, pour qu'il satisfasse ses exigences de qualit\u00e9 et de design (Refactor) Bertrand \u00e9crit un test en \u00e9chec (Red) Bertrand donne le clavier \u00e0 Alice. ... on it\u00e8re Chaque \u00e9tape du Ping Pong poss\u00e8de c\u00f4t\u00e9 ludique, o\u00f9 l'on joue avec son partenaire pour faire avancer le code dans la meilleure direction. Il y a bien d'autres styles de Pair Programming. Il y en a autant que deux bin\u00f4mes. Les deux styles ci-dessus sont les plus communs, mais adaptez les \u00e0 votre usage. Quelques Smells \u00b6 Pairer vs. bin\u00f4mer. \u00b6 Ego \u00b6 Quand un d\u00e9veloppeur travaille, il met son intellect \u00e0 contribution. Notre m\u00e9tier consiste \u00e0 trouver l'algorithme le plus appropri\u00e9 au m\u00e9tier, et \u00e0 le servir aux utilisateurs. Quand deux d\u00e9veloppeurs travaillent ensembles, leurs deux cerveau travaillent sur un unique rendu final. Cela peut causer des probl\u00e8mes d' ego . -> Cr\u00e9ativit\u00e9 -> Propri\u00e9t\u00e9 commune du code D\u00e9sengagement. \u00b6 Deuxi\u00e8me machine. \u00b6 cf. Bin\u00f4mer ? Quelques exercices \u00b6 Pair-Programmer est une pratique difficile. Mais comme toute pratique de d\u00e9veloppement, on peut la travailler et s'entra\u00eener. Voici quelques exercices pour s'entra\u00eener, sans coder . Pair poetry. \u00b6 How tout drive with an unsatisying brain. \u00b6 Conclusion \u00b6 Le Pair-Programming apporte beaucoup aux d\u00e9veloppeurs, et \u00e0 leurs \u00e9quipes. Comme une majorit\u00e9 de pratiques de d\u00e9veloppement, cela demande un entra\u00eenement, et de la vigilance. Tomber dans les travers de la pratique peut s'av\u00e9rer extr\u00eamement n\u00e9faste, et pour les \u00e9viter, pas de secret : il faut pratiquer et prendre du recul sur notre mani\u00e8re de faire. Am\u00e9liorer continue. Etiquettes : Pratique de d\u00e9veloppement Pair-Programming Next : Pair Programme, comment cr\u00e9er le Flow?","title":"A la rencontre d'une pratique le Pair-Programming"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#a-la-rencontre-dune-pratique-le-pair-programming","text":"Vous en avez probablement d\u00e9j\u00e0 entendu parler, peut-\u00eatre que vous l'utilisez d\u00e9j\u00e0, le Pair-Programming est une pratique de d\u00e9veloppement mettant deux d\u00e9veloppeurs \u00e0 contribution, pour d\u00e9velopper ensemble un m\u00eame logiciel. Le Pair-Programming est l'une des 12 pratiques issues de l'eXtreme Programming ( \"eXtreme Programming Explained\", Kent Beck, 1999 ), qui propose de faire du Pair-Programming tout le temps, quel que soit le sujet. Il s'agit de l'une des 12 pratiques qui nous viennent de l'eXtreme Programming ( \"Extreme Programming Explained\", Kent Beck, 1999 ), qui propose de faire du Pair-Programming tout le temps, sur tous les sujets. Mais comment est-ce que \u00e7a fonctionne dans la vraie vie ?","title":"A la rencontre d'une pratique : le Pair-Programming"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#pairer-deux-personnes-une-machine","text":"Pour faire simple ; le Pair-Programming, c'est de faire travailler deux personnes sur une seule machine. Point. Une seule machine. Une seule machine. UNE SEULE machine. Encore une fois ? UNE SEULE MACHINE. C'est-\u00e0-dire un seul clavier, une seule souris, et un m\u00eame \u00e9cran. \u00c7a veut \u00e9galement dire : une seule et m\u00eame source d'information pour les deux d\u00e9veloppeurs. Ca veut dire : ni ordinateur portable suppl\u00e9mentaire, ni t\u00e9l\u00e9phone portable pendant la session de pair-programming. Lorsque deux d\u00e9veloppeurs travaillent ensemble sur une m\u00eame fonctionnalit\u00e9, mais que chacun travaille sur sa machine, \u00e7a n'est pas du Pair-Programming. L'id\u00e9e derri\u00e8re cette fa\u00e7on de faire, est d'avoir deux points de vue sur la m\u00eame information. Quand la paire avance sur du code, il y a une revue permanente du code. Quand la paire analyse de l'information, elle partage deux compr\u00e9hension diff\u00e9rentes, et on peut parler d'intelligence collective. L'avantage principal de cette fa\u00e7on de faire, est d'am\u00e9liorer la r\u00e9activit\u00e9 face aux blocages qui emp\u00eacheraient une personne seule d'avancer. Les \u00e9quipes pratiquant le Pair-Programming se sont rendues compte que la qualit\u00e9 de leur logiciel augmentait, et sans doubler le temps de d\u00e9veloppement. Elles arrivaient \u00e0 d\u00e9cortiquer plus rapidement les difficult\u00e9s auxquelles elles \u00e9taient confront\u00e9es, et arrivaient \u00e0 rester concentr\u00e9es sur une seule t\u00e2che \u00e0 la fois, ce qui leur permettait d'\u00e9crire moins de code pour impl\u00e9menter une m\u00eame fonctionnalit\u00e9. \u00c7a a l'air facile, dit comme \u00e7a, mais la r\u00e9alit\u00e9 est tout autre.","title":"Pairer : deux personnes, une machine"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#comment-ca-fonctionne","text":"Chaque d\u00e9veloppeur a son r\u00f4le \u00e0 jouer. Deux d\u00e9veloppeurs, donc deux r\u00f4les.","title":"Comment \u00e7a fonctionne"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#driver","text":"Le \"Driver\", ou \"Pilote\" en fran\u00e7ais, est le d\u00e9veloppeur qui a la main sur le clavier et la souris. C'est le seul du bin\u00f4me \u00e0 pouvoir agir sur la machine.","title":"Driver"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#navigator","text":"Le \"Navigator\", ou \" Copilote\" en fran\u00e7ais, n'agit pas directement sur la machine. Il peut, et doit prendre du recul sur ce que le bin\u00f4me produit. Driver et Navigator sont des r\u00f4les tournants. C'est-\u00e0-dire que les deux participants alternent les r\u00f4les. Pour garder un bon rythme, il est conseill\u00e9 de changer de r\u00f4le fr\u00e9quemment.","title":"Navigator"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#pre-requis","text":"Pour pouvoir faire correctement du Pair-Programming, il faut instaurer un climat de confiance, et aligner les deux d\u00e9veloppeurs sur une m\u00eame fa\u00e7on de travailler. Pour cela, chaque bin\u00f4me doit d\u00e9finir des r\u00e8gles, une charte de travail. Volontaires Le Pair-Programming ne fonctionne pas s\u2019il est impos\u00e9 ; on doit y adh\u00e9rer Ne pas l\u2019imposer sur les d\u00e9veloppeurs, mais on peut l\u2019imposer sur une t\u00e2che. Actifs et impliqu\u00e9s N\u2019a aucun int\u00e9r\u00eat si l\u2019un des deux est passif Align\u00e9s Le bin\u00f4me travaille sur une m\u00eame t\u00e2che, avec le m\u00eame but Synchronis\u00e9s La paire doit \u00eatre au m\u00eame niveau d\u2019information sur ce qui est affich\u00e9 \u00e0 l\u2019\u00e9cran \u00c9changeant les r\u00f4les Rythme le d\u00e9veloppement, et multiple les points de vue Communication Le Pair-Programming est une activit\u00e9 sociale Parler Donnez du feedback \u00e0 votre bin\u00f4me en lui parlant ! Bienveillance \u2026 et respect","title":"Pr\u00e9-requis."},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#quelques-conseils","text":"Don't be afraid of pair programming: You're not as good as you think you are, but You're not as bad as you fear Ron Jeffries Impl\u00e9menter et se planter, au lieu de se disputer","title":"Quelques conseils"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#rythme-pauses-pomodoro","text":"Pour \u00eatre efficace tout au long de la journ\u00e9e, il est n\u00e9cessaire d'utiliser correctement son \u00e9nergie, et d'avoir un bon flux de d\u00e9veloppement. Le flux, vient du rythme que le bin\u00f4me arrive \u00e0 instaurer dans sa mani\u00e8re de travailler; ce dernier se met en place en alternant r\u00e9guli\u00e8rment les r\u00f4les des d\u00e9veloppeurs, et en faisant des pauses r\u00e9guli\u00e8res. Une m\u00e9thode qui fonctionne bien pour fair des pauses r\u00e9guli\u00e8res: le Pomodoro. Elle consite \u00e0 se donner \u00e0 fond sur un sujet pendant 25 minutes, puis d'enchainer avec 5 minutes de vraie pause, c'est \u00e0 dire, changer d'air, parler d'autre chose, mais pas du travail. La pause n'est pas le moment de consulter ses emails.","title":"Rythme, Pauses. Pomodoro."},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#quelques-patterns","text":"WardAndKent lead a BOF at OOPSLA'97 that included looking for patterns in the code and in the recorded dialog between programmers as they work together. These are the patterns they found ... Let me drive. (One of the idioms of PairProgramming) Trust me. (Sometimes you have an idea for how to do something, but not the words to explain it. \"Trust me\" gives you a couple of minutes to type it in without your partner stopping you.) look where you would write it. (When looking to see whether a method you need already exists, look in the place you would put it if you had to write it.) AskTheComputer. (Don't reason about what will happen if you do X. Do X and see what happens. Send the message and see what it does.) BlameYourselfFirst. E-mail : autre article d\u00e9di\u00e9.","title":"Quelques patterns"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#quelques-styles","text":"","title":"Quelques styles"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#strong-style-navigation","text":"For an idea to go from your head into the computer it MUST go through someone else's hands\" Llewellyn Falco Cette citation de Llewellyn Falco, est l'essence m\u00eame du Pair-Programming \"Strong Style\". La seule contrainte du Pair-Programming: deux personne sur une seule machine. Le Strong Style ajoute une contrainte au Pair-Programming : \"Toute id\u00e9e doit \u00eatre exprim\u00e9e et passer par les main d'un autre d\u00e9veloppeur avant d'appara\u00eetre dans le code\". Lorsqu'une id\u00e9e d'impl\u00e9mentation germe dans la t\u00eate d'un d\u00e9veloppeur, il doit prendre le temps de l'exprimer et c'est \u00e0 son bin\u00f4me de prendre le clavier et de l'impl\u00e9menter. Le Driver cesse alors de s'int\u00e9resser au \"Quoi\" pour se concentrer sur le \"Comment\". Ce qui peut se r\u00e9sumer par le mantra : Ne pas cogiter au clavier Le Navigator d\u00e9crit son id\u00e9e : prend sur lui de trouver le \"Quoi\", et il peut contribuer \u00e0 exprimer le \"Comment\". Il exprime dans cet ordre: Intention \"Cr\u00e9\u00e9 une variable que l'on appellera 'd\u00e9compte'\" Emplacement \"\u00c0 la ligne 27 et demi (une nouvelle ligne entre la #27 & #28 )\" D\u00e9tails \"Tape v,a,r espace 'd\u00e9compte' \u00e9gal 1\" Les \u00e9tapes \"Emplacement\" et \"D\u00e9tails\" peuvent \u00eatre superflues. Tant que c'est possible, laissez-les dans les mains du Driver.","title":"Strong Style Navigation"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#ping-pong","text":"Le \"Ping Pong\" est une mani\u00e8re d'alterner le clavier de mani\u00e8re ludique. Mais elle implique une contrainte suppl\u00e9mentaire: pratiquer le TDD (Test Driven Development). Le principe du Ping Pong : faire tourner le clavier au rythme du cycle de TDD. Exemple : Alice \u00e9crit un test en \u00e9chec (Red) Alice donne le clavier \u00e0 Bertrand. Bertrand \u00e9crit le minimum de code pour faire passer le test (Green) Bertrand donne le clavier \u00e0 Alice. Alice remanie le code, pour qu'il satisfasse ses exigences de qualit\u00e9 et de design (Refactor) Alice donne le clavier \u00e0 Bertrand. Bertrand \u00e9crit un test en \u00e9chec (Red) ... on it\u00e8re Autre exemple, plus simple \u00e0 mettre en \u0153uvre: Alice \u00e9crit un test en \u00e9chec (Red) Alice donne le clavier \u00e0 Bertrand. Bertrand \u00e9crit le minimum de code pour faire passer le test (Green) Bertrand remanie le code, pour qu'il satisfasse ses exigences de qualit\u00e9 et de design (Refactor) Bertrand \u00e9crit un test en \u00e9chec (Red) Bertrand donne le clavier \u00e0 Alice. ... on it\u00e8re Chaque \u00e9tape du Ping Pong poss\u00e8de c\u00f4t\u00e9 ludique, o\u00f9 l'on joue avec son partenaire pour faire avancer le code dans la meilleure direction. Il y a bien d'autres styles de Pair Programming. Il y en a autant que deux bin\u00f4mes. Les deux styles ci-dessus sont les plus communs, mais adaptez les \u00e0 votre usage.","title":"Ping Pong."},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#quelques-smells","text":"","title":"Quelques Smells"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#pairer-vs-binomer","text":"","title":"Pairer vs. bin\u00f4mer."},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#ego","text":"Quand un d\u00e9veloppeur travaille, il met son intellect \u00e0 contribution. Notre m\u00e9tier consiste \u00e0 trouver l'algorithme le plus appropri\u00e9 au m\u00e9tier, et \u00e0 le servir aux utilisateurs. Quand deux d\u00e9veloppeurs travaillent ensembles, leurs deux cerveau travaillent sur un unique rendu final. Cela peut causer des probl\u00e8mes d' ego . -> Cr\u00e9ativit\u00e9 -> Propri\u00e9t\u00e9 commune du code","title":"Ego"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#desengagement","text":"","title":"D\u00e9sengagement."},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#deuxieme-machine","text":"cf. Bin\u00f4mer ?","title":"Deuxi\u00e8me machine."},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#quelques-exercices","text":"Pair-Programmer est une pratique difficile. Mais comme toute pratique de d\u00e9veloppement, on peut la travailler et s'entra\u00eener. Voici quelques exercices pour s'entra\u00eener, sans coder .","title":"Quelques exercices"},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#pair-poetry","text":"","title":"Pair poetry."},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#how-tout-drive-with-an-unsatisying-brain","text":"","title":"How tout drive with an unsatisying brain."},{"location":"blog/A%20la%20rencontre%20d%27une%20pratique%20%20le%20Pair%20programming/#conclusion","text":"Le Pair-Programming apporte beaucoup aux d\u00e9veloppeurs, et \u00e0 leurs \u00e9quipes. Comme une majorit\u00e9 de pratiques de d\u00e9veloppement, cela demande un entra\u00eenement, et de la vigilance. Tomber dans les travers de la pratique peut s'av\u00e9rer extr\u00eamement n\u00e9faste, et pour les \u00e9viter, pas de secret : il faut pratiquer et prendre du recul sur notre mani\u00e8re de faire. Am\u00e9liorer continue. Etiquettes : Pratique de d\u00e9veloppement Pair-Programming Next : Pair Programme, comment cr\u00e9er le Flow?","title":"Conclusion"},{"location":"blog/Le%20jeu%20de%20r%C3%B4le%20%20m%C3%A9thodologie%20de%20d%C3%A9veloppement%20en%20informatique/","text":"Le jeu de r\u00f4le : m\u00e9thodologie de d\u00e9veloppement en informatique ? \u00b6 HEllo Vous aimer jouer ? Moi oui. Ca tombe bien, l'amusement rest le meilleur levier/moteur de l'apprendtissage (voir source) et de l'\u00e9volution. \"L'informatiquz c'est ludique\" comme on dit chez moi.\" Et vous n'imaginez pas \u00e0 quel point. Vous connaisser les jeux de r\u00f4le ? Donjon, Shadowrun, L'Appel de Ctulu, l'Oeil Noir, et j'en passe. Vous n'imaginez m\u00eame pas le nombre de similitudes qu' lon peut trouver centre ces jeux et le d\u00e9veloppement en informatique. Je me proposer d'en montrer quelques unqs, et de voir comment ont peut les utiliser dans notre queotdien professionnel. -> montrer ce que le jdr pourrait apporter \u00e0 la pratique du dev Developpement informatique \u00b6 Objectif : construire un logiciel qui satisfasse dans le temps les usagers auxquels il est destin\u00e9. Comment ? En co-constuisant des UserStories. R\u00f4les \u00b6 Client Programmeur Coach On s'arr\u00eatera l\u00e0 en terme de \"d\u00e9veloppeur un logiciel\" pour les besoins de l'article. Si on voulait mener le parall\u00e8le jusqu'au bout, on devrait introduire ; des testeurs, des ops et tout un tas d'autres m\u00e9tiers, afin de voir pousser notre logiciel jusqu'en prod. On s'arr\u00eate l\u00e0 pour les besoins de l'article. On Pourrait ## Comment d\u00e9velopper ? Le client synth\u00e9tise ses besoins Jeu de r\u00f4le \u00b6 R\u00e9union de personnes ayaznt pour objectif de s'amuser. Comment ? En co-construidsant une histoire. R\u00f4les: \u00b6 Joueur Les personnes qui se retrouvent autour de la table de jeu, sont les \"joueurs\". Chaque joueur incarne un personnage, son avatar dans le jeu, et cherche \u00e0 faire avancer l'histoire en fonction de ses envies et de ses motivations. Les aventuriers peuvent r\u00e9soudre des \u00e9nigmes, parler entre eux, combattre des cr\u00e9atures fantastiques, d\u00e9couvrir des objets fabuleux et bien d\u2019autres tr\u00e9sors Aide DD Maitre du jeu Le maitre du jeu est un joueur dont la responsabilit\u00e9 est de faire avancer l'histoire. Il tient les cl\u00e9s du sc\u00e9nario et peut intervenir dans le jeu au travers de multiples avatars : montres, cr\u00e9atures fantastiques, ou poersonnages \"non joueurs\". Le MD d\u00e9crit l\u2019environnement. Il dit aux joueurs o\u00f9 ils sont plac\u00e9s, ce qui les entoure et les options qui s\u2019offrent \u00e0 eux (le nombre de portes dans une pi\u00e8ce, ce qu\u2019il y a sur une table, les personnes pr\u00e9sentes dans une taverne, etc.). On s'arr\u00eatera l\u00e0 en terme de r\u00f4le pour \"cr\u00e9er une histoire\". Si on voulait mener le parall\u00e8le jusqu'au bout, on devrait introduire ; des relecteurs, des \u00e9diteurs et des imprimeurs, afin de voir pousser notre histoire jusqu'en librairie. Comment jouer ? \u00b6 1. Le MD d\u00e9crit l\u2019environnement. Il dit aux joueurs o\u00f9 ils sont plac\u00e9s, ce qui les entoure et les options qui s\u2019offrent \u00e0 eux (le nombre de portes dans une pi\u00e8ce, ce qu\u2019il y a sur une table, les personnes pr\u00e9sentes dans une taverne, etc.). 2. Les joueurs d\u00e9crivent ce qu\u2019ils souhaitent faire. Parfois un joueur peut parler au nom du groupe, en disant \u00ab o*n prend la porte \u00e0 l\u2019Est* \u00bb par exemple. Parfois, les aventuriers m\u00e8nent des actions diff\u00e9rentes : l\u2019un d\u2019eux peut chercher un coffre aux tr\u00e9sors pendant qu\u2019un autre examine des runes grav\u00e9es sur un mur et un troisi\u00e8me reste \u00e0 l\u2019aff\u00fbt d\u2019un ennemi potentiel. Le MD n\u2019a pas forc\u00e9ment besoin de d\u00e9finir un ordre, mais il doit \u00e9couter chaque joueur et mettre en \u0153uvre toutes ces demandes. Parfois, r\u00e9soudre une action peut se r\u00e9v\u00e9ler chose facile. Si un aventurier veut traverser une salle et ouvrir une porte, le MD d\u00e9crit juste que la porte s\u2019ouvre et ce qui se trouve au-del\u00e0. Mais la porte peut \u00eatre verrouill\u00e9e, un pi\u00e8ge mortel peut \u00eatre dissimul\u00e9 au sol, ou d\u2019autres circonstances peuvent se r\u00e9v\u00e9ler un v\u00e9ritable d\u00e9fi pour le personnage. Dans ce cas, le MD d\u00e9cide de ce qu\u2019il se passe, se basant souvent sur les r\u00e9sultats des d\u00e9s pour d\u00e9terminer l\u2019issue des diff\u00e9rentes situations. 3. Le MD d\u00e9crit le r\u00e9sultat des actions des joueurs. Les r\u00e9sultats d\u2019actions m\u00e8nent souvent \u00e0 d\u2019autres prises de d\u00e9cision, ce qui nous ram\u00e8ne \u00e0 la premi\u00e8re \u00e9tape. Ce sch\u00e9ma s\u2019applique que les aventuriers explorent des ruines, s\u2019entretiennent avec un prince ou m\u00e8nent un combat d\u00e9cisif contre un puissant dragon. Dans certaines situations, surtout en combat, l\u2019action est plus structur\u00e9e et les joueurs (MD y compris) agissent chacun leur tour pour choisir et r\u00e9aliser leurs actions. Le plus souvent, le jeu est fluide et souple, s\u2019adaptant \u00e0 toutes les situations de l\u2019aventure. Qu'est ce qu'on met derri\u00e8re \u00b6 pilliers du Jdr -> activit\u00e9s des joueurs: combat, exploration, interaction sociales. autres piliers: les rencontres/d\u00e9fis, Acc\u00e8s \u00e0 l'information , D\u00e9placement/voyages http://de-dale.hd.free.fr/sph\u00e9rier/concepts/jdr","title":"Le jeu de r\u00f4le : m\u00e9thodologie de d\u00e9veloppement en informatique ?"},{"location":"blog/Le%20jeu%20de%20r%C3%B4le%20%20m%C3%A9thodologie%20de%20d%C3%A9veloppement%20en%20informatique/#le-jeu-de-role-methodologie-de-developpement-en-informatique","text":"HEllo Vous aimer jouer ? Moi oui. Ca tombe bien, l'amusement rest le meilleur levier/moteur de l'apprendtissage (voir source) et de l'\u00e9volution. \"L'informatiquz c'est ludique\" comme on dit chez moi.\" Et vous n'imaginez pas \u00e0 quel point. Vous connaisser les jeux de r\u00f4le ? Donjon, Shadowrun, L'Appel de Ctulu, l'Oeil Noir, et j'en passe. Vous n'imaginez m\u00eame pas le nombre de similitudes qu' lon peut trouver centre ces jeux et le d\u00e9veloppement en informatique. Je me proposer d'en montrer quelques unqs, et de voir comment ont peut les utiliser dans notre queotdien professionnel. -> montrer ce que le jdr pourrait apporter \u00e0 la pratique du dev","title":"Le jeu de r\u00f4le : m\u00e9thodologie de d\u00e9veloppement en informatique ?"},{"location":"blog/Le%20jeu%20de%20r%C3%B4le%20%20m%C3%A9thodologie%20de%20d%C3%A9veloppement%20en%20informatique/#developpement-informatique","text":"Objectif : construire un logiciel qui satisfasse dans le temps les usagers auxquels il est destin\u00e9. Comment ? En co-constuisant des UserStories.","title":"Developpement informatique"},{"location":"blog/Le%20jeu%20de%20r%C3%B4le%20%20m%C3%A9thodologie%20de%20d%C3%A9veloppement%20en%20informatique/#roles","text":"Client Programmeur Coach On s'arr\u00eatera l\u00e0 en terme de \"d\u00e9veloppeur un logiciel\" pour les besoins de l'article. Si on voulait mener le parall\u00e8le jusqu'au bout, on devrait introduire ; des testeurs, des ops et tout un tas d'autres m\u00e9tiers, afin de voir pousser notre logiciel jusqu'en prod. On s'arr\u00eate l\u00e0 pour les besoins de l'article. On Pourrait ## Comment d\u00e9velopper ? Le client synth\u00e9tise ses besoins","title":"R\u00f4les"},{"location":"blog/Le%20jeu%20de%20r%C3%B4le%20%20m%C3%A9thodologie%20de%20d%C3%A9veloppement%20en%20informatique/#jeu-de-role","text":"R\u00e9union de personnes ayaznt pour objectif de s'amuser. Comment ? En co-construidsant une histoire.","title":"Jeu de r\u00f4le"},{"location":"blog/Le%20jeu%20de%20r%C3%B4le%20%20m%C3%A9thodologie%20de%20d%C3%A9veloppement%20en%20informatique/#roles_1","text":"Joueur Les personnes qui se retrouvent autour de la table de jeu, sont les \"joueurs\". Chaque joueur incarne un personnage, son avatar dans le jeu, et cherche \u00e0 faire avancer l'histoire en fonction de ses envies et de ses motivations. Les aventuriers peuvent r\u00e9soudre des \u00e9nigmes, parler entre eux, combattre des cr\u00e9atures fantastiques, d\u00e9couvrir des objets fabuleux et bien d\u2019autres tr\u00e9sors Aide DD Maitre du jeu Le maitre du jeu est un joueur dont la responsabilit\u00e9 est de faire avancer l'histoire. Il tient les cl\u00e9s du sc\u00e9nario et peut intervenir dans le jeu au travers de multiples avatars : montres, cr\u00e9atures fantastiques, ou poersonnages \"non joueurs\". Le MD d\u00e9crit l\u2019environnement. Il dit aux joueurs o\u00f9 ils sont plac\u00e9s, ce qui les entoure et les options qui s\u2019offrent \u00e0 eux (le nombre de portes dans une pi\u00e8ce, ce qu\u2019il y a sur une table, les personnes pr\u00e9sentes dans une taverne, etc.). On s'arr\u00eatera l\u00e0 en terme de r\u00f4le pour \"cr\u00e9er une histoire\". Si on voulait mener le parall\u00e8le jusqu'au bout, on devrait introduire ; des relecteurs, des \u00e9diteurs et des imprimeurs, afin de voir pousser notre histoire jusqu'en librairie.","title":"R\u00f4les:"},{"location":"blog/Le%20jeu%20de%20r%C3%B4le%20%20m%C3%A9thodologie%20de%20d%C3%A9veloppement%20en%20informatique/#comment-jouer","text":"1. Le MD d\u00e9crit l\u2019environnement. Il dit aux joueurs o\u00f9 ils sont plac\u00e9s, ce qui les entoure et les options qui s\u2019offrent \u00e0 eux (le nombre de portes dans une pi\u00e8ce, ce qu\u2019il y a sur une table, les personnes pr\u00e9sentes dans une taverne, etc.). 2. Les joueurs d\u00e9crivent ce qu\u2019ils souhaitent faire. Parfois un joueur peut parler au nom du groupe, en disant \u00ab o*n prend la porte \u00e0 l\u2019Est* \u00bb par exemple. Parfois, les aventuriers m\u00e8nent des actions diff\u00e9rentes : l\u2019un d\u2019eux peut chercher un coffre aux tr\u00e9sors pendant qu\u2019un autre examine des runes grav\u00e9es sur un mur et un troisi\u00e8me reste \u00e0 l\u2019aff\u00fbt d\u2019un ennemi potentiel. Le MD n\u2019a pas forc\u00e9ment besoin de d\u00e9finir un ordre, mais il doit \u00e9couter chaque joueur et mettre en \u0153uvre toutes ces demandes. Parfois, r\u00e9soudre une action peut se r\u00e9v\u00e9ler chose facile. Si un aventurier veut traverser une salle et ouvrir une porte, le MD d\u00e9crit juste que la porte s\u2019ouvre et ce qui se trouve au-del\u00e0. Mais la porte peut \u00eatre verrouill\u00e9e, un pi\u00e8ge mortel peut \u00eatre dissimul\u00e9 au sol, ou d\u2019autres circonstances peuvent se r\u00e9v\u00e9ler un v\u00e9ritable d\u00e9fi pour le personnage. Dans ce cas, le MD d\u00e9cide de ce qu\u2019il se passe, se basant souvent sur les r\u00e9sultats des d\u00e9s pour d\u00e9terminer l\u2019issue des diff\u00e9rentes situations. 3. Le MD d\u00e9crit le r\u00e9sultat des actions des joueurs. Les r\u00e9sultats d\u2019actions m\u00e8nent souvent \u00e0 d\u2019autres prises de d\u00e9cision, ce qui nous ram\u00e8ne \u00e0 la premi\u00e8re \u00e9tape. Ce sch\u00e9ma s\u2019applique que les aventuriers explorent des ruines, s\u2019entretiennent avec un prince ou m\u00e8nent un combat d\u00e9cisif contre un puissant dragon. Dans certaines situations, surtout en combat, l\u2019action est plus structur\u00e9e et les joueurs (MD y compris) agissent chacun leur tour pour choisir et r\u00e9aliser leurs actions. Le plus souvent, le jeu est fluide et souple, s\u2019adaptant \u00e0 toutes les situations de l\u2019aventure.","title":"Comment jouer ?"},{"location":"blog/Le%20jeu%20de%20r%C3%B4le%20%20m%C3%A9thodologie%20de%20d%C3%A9veloppement%20en%20informatique/#quest-ce-quon-met-derriere","text":"pilliers du Jdr -> activit\u00e9s des joueurs: combat, exploration, interaction sociales. autres piliers: les rencontres/d\u00e9fis, Acc\u00e8s \u00e0 l'information , D\u00e9placement/voyages http://de-dale.hd.free.fr/sph\u00e9rier/concepts/jdr","title":"Qu'est ce qu'on met derri\u00e8re"},{"location":"blog/97-things/","text":"En juillet, sur LinkedIn, je suis tomb\u00e9 sur ce post, d' Emily Bache Je suis fan du personnage, d\u00e9veloppeur, et curieux. Je me suis donc attel\u00e9 \u00e0 la recherche et \u00e0 lecture du livre \"97 Things Every Java Programmer Should Know\" ... Echec cuisant : Je me suis tromp\u00e9 dans le titre du livre. ... Mais j'ai trouv\u00e9 autre chose : le livre \"97 Things Every Programmer Should Know\" (sans \"Java\"), datant de 2010, disponible sous GitHub , GitBook , sous une license Creative Commons , et je l'ai lu (en partie). Le livre est chouette, facile \u00e0 lire, et balaie un large panel de sujet. Il regroupe 97 conseils sur le d\u00e9veloppement informatique, sur deux pages maximum. Rien n'est profond\u00e9ment creus\u00e9, mais certaines anecdotes nous rappellent notre quotidien de d\u00e9veloppeur, OPS, testeur, ou d'autres m\u00e9tiers du d\u00e9veloppement logiciel. Dans la suite de cet article, je vous propose de parcourir ce que j'ai compris des 25 premiers conseils. #1 . Agir avec Prudence \u00b6 Act with Prudence ( Thing 01 ) \u2014 SebRose Whatever you undertake, act with prudence and consider the consequences. \u2014 Anonyme Parfois, dans le d\u00e9veloppement logiciel, on nous demande de choisir entre \" faites le vite \" et \" faites le bien \". Bien souvent, le \" faites-le vite \" est accompagn\u00e9 de l'intention \" on l'am\u00e9liorera plus tard \". Martin Fowler appelle cette pratique la \" dette technique intentionnelle \" [ 1 ]. La dette technique intentionnelle est un emprunt , que vous contractez sur le budget de votre projet. Vous en recevez des b\u00e9n\u00e9fices \u00e0 court terme, mais plus vous la conservez longtemps, plus elle sera difficile \u00e0 rembourser. Parfois, ce sera tout bonnement impossible. Soyez prudent quand vous en introduisez, et soyez conscient des impacts que cette dette peut avoir sur votre projet. Aussi : remboursez votre dette technique aussi vite que possible. Faire autrement serait imprudent. #2 . Appliquez les principes de la programmation Fonctionnelle \u00b6 Apply Functional Programming Principles ( Thing 02 ) \u2014 Edward Garson Les paradigmes de la programmation fonctionnelle vous permettent d'am\u00e9liorer grandement la qualit\u00e9 de votre code. Et ce, m\u00eame dans des languages utilisant d'autres paradigmes comme les langages imp\u00e9ratifs, ou les langages orient\u00e9s objet. En effet, votre design fera preuve d'une meilleure transparence r\u00e9f\u00e9rentielle . La transparence r\u00e9f\u00e9rentielle, c'est quelque chose que vous souhaitez pour le design de votre code, m\u00eame si vous le ne savez pas encore. Cela implique que toutes vos fonctions sont pures , c'est-\u00e0-dire que, pour les m\u00eames param\u00e8tres d'entr\u00e9e, elles auront toujours le m\u00eame comportement. Sans effet de bord. Aussi ; prenez le temps de vous int\u00e9resser \u00e0 la programmation fonctionnelle pour utiliser ses b\u00e9n\u00e9fices d\u00e8s que vous vous avez besoin. #3 . Demandez-vous \"Que ferait l'utilisateur ?\" (Ce que vous n'\u00eates pas) \u00b6 Ask \"What Would the User Do?\" (You Are not the User) ( Thing 03 ) \u2014 Giles Colborne Nous avons tendance \u00e0 croire que les autres pensent comme nous. Ce n'est pas le cas, et il existe un biais cognitif pour le d\u00e9crire : l' Effet de faux consensus . Ce biais permet d'expliquer pourquoi les d\u00e9veloppeurs, qui passent davantage de temps \u00e0 utiliser l'informatique que leurs utilisateurs, ont du mal \u00e0 comprendre que ces derniers ma\u00eetrisent mal les outils et les patterns de l'informatique. Pour comprendre comment l'utilisateur fonctionne, le meilleur moyen reste encore l'observation. Observez quelqu'un utiliser l'application que vous d\u00e9veloppez, et proposez-lui de vraies t\u00e2ches, avec ses propres mots, et non avec les v\u00f4tres. Les utilisateurs arrivent \u00e0 se d\u00e9brouiller, et trouvent parfois des chemins tordus pour arriver \u00e0 leurs fins. Votre temps sera mieux investi \u00e0 les observer pendant une heure, qu'\u00e0 passer une journ\u00e9e \u00e0 essayer de deviner leurs intentions. #4 . Automatisez vos standards de code \u00b6 Automate Your Coding Standard ( Thing 04 ) \u2014 Filip van Laenen Au d\u00e9but d'un projet, tout le mode a meilleures intentions du monde. Les d\u00e9veloppeurs \u00e9crivent les standards de code du projet dans des guides de contribution, auxquels tout le monde adh\u00e8re. Mais \u00e0 un moment, tout bascule. Respecter les standards de code devient une corv\u00e9e. Pourquoi met-on en place des standards de code ? Pour garder un format uniforme d'un d\u00e9veloppeur \u00e0 l'autre ? Pour \u00e9viter certains \"anti-patterns\" et limiter l'apparition de bugs communs ? Pour maintenir les standards de code qui vous importent, il existe pl\u00e9thore d'outils produisant des rapports sur la qualit\u00e9 du code. Seules, ces solutions ne sont pas suffisantes : il faut automatiser et imposer les standards de code lorsque c'est possible. Quelques exemples : Assurez-vous de formater automatiquement votre code, dans le processus de \"Build\" de l'application. Utiliser des analyseurs de code statique, pour d\u00e9tecter les anti-patterns honnis. Et cassez le Build quand vous en trouvez un. Apprenez \u00e0 configurer ces outils pour vous-m\u00eame Si la couverture de code vous importe, allez au-del\u00e0 de la seule mesure. Automatisez l'analyse des r\u00e9sultats, et cassez le Build lorsque votre indicateur va \u00e0 l'encontre de vos exigences de qualit\u00e9. Automatisez le plus possible, ce qui vous semble important. Et pour ce que vous ne pouvez pas automatiser, conservez des guidelines. Mais gardez \u00e0 l'esprit que tout le monde ne les respectera pas scrupuleusement. Enfin, vos standards devraient \u00e9voluer dans le temps, en m\u00eame temps que le projet. Ce qui paraissait pertinent au d\u00e9but du projet, aura peut-\u00eatre moins de sens quelques mois plus tard. #5 . La beaut\u00e9 r\u00e9side dans la simplicit\u00e9 \u00b6 Chapter 5. Beauty Is in Simplicity ( Thing 05 ) \u2014 J\u00f8rn \u00d8lmheim Qu'est-ce que le beau code ? Cette question est tr\u00e8s subjective, car la perception de la beaut\u00e9 r\u00e9side en chacun. Cependant, quand nous parlons de \"beaut\u00e9 du code\", nous recherchons souvent : Lisibilit\u00e9 Maintenabilit\u00e9 Rapidit\u00e9 de d\u00e9veloppement L'insaisissable qualit\u00e9 de la beaut\u00e9 intrins\u00e8que Pensez au code que vous avez rencontr\u00e9 dans votre vie. Si vous n'en avez jamais lu, faites-le ! Maintenant ! Une fois que c'est fait, rappelez-vous ce qui vous a plu. Pour ma part, c'est la simplicit\u00e9. Quelle que soit la complexit\u00e9 globale du syst\u00e8me, ses modules devraient \u00eatre d\u00e9coup\u00e9s en petites parties simples. Avec des objets simples, poss\u00e9dant une seule responsabilit\u00e9, eux-m\u00eames poss\u00e9dants des m\u00e9thodes correctement nomm\u00e9es. Bref : \u00e0 tous les niveaux, le code doit rester simple, avec une seule responsabilit\u00e9 simple et claire, et des relations simples. C'est la seule mani\u00e8re de s'assurer que le syst\u00e8me reste maintenable au cours du temps, avec une productivit\u00e9 optimale ; faire du code simple, propre, testable. La beaut\u00e9 na\u00eet et se retrouve dans la simplicit\u00e9. #6 . Avant de Refactorer \u00b6 Before You Refactor ( Thing 06 ) \u2014 Rajith Attapattu En tant que d\u00e9veloppeur, vous allez \u00eatre amen\u00e9 \u00e0 refactorer du code. Par piti\u00e9 pour vous-m\u00eame et pour vos coll\u00e8gue, pensez aux \u00e9l\u00e9ments suivants : La meilleure approche pour refactorer, est de faire le point sur la codebase existante, et de la confronter avec ses tests. Cela vous permettra de comprendre les forces et les faiblesses du code existant, et \u00e9ventuellement d'\u00e9viter les pi\u00e8ges auxquels ont d\u00e9j\u00e0 pens\u00e9 vos pr\u00e9d\u00e9cesseurs R\u00e9sistez \u00e0 l'envie de tout r\u00e9\u00e9crire. Souvent, le code en production fonctionne, et ce, m\u00eame s'il est moche, non test\u00e9, et non optimis\u00e9. Quand vous le pouvez, r\u00e9utilisez ce code. Privil\u00e9giez des petits changements successifs, plut\u00f4t mieux qu'un gros changement radical. Apr\u00e8s chaque \u00e9tape de votre refactor, assurez-vous que les tests existants passent. Et \u00e9vitez de supprimer des tests existants, sans savoir ce qu'ils font. Votre ego, et vos pr\u00e9f\u00e9rences personnelles, ne sont pas une raison suffisante pour entamer un refactor. Introduire une nouvelle technologie, n'est pas une raison suffisante pour entamer un refactor. Rappelez-vous que l'erreur est humaine. Vous n'avez pas la garantie que votre refactor am\u00e9liorera r\u00e9ellement le code. #7 . M\u00e9fiez-vous du partage \u00b6 Beware the Share ( Thing 07 ) \u2014 Udi Dahan Vous est-il arriv\u00e9 d'appliquer le principe DRY (Don't Repeat Yourself) ? Et de mutualiser du code dupliqu\u00e9 depuis deux modules dans votre code dans une librairie partag\u00e9e ? Et d'ajouter cette librairie dans les d\u00e9pendances de vos modules ? Et de vous rendre compte que vous venez de faire n'importe quoi ? Pourquoi ? Vous venez de passer \u00e0 c\u00f4t\u00e9 d'un \u00e9l\u00e9ment essentiel du d\u00e9veloppement informatique. Le contexte . Trouver du code dupliqu\u00e9 dans deux modules ind\u00e9pendants, ne signifie pas n\u00e9cessairement qu'il s'agisse de la m\u00eame logique m\u00e9tier. Les deux modules peuvent \u00e9voluer ind\u00e9pendamment l'un de l'autre, et les r\u00e8gles m\u00e9tiers \u00e9galement. Introduire une librairie pour mutualiser du code, a cr\u00e9\u00e9 un couplage, complexifiant la maintenance des deux modules, en leur imposant de se synchroniser avec un librairie tierce. Pourtant l'id\u00e9e initiale part d'une bonne intention : r\u00e9duire la duplication, et le nombre de lignes de codes. Prenez garde lorsque vous mutualisez du code, et assurez-vous que le contexte m\u00e9tier est coh\u00e9rent. Alors seulement, mutualisez. #8 . La r\u00e8gle du Boy Scout \u00b6 The Boy Scout Rule ( Thing 08 ) \u2014 Robert C. Martin (Uncle Bob) Laissez toujours le campement plus propre que lorsque vous y \u00eates entr\u00e9. Quelque soit l'auteur originel du code que vous avez sous les yeux, si vous pensez pouvoir l'am\u00e9liorer, m\u00eame un tout petit peu, alors faites-le. Am\u00e9liorez continuellement la codebase que vous partagez avec vos coll\u00e8gues. #9 . Commence par v\u00e9rifier ton code avant de chercher le fautif ailleurs \u00b6 Check Your Code First before Looking to Blame Others ( Thing 09 ) \u2014 Allan Kelly Nous, d\u00e9veloppeurs, sommes souvent de mauvaise foi : nous ne voulons pas remettre notre code en question lors d'un bug. Jamais. Cependant, les bugs du compilateur, ou de la JVM sont tr\u00e8s rares. Partez du principe que les outils que vous utilisez sont stables et matures, et qu'ils sont utilis\u00e9s par une multitude d'autres personnes, \u00e0 moins que vous n'utilisiez une version 0.1 ou une alpha. Aussi, quand vous avez un probl\u00e8me dans votre application, investissez votre \u00e9nergie \u00e0 rechercher le probl\u00e8me et la solution dans votre code, et pas dans le code les autres. #10 . Choisissez vos outils avec soin \u00b6 Choose Your Tools with Care ( Thing 10 ) \u2014 Giovanni Asproni Aujourd'hui, les logiciels sont rarement construits \u00e0 partir de rien : ils sont assembl\u00e9s \u00e0 partir d'outils existants, de frameworks et de librairies. Cependant, choisir le bon ensemble d'outils est parfois un casse-t\u00eate sans nom. Cherchez la raison d'\u00eatre de vos outils, et comprenez le probl\u00e8me qui a entrain\u00e9 leur cr\u00e9ation. Bien trop souvent, \u00e0 utiliser des librairies et des frameworks trop complexes, vous chercherez \u00e0 les tordre, et \u00e0 ler d\u00e9tourner de leur usage. Vous arriverez probablement \u00e0 le faire fonctionner, mais dans un contexte auquel il n'est pas destin\u00e9. Par exemple, si vous \u00eates dans un contexte asynchrone sur l'ensemble de votre syst\u00e8me, \u00e9vitez d'introduire un outil synchrone, m\u00eame s'il semble r\u00e9pondre \u00e0 une partie de votre probl\u00e8me. Ma strat\u00e9gie dans le choix des outils : ne prenez que les outils dont vous avez r\u00e9ellement besoin. J'essaie \u00e9galement, d'isoler au maximum ces outils de mon domaine m\u00e9tier. Je les int\u00e8gres dans des couches applicatives d\u00e9di\u00e9es. Ainsi, lorsque j'ai besoin de changer d'outils, je peux le faire facilement. #11 . D\u00e9veloppez dans le Language du Domaine M\u00e9tier \u00b6 Code in the Language of the Domain ( Thing 11 ) \u2014 Dan North Prenons l'exemple de deux codebases. Dans la premi\u00e8re vous trouvez ceci : if ( portfolioIdsByTraderId . get ( trader . getId ()) . containsKey ( portfolio . getId ())) {...} Apr\u00e8s moults r\u00e9flexions, vous vous rendez compte qu'il y a des associations de portfolios et de trader . Vous les trouvez dans un objet comme celui-ci : Map < int , Map < int , int >> portfolioIdsByTraderId ; Et, peu \u00e0 peu, vous vous rendez compte que ce dictionnaire conditionne la visibilit\u00e9 des portfolios par trader. Dans la seconde code base, vous tombez sur ceci : if ( trader . canView ( portfolio )) {...} Pas de prise de t\u00eate. Vous savez ce que le code fait, m\u00eame si vous ne savez pas comment. Peut-\u00eatre qu'il s'agit de Map de Map, comme dans l'exemple pr\u00e9c\u00e9dent, mais il s'agit de la logique du trader , pas de la votre. R\u00e9pondez franchement : sur quelle codebase pr\u00e9f\u00e9reriez-vous travailler ? #12 . Le code EST le design \u00b6 Code Is Design ( Thing 12 ) \u2014 Ryan Brush Projetons-nous dans un futur imaginaire, dans lequel des robots sont en mesure de nous construire n'importe quoi, \u00e0 partir d'air et sans \u00e9nergie. \u00c0 une seule condition : Qu'on leur fournisse des plans clairs et pr\u00e9cis. Imaginez la r\u00e9volution dans le monde de la construction ; si quelque chose cloche sur un b\u00e2timent ou une voiture, il suffit de corriger les plans et de les donner aux robots. Ils reconstruiront l'objet pour un co\u00fbt n\u00e9gligeable. Seulement, que se passe-t-il lorsque le desing est imparfait ou incomplet ? Les utilisateurs manipulent des objets imparfaits ou incomplets. Et m\u00eame si on envoie des robots d\u00e9di\u00e9 \u00e0 r\u00e9parer les erreurs de design, on arrive \u00e0 une conclusion : la qualit\u00e9 va de mal en pis, et les utilisateurs sont m\u00e9contents. Et si je vous disais que ce monde existe d\u00e9j\u00e0 en informatique ? Que les robots du futur, sont les compilateurs d'aujourd'hui ? Que les plans clairs et pr\u00e9cis, correspondent au code que les d\u00e9veloppeurs produisent ? Le point int\u00e9ressant de cette approche, c'est de consid\u00e9rer que le produit fini est issu d'un processus de cr\u00e9ativit\u00e9 plut\u00f4t que d'un processus m\u00e9canique. Cette approche nous donne des pistes pour \u00e9viter la catastrophe : - s'assurer de la qualit\u00e9 du produit par des batteries de tests. - gagner en efficacit\u00e9 en cherchant des outils plus pr\u00e9cis, et en s'entra\u00eenant \u00e0 les utiliser. Il n'y a pas de secret : les meilleurs designs sont produits par les meilleurs designers, qui se consacrent \u00e0 la ma\u00eetrise de leur Art. Le code fonctionne de la m\u00eame mani\u00e8re. #13 . L'aspect du code compte \u00b6 Code Layout Matters ( Thing 13 ) \u2014 Steve Freeman En tant que d\u00e9veloppeurs, nous passons plus de temps \u00e0 naviguer, et \u00e0 lire du code, qu'\u00e0 en \u00e9crire. Et ce, dans le but de trouver o\u00f9 coder. Il existe plusieurs moyens de faciliter cette lecture : Rendre le code facile \u00e0 scanner visuellement :les gens sont dou\u00e9s pour faire correspondre des motifs visuels entre eux. Si le code est homog\u00e8ne, il sera plus facile de trouver les s\u00e9parateurs et conteneurs dans le code, et de trouver o\u00f9 coder. Rendre la disposition du code expressive :la structure dui code aide \u00e0 comprendre l'intention, et les formateurs automatiques de code permettent de grouper les structures du code par l'indentation, les sauts de lignes, etc. Mais parfois, ils ne suffisent pas et il faut compl\u00e9ter \u00e0 la main les sauts de lignes, ou d'autres s\u00e9parateurs visuels pour bien mettre mon intention en \u00e9vidence. Rendre le code compact : plus j'ai de code sous mes yeux, moins j'en garde en t\u00eate. Aujourd'hui, les IDE mettent en \u00e9vidence le code avec de la coloration syntaxique, et des liens internes. Servez-vous de ces fonctionnalit\u00e9s pour garder un code compact, en \u00e9vitant le bruit des commentaires, et qui sera plus facile \u00e0 comprendre. L'allure g\u00e9n\u00e9rale du code doit m'aider \u00e0 le comprendre, rien de plus. #14 . La Revue de Code \u00b6 Code Reviews ( Thing 14 ) \u2014 Mattias Karlsson Vous ne le savez pas encore, mais vous avez envie de faire de la revue de code. Pourquoi ? Elle permet d'am\u00e9liorer la qualit\u00e9 du code Elle permet de diminuer la fr\u00e9quence des rat\u00e9s Elle permet de faire monter en comp\u00e9tence les relecteurs Elle permet de faire monter en comp\u00e9tence le r\u00e9dacteur Elle permet de faire du TeamBuilding Comment ? La reveue de code est un moment incroyable pour partager la connaissance d'un projet. Elle contribue \u00e0 am\u00e9liorer la propri\u00e9t\u00e9 collective du code de chacun des membres de l'\u00e9quipe. En revanche, vous devez chercher \u00e0 faire des remarques constructives plut\u00f4t que caustiques . Essayer d'organiser une revue de code hebdomadaire : prenez une \u00e0 deux heures pour lire simple une portion de code de votre projet, en groupe. Rendre cet exercice amusant, est la principale cl\u00e9 de la r\u00e9ussite, et tout le monde en sortira grandi. #15 . Reflexions sur votre code \u00b6 Coding with Reason ( Thing 15 ) \u2014 Yechiel Kimchi Regardez votre code, et r\u00e9fl\u00e9chissez. Est-ce qu'il est syntaxiquement correct ? Ou voyez-vous des erreurs ? S'agit-il d'erreurs plut\u00f4t techniques ou fonctionnelles ? C'est tout de m\u00eame mieux d'utiliser un outil automatis\u00e9, tel un compilateur ou des tests automatis\u00e9s, pour faire cet exercice. N'est-il pas ? Malheureusement, ce n'est pas toujours possible. Pour faciliter cet exercice : essayez de d\u00e9couper le code en petites portions compr\u00e9hensibles (par exemple des m\u00e9thodes de 5 \u00e0 10 lignes), et r\u00e9fl\u00e9chissez de nouveau pour savoir si chaque petite portion de code est correcte ou non. Cette fa\u00e7on de faire vous rappelle-t-elle quelque chose ? La plupart des \"bonnes pratiques\" que l'on connait aujourd'hui, sont issues de d'exercices cherchant \u00e0 faciliter la lecture, et la reflexion sur le code, hors outillage. Beaucoup de ces pratiques sont, sans surprise, automatisables \u00e0 l'aide d'analyseurs statiques de code. Prenez le temps de r\u00e9fl\u00e9chir sur votre code. En plus de d\u00e9terminer de son exactitude, cela vous permet de mieux le comprendre. Et si vous communiquez le r\u00e9sultat de vos r\u00e9flexions, tout le monde en profitera ! #16 . Un Commentaire sur les commentaires \u00b6 A Comment on Comments ( Thing 16 ) \u2014 Cal Evans Les commentaires ne sont pas n\u00e9cessairement un mal.Faites en sorte que le code soit compr\u00e9hensible pour les d\u00e9veloppeurs qui passeront derri\u00e8re vous. Mais n'en faites pas trop : assurez-vous que vos commentaires clarifient le code, et ne l'obfusquent pas. Les futurs d\u00e9veloppeurs doivent comprendre ce que fait le code en rapport avec le commentaire, sans avoir besoin de lire les d\u00e9tails d'impl\u00e9mentation. #17 . Ne commentez que ce que le code ne peut pas dire de lui-m\u00eame \u00b6 Comment Only What the Code Cannot Say ( Thing 17 ) \u2014 Kevlin Henney Ecrire de bons commentaires est une comp\u00e9tence \u00e0 part enti\u00e8re. Elle consiste principalement \u00e0 savoir \u00e0 quel moment il faut ne pas en \u00e9crire. Un commentaire erron\u00e9 n'a pas de valeur, et peut avoir un effet n\u00e9gatif. Il peut nuire \u00e0 la concentration et \u00eatre source de distraction. De plus, il est plus facile pour un commentaire faux, de survivre dans une codebase, qu'un bug dans le code. Un commentaire n'est pas ex\u00e9cut\u00e9, contrairement au code. Comment qualifier la valeur d'un commentaire ? Il doit expliciter quelque chose que le code ne peut lui-m\u00eame dire. Lorsqu'une portion de code est comment\u00e9e, cherchez \u00e0 la remanier, pour qu'elle exprime par elle-m\u00eame l'intention du commentaire. Extrayez des m\u00e9thodes, renommez-les, exprimez l'intention du code par son design. La diff\u00e9rence entre ce qu'exprime le code, et ce que vous voulez dire au global, est un bon candidat pour en faire un commentaire. #18 . Apprendre en continu \u00b6 Continuous Learning ( Thing 18 ) \u2014 Clint Shank N'importe qui sur Terre peut apprendre \u00e0 faire votre m\u00e9tier. Travaillez votre employabilit\u00e9, et continuez d'apprendre. Sinon, vous devenez un dinosaure, et vous dispara\u00eetrez quand plus personne n'aura besoin de vous. Comment faire ? Certain employeurs vous accompagnent, d'autres non, et pour assurez votre s\u00e9curit\u00e9, il est de votre responsabilit\u00e9 de prendre en charge votre \u00e9ducation. Beaucoup de m\u00e9thodes permettant de progresser, sont gratuites, et disponibles sur Internet. La technologie \u00e9volue vite. Ne restez pas derri\u00e8re. #19 . Commodit\u00e9 n'est par aider \u00b6 Convenience Is not an -ility ( Thing 19 ) \u2014 Gregor Hohpe Ecrire de bonnes API de code n'est pas chose ais\u00e9e. Conna\u00eetre les bonnes pratiques ne garantis pas de savoir les appliquer proprement. Par exemple, sur une APi de 'strat\u00e9gie', je rencontre souvent des \" arguments de commodit\u00e9 \" : Je ne veux pas que mes consommateurs fassent deux appels s\u00e9par\u00e9s pour faire cette unique chose Pourquoi faire une seconde m\u00e9thode, alors que celle-ci fait d\u00e9j\u00e0 presque le travail ? Il suffit de rajouter un simple bool\u00e9an. Regarde c'est tr\u00e8s simple : si le second param\u00e8tre finit par \".txt\", alors la m\u00e9thode consid\u00e8re que le premier param\u00e8tres est un nom de fichier : on n'a pas vraiement besoin de deux m\u00e9thodes. Ce genre d'argument, est susceptible de diminuer la lisibilit\u00e9 du code, et de conduire \u00e0 des m\u00e9thodes telles que : parser.processNodes(text, false); Il n'y a rien de mal \u00e0 user de commodit\u00e9, tant qu'elle ne nuit pas au design des API. Les API sont suppos\u00e9es masquer la complexit\u00e9 sous-jacente du programme. Un vocabulaire coh\u00e9rent et r\u00e9fl\u00e9chi permet de rendre le code expressif et compr\u00e9hensif dans la couche logicielle appelant vos API. #20 . D\u00e9ployez vite et souvent \u00b6 Deploy Early and Often ( Thing 20 ) \u2014 Steve Berczuk Le processus d'installation/d\u00e9ploiement, est la premi\u00e8re chose visible pour l'utilisateur final. Ce dernier utilise une application d\u00e9ploy\u00e9e. Entamez votre projet avec le processus d'installation. Ainsi, vous aurez cr\u00e9\u00e9 et livr\u00e9 un \u00e9l\u00e9ment \u00e0 forte valeur ajout\u00e9e pour l'utilisateur final. De plus, vous aurez la possibilit\u00e9 de l'affiner au fil de la vie du projet. Vous devriez tester et remanier ce processus comme vous le faites avec le code. Le processus d'installation/d\u00e9ploiement est indispensable \u00e0 la productivit\u00e9 de votre utilisateur final. Ne le n\u00e9gligez pas. #21 . S\u00e9parez les exceptions techniques des exceptions m\u00e9tier \u00b6 Distinguish Business Exceptions from Technical ( Thing 21 ) \u2014 Dan Bergh Johnsson Au runtime, il y a deux raisons pour lesquelles les choses se passent mal l'impossibilit\u00e9 d'utiliser l'application pour des raisons techniques la pr\u00e9vention d'une mauvaise utilisation de l'application pour des raisons m\u00e9tiers Les langages de programmation modernes ont un moyen pour signaler ce genre de probl\u00e8me : lancer une Exception. Seulement, elles sont utilis\u00e9es indiff\u00e9remment pour les deux raisons ci-dessus, ce qui peut \u00eatre source de confusion. M\u00e9langer les Exceptions m\u00e9tier et les Exceptions techniques dans une m\u00eame hi\u00e9rachie ajoute de la complexit\u00e9 dans les couches qui les traitent. Bien s\u00e9parer les responsabilit\u00e9s am\u00e9liore la clart\u00e9, et augmente les chances de traiter les chaque typologie d'Exceptions dans la couche applicative appropri\u00e9e. #22 . Entra\u00eenez-vous, volontairement, encore et encore \u00b6 Do Lots of Deliberate Practice ( Thing 22 ) \u2014 Jon Jagger L'entra\u00eenement volontaire, ou \"Deliberate Practice\" en anglais, va au-del\u00e0 de la simple r\u00e9solution d'un probl\u00e8me. Il s'agit de la r\u00e9p\u00e9tition d'un exercice, pour acqu\u00e9rir une expertise sur une comp\u00e9tence. Cela signifie r\u00e9p\u00e9ter l'exercice, encore et encore, jusqu'\u00e0 atteindre le niveau de ma\u00eetrise satisfaisant. A quel niveau peut-on consid\u00e9rer avoir acquis la ma\u00eetrise de l'exercice ? Peter Norvig donne \"10 000 heures, c'est le nombre magique\". Cela repr\u00e9sente environ 20h par semaine, pendant 10 ans. Mais l'entra\u00eenement volontaire va encore au-del\u00e0 de la simple r\u00e9p\u00e9tition. Il s'agit de se mettre dans une situation qui vous tire un tout petit peu plus vers le haut, de chercher \u00e0 r\u00e9soudre la probl\u00e9matique, puis d'analyser votre performance pour vous am\u00e9liorer la fois suivante. L'entra\u00eenement volontaire est une question d'apprentissage. D'un apprentissage qui vous change. D'un apprentissage qui modifie votre comportement et vos habitudes. Courage! #23 . Les idiomes sp\u00e9cifiques du domaine \u00b6 Domain-Specific Languages ( Thing 23 ) \u2014 Michael Hunger Lorsque vous \u00e9coutez une discussion entre experts, vous vous rendrez compte qu'ils utilisent un vocabulaire diff\u00e9rent de leur langage de tous les jours. Et ce, quel que soit le domaine d'expertise. C'est ce q'uon appelle des DSL (Domain-Specific Languages) : chaque domaine sp\u00e9cifgique poss\u00e8de son vocabulaire sp\u00e9cifique. Les DSL peuvent \u00eatre de deux sortes : les internes et les externes. Les DSL internes , g\u00e9n\u00e9ralement du sucre syntaxique dans un language de programmation, permettant de se rapprocher du langage naturel. Ce genre de DSL utilise des pattenrs, comme les Builders, du chainage de m\u00e9thode et des annotations Les DSL externes , g\u00e9n\u00e9ralement du texte ou des diagrammes, sont souvent analys\u00e9s par des outils (parsers, transformers) et convertis en \u00e9l\u00e9ments d'un mod\u00e8le applicatif. Exemple : AndroMDA, Gherkins. Adaptez votre DSl au public que vous visez. En masquant la complexit\u00e9 technique les DSLs permettent \u00e0 leurs usagers d'adapter leur syst\u00e8me en toute autonomie, sans l'aide de d\u00e9veloppeurs. #24 . N'ayez pas peur de casser des choses \u00b6 Don\u2019t Be Afraid to Break Things ( Thing 24 ) \u2014 Mike Lewis Dans le monde de l'industrie logicielle, tout le monde a rencontr\u00e9 une application qualifi\u00e9e, au mieux, de pr\u00e9caire. Sur ce genre d'application, \u00e0 chaque fois que l'on modifie quelque chose, on est susceptibles de casser une autre fonctionnalit\u00e9, sans lien apparent avec le code modifi\u00e9. Dans ce contexte, chaque fonctionnalit\u00e9 est livr\u00e9e avec le moins de modification possible. C'est l'\u00e9quivalent de jouer au Jenga, mais sur un logiciel. Une telle aplication est malade, et n\u00e9cessite un m\u00e9decin qui amputerait les portions malades pour les soigner. Tel un chirurgien, ne craignez pas votre code, et ne vous laissez pas paralyser par la peur du changement. Investissez du temps dans le remaniement du code, car cela apportera des b\u00e9n\u00e9fices sur la dur\u00e9e du projet. Prenez soin de votre application. Soignez-la. Nettoyez-la. Cett attitude est contagieuse, et inspirera vos coll\u00e8gues. Il se mettrront \u00e0 leur tour \u00e0 prendre soin de l'application. Gardez une liste des \"mesure d'hygi\u00e8ne\" de l'application, que l'\u00e9quipe prendra soin sur la dur\u00e9e du projet. Ne cessez jamais de prendre soin de la sant\u00e9 g\u00e9n\u00e9rale de votre application. #25 . Ne soyez pas tendres avec vos donn\u00e9es de test \u00b6 Don't Be Cute with Your Test Data ( Thing 25 ) \u2014 Rod Begbie L'histoire du d\u00e9veloppement poss\u00e8de plusieurs anecdotes croustillantes autour du th\u00e8me \"Personne ne verra \u00e7a\", qui, subitement, devient visible. Le type de fuite varie, et est parfois pr\u00e9judiciable, pour une personne, une \u00e9quipe, ou toute l'entreprise. Par exemple : Lors d'une d\u00e9mo, le client clique sur un bouton non-impl\u00e9ment\u00e9. Un message lui dit \"Ne recommence pas, b\u00e2tard !\" Un d\u00e9veloppeur maintenant une application legacy, se voit demander de mettre en place une fen\u00eatre de gestion des erreurs. Subitement les utilisateurs se voient afficher des messages \"La base de donn\u00e9e sacr\u00e9e a \u00e9t\u00e9 corrompue, Batman!\" lorsque quelque chose casse. Quelqu'un a confondu les interfaces d'administration de tests et de prod, et a saisi quelques donn\u00e9es \"rigolotes\" en production. Les utilisateurs peuvent d\u00e9sormais acheter le \"Conseiller personnel de Bill Gates\" pour la modique somme de 1M\u20ac Rappelez-vous du vieil adage : Un mensonge peut faire le tour de la terre le temps que la v\u00e9rit\u00e9 mette ses chaussures. \u2014 Mark Twain Adage, d\u00e9j\u00e0 vrai en ces temps, o\u00f9 Twitter, Facebook, LinkedIn, n'existaient pas encore. En bref, d\u00e8s que vous \u00e9crivez du texte dans votre code, qu'il s'agisse de commentaires, de logs ou de donn\u00e9es de test, r\u00e9fl\u00e9chissez \u00e0 quoi cela ressemblerait s'il devenait public. Conclusion \u00b6 Voici d\u00e9j\u00e0 25 r\u00e9flexions sur les 97 du livre. J'esp\u00e8re que vous en tirez quelque chose. Malgr\u00e9 le fait que vous subissez mon interpr\u00e9tation :) Je vous rappelle que, si vous cherchez \u00e0 acc\u00e9der aux textes originaux, ils sont disponibles sur GitHub , GitBook Personnellement, m\u00eame si je ne suis pas toujours d'accord avec les propos des auteurs, j'apprends des petits trucs par ce et par l\u00e0. Je trouve \u00e7a amusant de comparer le contexte du monde informatique au moment de la sortie du livre (2010), et le contexte actuel. Je prendrais le temps de faire les autres, mais... Patience ! Et vous ? Quelles sont les p\u00e9pites, ou les r\u00e9flexions qui vous ont marqu\u00e9 ?","title":"97 choses que tout d\u00e9veloppeur devrait savoir (25/97)"},{"location":"blog/97-things/#1-agir-avec-prudence","text":"Act with Prudence ( Thing 01 ) \u2014 SebRose Whatever you undertake, act with prudence and consider the consequences. \u2014 Anonyme Parfois, dans le d\u00e9veloppement logiciel, on nous demande de choisir entre \" faites le vite \" et \" faites le bien \". Bien souvent, le \" faites-le vite \" est accompagn\u00e9 de l'intention \" on l'am\u00e9liorera plus tard \". Martin Fowler appelle cette pratique la \" dette technique intentionnelle \" [ 1 ]. La dette technique intentionnelle est un emprunt , que vous contractez sur le budget de votre projet. Vous en recevez des b\u00e9n\u00e9fices \u00e0 court terme, mais plus vous la conservez longtemps, plus elle sera difficile \u00e0 rembourser. Parfois, ce sera tout bonnement impossible. Soyez prudent quand vous en introduisez, et soyez conscient des impacts que cette dette peut avoir sur votre projet. Aussi : remboursez votre dette technique aussi vite que possible. Faire autrement serait imprudent.","title":"#1. Agir avec Prudence"},{"location":"blog/97-things/#2-appliquez-les-principes-de-la-programmation-fonctionnelle","text":"Apply Functional Programming Principles ( Thing 02 ) \u2014 Edward Garson Les paradigmes de la programmation fonctionnelle vous permettent d'am\u00e9liorer grandement la qualit\u00e9 de votre code. Et ce, m\u00eame dans des languages utilisant d'autres paradigmes comme les langages imp\u00e9ratifs, ou les langages orient\u00e9s objet. En effet, votre design fera preuve d'une meilleure transparence r\u00e9f\u00e9rentielle . La transparence r\u00e9f\u00e9rentielle, c'est quelque chose que vous souhaitez pour le design de votre code, m\u00eame si vous le ne savez pas encore. Cela implique que toutes vos fonctions sont pures , c'est-\u00e0-dire que, pour les m\u00eames param\u00e8tres d'entr\u00e9e, elles auront toujours le m\u00eame comportement. Sans effet de bord. Aussi ; prenez le temps de vous int\u00e9resser \u00e0 la programmation fonctionnelle pour utiliser ses b\u00e9n\u00e9fices d\u00e8s que vous vous avez besoin.","title":"#2. Appliquez les principes de la programmation Fonctionnelle"},{"location":"blog/97-things/#3-demandez-vous-que-ferait-lutilisateur-ce-que-vous-netes-pas","text":"Ask \"What Would the User Do?\" (You Are not the User) ( Thing 03 ) \u2014 Giles Colborne Nous avons tendance \u00e0 croire que les autres pensent comme nous. Ce n'est pas le cas, et il existe un biais cognitif pour le d\u00e9crire : l' Effet de faux consensus . Ce biais permet d'expliquer pourquoi les d\u00e9veloppeurs, qui passent davantage de temps \u00e0 utiliser l'informatique que leurs utilisateurs, ont du mal \u00e0 comprendre que ces derniers ma\u00eetrisent mal les outils et les patterns de l'informatique. Pour comprendre comment l'utilisateur fonctionne, le meilleur moyen reste encore l'observation. Observez quelqu'un utiliser l'application que vous d\u00e9veloppez, et proposez-lui de vraies t\u00e2ches, avec ses propres mots, et non avec les v\u00f4tres. Les utilisateurs arrivent \u00e0 se d\u00e9brouiller, et trouvent parfois des chemins tordus pour arriver \u00e0 leurs fins. Votre temps sera mieux investi \u00e0 les observer pendant une heure, qu'\u00e0 passer une journ\u00e9e \u00e0 essayer de deviner leurs intentions.","title":"#3. Demandez-vous \"Que ferait l'utilisateur ?\" (Ce que vous n'\u00eates pas)"},{"location":"blog/97-things/#4-automatisez-vos-standards-de-code","text":"Automate Your Coding Standard ( Thing 04 ) \u2014 Filip van Laenen Au d\u00e9but d'un projet, tout le mode a meilleures intentions du monde. Les d\u00e9veloppeurs \u00e9crivent les standards de code du projet dans des guides de contribution, auxquels tout le monde adh\u00e8re. Mais \u00e0 un moment, tout bascule. Respecter les standards de code devient une corv\u00e9e. Pourquoi met-on en place des standards de code ? Pour garder un format uniforme d'un d\u00e9veloppeur \u00e0 l'autre ? Pour \u00e9viter certains \"anti-patterns\" et limiter l'apparition de bugs communs ? Pour maintenir les standards de code qui vous importent, il existe pl\u00e9thore d'outils produisant des rapports sur la qualit\u00e9 du code. Seules, ces solutions ne sont pas suffisantes : il faut automatiser et imposer les standards de code lorsque c'est possible. Quelques exemples : Assurez-vous de formater automatiquement votre code, dans le processus de \"Build\" de l'application. Utiliser des analyseurs de code statique, pour d\u00e9tecter les anti-patterns honnis. Et cassez le Build quand vous en trouvez un. Apprenez \u00e0 configurer ces outils pour vous-m\u00eame Si la couverture de code vous importe, allez au-del\u00e0 de la seule mesure. Automatisez l'analyse des r\u00e9sultats, et cassez le Build lorsque votre indicateur va \u00e0 l'encontre de vos exigences de qualit\u00e9. Automatisez le plus possible, ce qui vous semble important. Et pour ce que vous ne pouvez pas automatiser, conservez des guidelines. Mais gardez \u00e0 l'esprit que tout le monde ne les respectera pas scrupuleusement. Enfin, vos standards devraient \u00e9voluer dans le temps, en m\u00eame temps que le projet. Ce qui paraissait pertinent au d\u00e9but du projet, aura peut-\u00eatre moins de sens quelques mois plus tard.","title":"#4. Automatisez vos standards de code"},{"location":"blog/97-things/#5-la-beaute-reside-dans-la-simplicite","text":"Chapter 5. Beauty Is in Simplicity ( Thing 05 ) \u2014 J\u00f8rn \u00d8lmheim Qu'est-ce que le beau code ? Cette question est tr\u00e8s subjective, car la perception de la beaut\u00e9 r\u00e9side en chacun. Cependant, quand nous parlons de \"beaut\u00e9 du code\", nous recherchons souvent : Lisibilit\u00e9 Maintenabilit\u00e9 Rapidit\u00e9 de d\u00e9veloppement L'insaisissable qualit\u00e9 de la beaut\u00e9 intrins\u00e8que Pensez au code que vous avez rencontr\u00e9 dans votre vie. Si vous n'en avez jamais lu, faites-le ! Maintenant ! Une fois que c'est fait, rappelez-vous ce qui vous a plu. Pour ma part, c'est la simplicit\u00e9. Quelle que soit la complexit\u00e9 globale du syst\u00e8me, ses modules devraient \u00eatre d\u00e9coup\u00e9s en petites parties simples. Avec des objets simples, poss\u00e9dant une seule responsabilit\u00e9, eux-m\u00eames poss\u00e9dants des m\u00e9thodes correctement nomm\u00e9es. Bref : \u00e0 tous les niveaux, le code doit rester simple, avec une seule responsabilit\u00e9 simple et claire, et des relations simples. C'est la seule mani\u00e8re de s'assurer que le syst\u00e8me reste maintenable au cours du temps, avec une productivit\u00e9 optimale ; faire du code simple, propre, testable. La beaut\u00e9 na\u00eet et se retrouve dans la simplicit\u00e9.","title":"#5. La beaut\u00e9 r\u00e9side dans la simplicit\u00e9"},{"location":"blog/97-things/#6-avant-de-refactorer","text":"Before You Refactor ( Thing 06 ) \u2014 Rajith Attapattu En tant que d\u00e9veloppeur, vous allez \u00eatre amen\u00e9 \u00e0 refactorer du code. Par piti\u00e9 pour vous-m\u00eame et pour vos coll\u00e8gue, pensez aux \u00e9l\u00e9ments suivants : La meilleure approche pour refactorer, est de faire le point sur la codebase existante, et de la confronter avec ses tests. Cela vous permettra de comprendre les forces et les faiblesses du code existant, et \u00e9ventuellement d'\u00e9viter les pi\u00e8ges auxquels ont d\u00e9j\u00e0 pens\u00e9 vos pr\u00e9d\u00e9cesseurs R\u00e9sistez \u00e0 l'envie de tout r\u00e9\u00e9crire. Souvent, le code en production fonctionne, et ce, m\u00eame s'il est moche, non test\u00e9, et non optimis\u00e9. Quand vous le pouvez, r\u00e9utilisez ce code. Privil\u00e9giez des petits changements successifs, plut\u00f4t mieux qu'un gros changement radical. Apr\u00e8s chaque \u00e9tape de votre refactor, assurez-vous que les tests existants passent. Et \u00e9vitez de supprimer des tests existants, sans savoir ce qu'ils font. Votre ego, et vos pr\u00e9f\u00e9rences personnelles, ne sont pas une raison suffisante pour entamer un refactor. Introduire une nouvelle technologie, n'est pas une raison suffisante pour entamer un refactor. Rappelez-vous que l'erreur est humaine. Vous n'avez pas la garantie que votre refactor am\u00e9liorera r\u00e9ellement le code.","title":"#6. Avant de Refactorer"},{"location":"blog/97-things/#7-mefiez-vous-du-partage","text":"Beware the Share ( Thing 07 ) \u2014 Udi Dahan Vous est-il arriv\u00e9 d'appliquer le principe DRY (Don't Repeat Yourself) ? Et de mutualiser du code dupliqu\u00e9 depuis deux modules dans votre code dans une librairie partag\u00e9e ? Et d'ajouter cette librairie dans les d\u00e9pendances de vos modules ? Et de vous rendre compte que vous venez de faire n'importe quoi ? Pourquoi ? Vous venez de passer \u00e0 c\u00f4t\u00e9 d'un \u00e9l\u00e9ment essentiel du d\u00e9veloppement informatique. Le contexte . Trouver du code dupliqu\u00e9 dans deux modules ind\u00e9pendants, ne signifie pas n\u00e9cessairement qu'il s'agisse de la m\u00eame logique m\u00e9tier. Les deux modules peuvent \u00e9voluer ind\u00e9pendamment l'un de l'autre, et les r\u00e8gles m\u00e9tiers \u00e9galement. Introduire une librairie pour mutualiser du code, a cr\u00e9\u00e9 un couplage, complexifiant la maintenance des deux modules, en leur imposant de se synchroniser avec un librairie tierce. Pourtant l'id\u00e9e initiale part d'une bonne intention : r\u00e9duire la duplication, et le nombre de lignes de codes. Prenez garde lorsque vous mutualisez du code, et assurez-vous que le contexte m\u00e9tier est coh\u00e9rent. Alors seulement, mutualisez.","title":"#7. M\u00e9fiez-vous du partage"},{"location":"blog/97-things/#8-la-regle-du-boy-scout","text":"The Boy Scout Rule ( Thing 08 ) \u2014 Robert C. Martin (Uncle Bob) Laissez toujours le campement plus propre que lorsque vous y \u00eates entr\u00e9. Quelque soit l'auteur originel du code que vous avez sous les yeux, si vous pensez pouvoir l'am\u00e9liorer, m\u00eame un tout petit peu, alors faites-le. Am\u00e9liorez continuellement la codebase que vous partagez avec vos coll\u00e8gues.","title":"#8. La r\u00e8gle du Boy Scout"},{"location":"blog/97-things/#9-commence-par-verifier-ton-code-avant-de-chercher-le-fautif-ailleurs","text":"Check Your Code First before Looking to Blame Others ( Thing 09 ) \u2014 Allan Kelly Nous, d\u00e9veloppeurs, sommes souvent de mauvaise foi : nous ne voulons pas remettre notre code en question lors d'un bug. Jamais. Cependant, les bugs du compilateur, ou de la JVM sont tr\u00e8s rares. Partez du principe que les outils que vous utilisez sont stables et matures, et qu'ils sont utilis\u00e9s par une multitude d'autres personnes, \u00e0 moins que vous n'utilisiez une version 0.1 ou une alpha. Aussi, quand vous avez un probl\u00e8me dans votre application, investissez votre \u00e9nergie \u00e0 rechercher le probl\u00e8me et la solution dans votre code, et pas dans le code les autres.","title":"#9. Commence par v\u00e9rifier ton code avant de chercher le fautif ailleurs"},{"location":"blog/97-things/#10-choisissez-vos-outils-avec-soin","text":"Choose Your Tools with Care ( Thing 10 ) \u2014 Giovanni Asproni Aujourd'hui, les logiciels sont rarement construits \u00e0 partir de rien : ils sont assembl\u00e9s \u00e0 partir d'outils existants, de frameworks et de librairies. Cependant, choisir le bon ensemble d'outils est parfois un casse-t\u00eate sans nom. Cherchez la raison d'\u00eatre de vos outils, et comprenez le probl\u00e8me qui a entrain\u00e9 leur cr\u00e9ation. Bien trop souvent, \u00e0 utiliser des librairies et des frameworks trop complexes, vous chercherez \u00e0 les tordre, et \u00e0 ler d\u00e9tourner de leur usage. Vous arriverez probablement \u00e0 le faire fonctionner, mais dans un contexte auquel il n'est pas destin\u00e9. Par exemple, si vous \u00eates dans un contexte asynchrone sur l'ensemble de votre syst\u00e8me, \u00e9vitez d'introduire un outil synchrone, m\u00eame s'il semble r\u00e9pondre \u00e0 une partie de votre probl\u00e8me. Ma strat\u00e9gie dans le choix des outils : ne prenez que les outils dont vous avez r\u00e9ellement besoin. J'essaie \u00e9galement, d'isoler au maximum ces outils de mon domaine m\u00e9tier. Je les int\u00e8gres dans des couches applicatives d\u00e9di\u00e9es. Ainsi, lorsque j'ai besoin de changer d'outils, je peux le faire facilement.","title":"#10. Choisissez vos outils avec soin"},{"location":"blog/97-things/#11-developpez-dans-le-language-du-domaine-metier","text":"Code in the Language of the Domain ( Thing 11 ) \u2014 Dan North Prenons l'exemple de deux codebases. Dans la premi\u00e8re vous trouvez ceci : if ( portfolioIdsByTraderId . get ( trader . getId ()) . containsKey ( portfolio . getId ())) {...} Apr\u00e8s moults r\u00e9flexions, vous vous rendez compte qu'il y a des associations de portfolios et de trader . Vous les trouvez dans un objet comme celui-ci : Map < int , Map < int , int >> portfolioIdsByTraderId ; Et, peu \u00e0 peu, vous vous rendez compte que ce dictionnaire conditionne la visibilit\u00e9 des portfolios par trader. Dans la seconde code base, vous tombez sur ceci : if ( trader . canView ( portfolio )) {...} Pas de prise de t\u00eate. Vous savez ce que le code fait, m\u00eame si vous ne savez pas comment. Peut-\u00eatre qu'il s'agit de Map de Map, comme dans l'exemple pr\u00e9c\u00e9dent, mais il s'agit de la logique du trader , pas de la votre. R\u00e9pondez franchement : sur quelle codebase pr\u00e9f\u00e9reriez-vous travailler ?","title":"#11. D\u00e9veloppez dans le Language du Domaine M\u00e9tier"},{"location":"blog/97-things/#12-le-code-est-le-design","text":"Code Is Design ( Thing 12 ) \u2014 Ryan Brush Projetons-nous dans un futur imaginaire, dans lequel des robots sont en mesure de nous construire n'importe quoi, \u00e0 partir d'air et sans \u00e9nergie. \u00c0 une seule condition : Qu'on leur fournisse des plans clairs et pr\u00e9cis. Imaginez la r\u00e9volution dans le monde de la construction ; si quelque chose cloche sur un b\u00e2timent ou une voiture, il suffit de corriger les plans et de les donner aux robots. Ils reconstruiront l'objet pour un co\u00fbt n\u00e9gligeable. Seulement, que se passe-t-il lorsque le desing est imparfait ou incomplet ? Les utilisateurs manipulent des objets imparfaits ou incomplets. Et m\u00eame si on envoie des robots d\u00e9di\u00e9 \u00e0 r\u00e9parer les erreurs de design, on arrive \u00e0 une conclusion : la qualit\u00e9 va de mal en pis, et les utilisateurs sont m\u00e9contents. Et si je vous disais que ce monde existe d\u00e9j\u00e0 en informatique ? Que les robots du futur, sont les compilateurs d'aujourd'hui ? Que les plans clairs et pr\u00e9cis, correspondent au code que les d\u00e9veloppeurs produisent ? Le point int\u00e9ressant de cette approche, c'est de consid\u00e9rer que le produit fini est issu d'un processus de cr\u00e9ativit\u00e9 plut\u00f4t que d'un processus m\u00e9canique. Cette approche nous donne des pistes pour \u00e9viter la catastrophe : - s'assurer de la qualit\u00e9 du produit par des batteries de tests. - gagner en efficacit\u00e9 en cherchant des outils plus pr\u00e9cis, et en s'entra\u00eenant \u00e0 les utiliser. Il n'y a pas de secret : les meilleurs designs sont produits par les meilleurs designers, qui se consacrent \u00e0 la ma\u00eetrise de leur Art. Le code fonctionne de la m\u00eame mani\u00e8re.","title":"#12. Le code EST le design"},{"location":"blog/97-things/#13-laspect-du-code-compte","text":"Code Layout Matters ( Thing 13 ) \u2014 Steve Freeman En tant que d\u00e9veloppeurs, nous passons plus de temps \u00e0 naviguer, et \u00e0 lire du code, qu'\u00e0 en \u00e9crire. Et ce, dans le but de trouver o\u00f9 coder. Il existe plusieurs moyens de faciliter cette lecture : Rendre le code facile \u00e0 scanner visuellement :les gens sont dou\u00e9s pour faire correspondre des motifs visuels entre eux. Si le code est homog\u00e8ne, il sera plus facile de trouver les s\u00e9parateurs et conteneurs dans le code, et de trouver o\u00f9 coder. Rendre la disposition du code expressive :la structure dui code aide \u00e0 comprendre l'intention, et les formateurs automatiques de code permettent de grouper les structures du code par l'indentation, les sauts de lignes, etc. Mais parfois, ils ne suffisent pas et il faut compl\u00e9ter \u00e0 la main les sauts de lignes, ou d'autres s\u00e9parateurs visuels pour bien mettre mon intention en \u00e9vidence. Rendre le code compact : plus j'ai de code sous mes yeux, moins j'en garde en t\u00eate. Aujourd'hui, les IDE mettent en \u00e9vidence le code avec de la coloration syntaxique, et des liens internes. Servez-vous de ces fonctionnalit\u00e9s pour garder un code compact, en \u00e9vitant le bruit des commentaires, et qui sera plus facile \u00e0 comprendre. L'allure g\u00e9n\u00e9rale du code doit m'aider \u00e0 le comprendre, rien de plus.","title":"#13. L'aspect du code compte"},{"location":"blog/97-things/#14-la-revue-de-code","text":"Code Reviews ( Thing 14 ) \u2014 Mattias Karlsson Vous ne le savez pas encore, mais vous avez envie de faire de la revue de code. Pourquoi ? Elle permet d'am\u00e9liorer la qualit\u00e9 du code Elle permet de diminuer la fr\u00e9quence des rat\u00e9s Elle permet de faire monter en comp\u00e9tence les relecteurs Elle permet de faire monter en comp\u00e9tence le r\u00e9dacteur Elle permet de faire du TeamBuilding Comment ? La reveue de code est un moment incroyable pour partager la connaissance d'un projet. Elle contribue \u00e0 am\u00e9liorer la propri\u00e9t\u00e9 collective du code de chacun des membres de l'\u00e9quipe. En revanche, vous devez chercher \u00e0 faire des remarques constructives plut\u00f4t que caustiques . Essayer d'organiser une revue de code hebdomadaire : prenez une \u00e0 deux heures pour lire simple une portion de code de votre projet, en groupe. Rendre cet exercice amusant, est la principale cl\u00e9 de la r\u00e9ussite, et tout le monde en sortira grandi.","title":"#14. La Revue de Code"},{"location":"blog/97-things/#15-reflexions-sur-votre-code","text":"Coding with Reason ( Thing 15 ) \u2014 Yechiel Kimchi Regardez votre code, et r\u00e9fl\u00e9chissez. Est-ce qu'il est syntaxiquement correct ? Ou voyez-vous des erreurs ? S'agit-il d'erreurs plut\u00f4t techniques ou fonctionnelles ? C'est tout de m\u00eame mieux d'utiliser un outil automatis\u00e9, tel un compilateur ou des tests automatis\u00e9s, pour faire cet exercice. N'est-il pas ? Malheureusement, ce n'est pas toujours possible. Pour faciliter cet exercice : essayez de d\u00e9couper le code en petites portions compr\u00e9hensibles (par exemple des m\u00e9thodes de 5 \u00e0 10 lignes), et r\u00e9fl\u00e9chissez de nouveau pour savoir si chaque petite portion de code est correcte ou non. Cette fa\u00e7on de faire vous rappelle-t-elle quelque chose ? La plupart des \"bonnes pratiques\" que l'on connait aujourd'hui, sont issues de d'exercices cherchant \u00e0 faciliter la lecture, et la reflexion sur le code, hors outillage. Beaucoup de ces pratiques sont, sans surprise, automatisables \u00e0 l'aide d'analyseurs statiques de code. Prenez le temps de r\u00e9fl\u00e9chir sur votre code. En plus de d\u00e9terminer de son exactitude, cela vous permet de mieux le comprendre. Et si vous communiquez le r\u00e9sultat de vos r\u00e9flexions, tout le monde en profitera !","title":"#15. Reflexions sur votre code"},{"location":"blog/97-things/#16-un-commentaire-sur-les-commentaires","text":"A Comment on Comments ( Thing 16 ) \u2014 Cal Evans Les commentaires ne sont pas n\u00e9cessairement un mal.Faites en sorte que le code soit compr\u00e9hensible pour les d\u00e9veloppeurs qui passeront derri\u00e8re vous. Mais n'en faites pas trop : assurez-vous que vos commentaires clarifient le code, et ne l'obfusquent pas. Les futurs d\u00e9veloppeurs doivent comprendre ce que fait le code en rapport avec le commentaire, sans avoir besoin de lire les d\u00e9tails d'impl\u00e9mentation.","title":"#16. Un Commentaire sur les commentaires"},{"location":"blog/97-things/#17-ne-commentez-que-ce-que-le-code-ne-peut-pas-dire-de-lui-meme","text":"Comment Only What the Code Cannot Say ( Thing 17 ) \u2014 Kevlin Henney Ecrire de bons commentaires est une comp\u00e9tence \u00e0 part enti\u00e8re. Elle consiste principalement \u00e0 savoir \u00e0 quel moment il faut ne pas en \u00e9crire. Un commentaire erron\u00e9 n'a pas de valeur, et peut avoir un effet n\u00e9gatif. Il peut nuire \u00e0 la concentration et \u00eatre source de distraction. De plus, il est plus facile pour un commentaire faux, de survivre dans une codebase, qu'un bug dans le code. Un commentaire n'est pas ex\u00e9cut\u00e9, contrairement au code. Comment qualifier la valeur d'un commentaire ? Il doit expliciter quelque chose que le code ne peut lui-m\u00eame dire. Lorsqu'une portion de code est comment\u00e9e, cherchez \u00e0 la remanier, pour qu'elle exprime par elle-m\u00eame l'intention du commentaire. Extrayez des m\u00e9thodes, renommez-les, exprimez l'intention du code par son design. La diff\u00e9rence entre ce qu'exprime le code, et ce que vous voulez dire au global, est un bon candidat pour en faire un commentaire.","title":"#17. Ne commentez que ce que le code ne peut pas dire de lui-m\u00eame"},{"location":"blog/97-things/#18-apprendre-en-continu","text":"Continuous Learning ( Thing 18 ) \u2014 Clint Shank N'importe qui sur Terre peut apprendre \u00e0 faire votre m\u00e9tier. Travaillez votre employabilit\u00e9, et continuez d'apprendre. Sinon, vous devenez un dinosaure, et vous dispara\u00eetrez quand plus personne n'aura besoin de vous. Comment faire ? Certain employeurs vous accompagnent, d'autres non, et pour assurez votre s\u00e9curit\u00e9, il est de votre responsabilit\u00e9 de prendre en charge votre \u00e9ducation. Beaucoup de m\u00e9thodes permettant de progresser, sont gratuites, et disponibles sur Internet. La technologie \u00e9volue vite. Ne restez pas derri\u00e8re.","title":"#18. Apprendre en continu"},{"location":"blog/97-things/#19-commodite-nest-par-aider","text":"Convenience Is not an -ility ( Thing 19 ) \u2014 Gregor Hohpe Ecrire de bonnes API de code n'est pas chose ais\u00e9e. Conna\u00eetre les bonnes pratiques ne garantis pas de savoir les appliquer proprement. Par exemple, sur une APi de 'strat\u00e9gie', je rencontre souvent des \" arguments de commodit\u00e9 \" : Je ne veux pas que mes consommateurs fassent deux appels s\u00e9par\u00e9s pour faire cette unique chose Pourquoi faire une seconde m\u00e9thode, alors que celle-ci fait d\u00e9j\u00e0 presque le travail ? Il suffit de rajouter un simple bool\u00e9an. Regarde c'est tr\u00e8s simple : si le second param\u00e8tre finit par \".txt\", alors la m\u00e9thode consid\u00e8re que le premier param\u00e8tres est un nom de fichier : on n'a pas vraiement besoin de deux m\u00e9thodes. Ce genre d'argument, est susceptible de diminuer la lisibilit\u00e9 du code, et de conduire \u00e0 des m\u00e9thodes telles que : parser.processNodes(text, false); Il n'y a rien de mal \u00e0 user de commodit\u00e9, tant qu'elle ne nuit pas au design des API. Les API sont suppos\u00e9es masquer la complexit\u00e9 sous-jacente du programme. Un vocabulaire coh\u00e9rent et r\u00e9fl\u00e9chi permet de rendre le code expressif et compr\u00e9hensif dans la couche logicielle appelant vos API.","title":"#19. Commodit\u00e9 n'est par aider"},{"location":"blog/97-things/#20-deployez-vite-et-souvent","text":"Deploy Early and Often ( Thing 20 ) \u2014 Steve Berczuk Le processus d'installation/d\u00e9ploiement, est la premi\u00e8re chose visible pour l'utilisateur final. Ce dernier utilise une application d\u00e9ploy\u00e9e. Entamez votre projet avec le processus d'installation. Ainsi, vous aurez cr\u00e9\u00e9 et livr\u00e9 un \u00e9l\u00e9ment \u00e0 forte valeur ajout\u00e9e pour l'utilisateur final. De plus, vous aurez la possibilit\u00e9 de l'affiner au fil de la vie du projet. Vous devriez tester et remanier ce processus comme vous le faites avec le code. Le processus d'installation/d\u00e9ploiement est indispensable \u00e0 la productivit\u00e9 de votre utilisateur final. Ne le n\u00e9gligez pas.","title":"#20. D\u00e9ployez vite et souvent"},{"location":"blog/97-things/#21-separez-les-exceptions-techniques-des-exceptions-metier","text":"Distinguish Business Exceptions from Technical ( Thing 21 ) \u2014 Dan Bergh Johnsson Au runtime, il y a deux raisons pour lesquelles les choses se passent mal l'impossibilit\u00e9 d'utiliser l'application pour des raisons techniques la pr\u00e9vention d'une mauvaise utilisation de l'application pour des raisons m\u00e9tiers Les langages de programmation modernes ont un moyen pour signaler ce genre de probl\u00e8me : lancer une Exception. Seulement, elles sont utilis\u00e9es indiff\u00e9remment pour les deux raisons ci-dessus, ce qui peut \u00eatre source de confusion. M\u00e9langer les Exceptions m\u00e9tier et les Exceptions techniques dans une m\u00eame hi\u00e9rachie ajoute de la complexit\u00e9 dans les couches qui les traitent. Bien s\u00e9parer les responsabilit\u00e9s am\u00e9liore la clart\u00e9, et augmente les chances de traiter les chaque typologie d'Exceptions dans la couche applicative appropri\u00e9e.","title":"#21. S\u00e9parez les exceptions techniques des exceptions m\u00e9tier"},{"location":"blog/97-things/#22-entrainez-vous-volontairement-encore-et-encore","text":"Do Lots of Deliberate Practice ( Thing 22 ) \u2014 Jon Jagger L'entra\u00eenement volontaire, ou \"Deliberate Practice\" en anglais, va au-del\u00e0 de la simple r\u00e9solution d'un probl\u00e8me. Il s'agit de la r\u00e9p\u00e9tition d'un exercice, pour acqu\u00e9rir une expertise sur une comp\u00e9tence. Cela signifie r\u00e9p\u00e9ter l'exercice, encore et encore, jusqu'\u00e0 atteindre le niveau de ma\u00eetrise satisfaisant. A quel niveau peut-on consid\u00e9rer avoir acquis la ma\u00eetrise de l'exercice ? Peter Norvig donne \"10 000 heures, c'est le nombre magique\". Cela repr\u00e9sente environ 20h par semaine, pendant 10 ans. Mais l'entra\u00eenement volontaire va encore au-del\u00e0 de la simple r\u00e9p\u00e9tition. Il s'agit de se mettre dans une situation qui vous tire un tout petit peu plus vers le haut, de chercher \u00e0 r\u00e9soudre la probl\u00e9matique, puis d'analyser votre performance pour vous am\u00e9liorer la fois suivante. L'entra\u00eenement volontaire est une question d'apprentissage. D'un apprentissage qui vous change. D'un apprentissage qui modifie votre comportement et vos habitudes. Courage!","title":"#22. Entra\u00eenez-vous, volontairement, encore et encore"},{"location":"blog/97-things/#23-les-idiomes-specifiques-du-domaine","text":"Domain-Specific Languages ( Thing 23 ) \u2014 Michael Hunger Lorsque vous \u00e9coutez une discussion entre experts, vous vous rendrez compte qu'ils utilisent un vocabulaire diff\u00e9rent de leur langage de tous les jours. Et ce, quel que soit le domaine d'expertise. C'est ce q'uon appelle des DSL (Domain-Specific Languages) : chaque domaine sp\u00e9cifgique poss\u00e8de son vocabulaire sp\u00e9cifique. Les DSL peuvent \u00eatre de deux sortes : les internes et les externes. Les DSL internes , g\u00e9n\u00e9ralement du sucre syntaxique dans un language de programmation, permettant de se rapprocher du langage naturel. Ce genre de DSL utilise des pattenrs, comme les Builders, du chainage de m\u00e9thode et des annotations Les DSL externes , g\u00e9n\u00e9ralement du texte ou des diagrammes, sont souvent analys\u00e9s par des outils (parsers, transformers) et convertis en \u00e9l\u00e9ments d'un mod\u00e8le applicatif. Exemple : AndroMDA, Gherkins. Adaptez votre DSl au public que vous visez. En masquant la complexit\u00e9 technique les DSLs permettent \u00e0 leurs usagers d'adapter leur syst\u00e8me en toute autonomie, sans l'aide de d\u00e9veloppeurs.","title":"#23. Les idiomes sp\u00e9cifiques du domaine"},{"location":"blog/97-things/#24-nayez-pas-peur-de-casser-des-choses","text":"Don\u2019t Be Afraid to Break Things ( Thing 24 ) \u2014 Mike Lewis Dans le monde de l'industrie logicielle, tout le monde a rencontr\u00e9 une application qualifi\u00e9e, au mieux, de pr\u00e9caire. Sur ce genre d'application, \u00e0 chaque fois que l'on modifie quelque chose, on est susceptibles de casser une autre fonctionnalit\u00e9, sans lien apparent avec le code modifi\u00e9. Dans ce contexte, chaque fonctionnalit\u00e9 est livr\u00e9e avec le moins de modification possible. C'est l'\u00e9quivalent de jouer au Jenga, mais sur un logiciel. Une telle aplication est malade, et n\u00e9cessite un m\u00e9decin qui amputerait les portions malades pour les soigner. Tel un chirurgien, ne craignez pas votre code, et ne vous laissez pas paralyser par la peur du changement. Investissez du temps dans le remaniement du code, car cela apportera des b\u00e9n\u00e9fices sur la dur\u00e9e du projet. Prenez soin de votre application. Soignez-la. Nettoyez-la. Cett attitude est contagieuse, et inspirera vos coll\u00e8gues. Il se mettrront \u00e0 leur tour \u00e0 prendre soin de l'application. Gardez une liste des \"mesure d'hygi\u00e8ne\" de l'application, que l'\u00e9quipe prendra soin sur la dur\u00e9e du projet. Ne cessez jamais de prendre soin de la sant\u00e9 g\u00e9n\u00e9rale de votre application.","title":"#24. N'ayez pas peur de casser des choses"},{"location":"blog/97-things/#25-ne-soyez-pas-tendres-avec-vos-donnees-de-test","text":"Don't Be Cute with Your Test Data ( Thing 25 ) \u2014 Rod Begbie L'histoire du d\u00e9veloppement poss\u00e8de plusieurs anecdotes croustillantes autour du th\u00e8me \"Personne ne verra \u00e7a\", qui, subitement, devient visible. Le type de fuite varie, et est parfois pr\u00e9judiciable, pour une personne, une \u00e9quipe, ou toute l'entreprise. Par exemple : Lors d'une d\u00e9mo, le client clique sur un bouton non-impl\u00e9ment\u00e9. Un message lui dit \"Ne recommence pas, b\u00e2tard !\" Un d\u00e9veloppeur maintenant une application legacy, se voit demander de mettre en place une fen\u00eatre de gestion des erreurs. Subitement les utilisateurs se voient afficher des messages \"La base de donn\u00e9e sacr\u00e9e a \u00e9t\u00e9 corrompue, Batman!\" lorsque quelque chose casse. Quelqu'un a confondu les interfaces d'administration de tests et de prod, et a saisi quelques donn\u00e9es \"rigolotes\" en production. Les utilisateurs peuvent d\u00e9sormais acheter le \"Conseiller personnel de Bill Gates\" pour la modique somme de 1M\u20ac Rappelez-vous du vieil adage : Un mensonge peut faire le tour de la terre le temps que la v\u00e9rit\u00e9 mette ses chaussures. \u2014 Mark Twain Adage, d\u00e9j\u00e0 vrai en ces temps, o\u00f9 Twitter, Facebook, LinkedIn, n'existaient pas encore. En bref, d\u00e8s que vous \u00e9crivez du texte dans votre code, qu'il s'agisse de commentaires, de logs ou de donn\u00e9es de test, r\u00e9fl\u00e9chissez \u00e0 quoi cela ressemblerait s'il devenait public.","title":"#25. Ne soyez pas tendres avec vos donn\u00e9es de test"},{"location":"blog/97-things/#conclusion","text":"Voici d\u00e9j\u00e0 25 r\u00e9flexions sur les 97 du livre. J'esp\u00e8re que vous en tirez quelque chose. Malgr\u00e9 le fait que vous subissez mon interpr\u00e9tation :) Je vous rappelle que, si vous cherchez \u00e0 acc\u00e9der aux textes originaux, ils sont disponibles sur GitHub , GitBook Personnellement, m\u00eame si je ne suis pas toujours d'accord avec les propos des auteurs, j'apprends des petits trucs par ce et par l\u00e0. Je trouve \u00e7a amusant de comparer le contexte du monde informatique au moment de la sortie du livre (2010), et le contexte actuel. Je prendrais le temps de faire les autres, mais... Patience ! Et vous ? Quelles sont les p\u00e9pites, ou les r\u00e9flexions qui vous ont marqu\u00e9 ?","title":"Conclusion"},{"location":"learn/","text":"Les formations de cette section constituent les sujets sur lesquels j'ai pris le temps de faire une pr\u00e9sentation, et parfois, de mettre \u00e0 plat les objectifs p\u00e9dagogiques.","title":"Disclaimer"},{"location":"learn/formations/solid/","text":"Les principes S.O.L.I.D. par la pratique \u00b6 Vous avez entendu parler de Clean Code et de certains principes, ou normes de coding. Les principes SOLID en font partie. Vous voulez en savoir plus pour faire du code robuste comme de la pierre ? Cette formation s'adresser \u00e0 vous. Format \u00b6 Pr\u00e9sentations + Coding Dojo Programme \u00b6 cf. D\u00e9roul\u00e9 Pr\u00e9requis \u00b6 Connaitre un langage de programmation (Java, JavaScript, PhP, Ruby) Conna\u00eetre TDD Conna\u00eetre \"Simple Design\" Conna\u00eetre \"Clean Code\" Public cible \u00b6 D\u00e9veloppeur Junior, ayant une sensibilit\u00e9 au Clean Code, et rod\u00e9 aux pratiques XP (TDD, Pair Programming) D\u00e9veloppeur Confirm\u00e9 ayant envie de creuser le sujet Dur\u00e9e de la session \u00b6 1 journ\u00e9e","title":"S.O.L.I.D"},{"location":"learn/formations/solid/#les-principes-solid-par-la-pratique","text":"Vous avez entendu parler de Clean Code et de certains principes, ou normes de coding. Les principes SOLID en font partie. Vous voulez en savoir plus pour faire du code robuste comme de la pierre ? Cette formation s'adresser \u00e0 vous.","title":"Les principes S.O.L.I.D. par la pratique"},{"location":"learn/formations/solid/#format","text":"Pr\u00e9sentations + Coding Dojo","title":"Format"},{"location":"learn/formations/solid/#programme","text":"cf. D\u00e9roul\u00e9","title":"Programme"},{"location":"learn/formations/solid/#prerequis","text":"Connaitre un langage de programmation (Java, JavaScript, PhP, Ruby) Conna\u00eetre TDD Conna\u00eetre \"Simple Design\" Conna\u00eetre \"Clean Code\"","title":"Pr\u00e9requis"},{"location":"learn/formations/solid/#public-cible","text":"D\u00e9veloppeur Junior, ayant une sensibilit\u00e9 au Clean Code, et rod\u00e9 aux pratiques XP (TDD, Pair Programming) D\u00e9veloppeur Confirm\u00e9 ayant envie de creuser le sujet","title":"Public cible"},{"location":"learn/formations/solid/#duree-de-la-session","text":"1 journ\u00e9e","title":"Dur\u00e9e de la session"},{"location":"learn/formations/solid/deroule/","text":"Kata RPN Calculator - SOLID Version \u00b6 Le but de ce Kata, est de faire d\u00e9couvrir une partie de SOLID : SRP, OCP, et LSP. Dans cet exercice, on va mettre de cot\u00e9 : - La soustraction ; trop proche de l\u2019addition et qui engendre des questions sur les cas au limite trop t\u00f4t sur leur codebase - La composition des op\u00e9rations, qui va trop loin par rapport au but de l\u2019exercice Introduction du Kata \u00b6 Pr\u00e9senter SOLID, si ce n\u2019a pas \u00e9t\u00e9 fait avant. Pour avoir le temps d\u2019insister sur OCP et LSP, c\u2019est plus facile d\u2019avoir fait SRP avant, et de ne pas trop s\u2019attarder dessus. Au vu des promotions pr\u00e9c\u00e9dentes, le SRP s\u2019assimile rapidement. Pr\u00e9senter la Reverse Polish Notation : http://codingdojo.org/kata/RPN/ Poser quelques contraintes : - On ne prend en entr\u00e9e que des entiers positifs - On ne retourne que des nombres positifs Proposition de d\u00e9roul\u00e9 : \u00b6 Pr\u00e9sentation de la journ\u00e9e Quicky SRP (si pas encore fait) Session 1 : Objectif : impl\u00e9menter l\u2019Addition [20-25 mins] Contrainte : Respecter le SRP Exemples : 2 2 + => 4 3 4 + => 7 Session 2 : Objectif : impl\u00e9menter la Multiplication [20-25 mins] Exemples : 2 2 * => 4 3 4 * => 12 Session 3 : Objectif : impl\u00e9menter la Division [20-25 mins] Exemples : 2 2 / => 1 3 4 / => 0.75 Code review en Mob [5 mins/paire] Quicky OCP Session 4 : Refactoring [20-25 mins] Objectif : Mettre en place l\u2019OCP \ud83c\udf89 Pause d\u00e9jeuner \ud83c\udf89 Session de question : Par rapport \u00e0 la division : est-ce qu'on peut utiliser la classe division partout o\u00f9 on utilise addition ? Quicky LSP Session 6 : Refactoring [20-25 mins] Objectif : Mettre en place l\u2019OCP Code review en Mod [5 mins/paire] En Dojo (voir les r\u00e8gles du Dojo) sur le Kata \"\"Roman Numerals\"\", on abordera les 5 Principes S.O.L.I.D. Intoduction et pr\u00e9sentation du Kata. It\u00e9ration 1: \"\"Impl\u00e9menter l'addition\"\" Introduction au Kata Introduction de SRP (Single Responsibility Principle) Refactor et \u00e9changes It\u00e9ration 2: \"\"Impl\u00e9menter la multiplication\"\" Pr\u00e9sentation des UseCases Introduction de OCP (Open-Close Principle) Refactor et \u00e9changes It\u00e9ration 3: \"\"Impl\u00e9menter la division\"\" Pr\u00e9sentation des UseCases Introduction de LSP (Liskov Substitution Principle) Refactor et \u00e9changes It\u00e9ration 4: \"\"Impl\u00e9menter un calculateur 'normal'\"\" Pr\u00e9sentation des UsesCases Introduction de DIP (Dependency Inversion Principle) Refactor et \u00e9changes\"","title":"Deroule"},{"location":"learn/formations/solid/deroule/#kata-rpn-calculator-solid-version","text":"Le but de ce Kata, est de faire d\u00e9couvrir une partie de SOLID : SRP, OCP, et LSP. Dans cet exercice, on va mettre de cot\u00e9 : - La soustraction ; trop proche de l\u2019addition et qui engendre des questions sur les cas au limite trop t\u00f4t sur leur codebase - La composition des op\u00e9rations, qui va trop loin par rapport au but de l\u2019exercice","title":"Kata RPN Calculator - SOLID Version"},{"location":"learn/formations/solid/deroule/#introduction-du-kata","text":"Pr\u00e9senter SOLID, si ce n\u2019a pas \u00e9t\u00e9 fait avant. Pour avoir le temps d\u2019insister sur OCP et LSP, c\u2019est plus facile d\u2019avoir fait SRP avant, et de ne pas trop s\u2019attarder dessus. Au vu des promotions pr\u00e9c\u00e9dentes, le SRP s\u2019assimile rapidement. Pr\u00e9senter la Reverse Polish Notation : http://codingdojo.org/kata/RPN/ Poser quelques contraintes : - On ne prend en entr\u00e9e que des entiers positifs - On ne retourne que des nombres positifs","title":"Introduction du Kata"},{"location":"learn/formations/solid/deroule/#proposition-de-deroule","text":"Pr\u00e9sentation de la journ\u00e9e Quicky SRP (si pas encore fait) Session 1 : Objectif : impl\u00e9menter l\u2019Addition [20-25 mins] Contrainte : Respecter le SRP Exemples : 2 2 + => 4 3 4 + => 7 Session 2 : Objectif : impl\u00e9menter la Multiplication [20-25 mins] Exemples : 2 2 * => 4 3 4 * => 12 Session 3 : Objectif : impl\u00e9menter la Division [20-25 mins] Exemples : 2 2 / => 1 3 4 / => 0.75 Code review en Mob [5 mins/paire] Quicky OCP Session 4 : Refactoring [20-25 mins] Objectif : Mettre en place l\u2019OCP \ud83c\udf89 Pause d\u00e9jeuner \ud83c\udf89 Session de question : Par rapport \u00e0 la division : est-ce qu'on peut utiliser la classe division partout o\u00f9 on utilise addition ? Quicky LSP Session 6 : Refactoring [20-25 mins] Objectif : Mettre en place l\u2019OCP Code review en Mod [5 mins/paire] En Dojo (voir les r\u00e8gles du Dojo) sur le Kata \"\"Roman Numerals\"\", on abordera les 5 Principes S.O.L.I.D. Intoduction et pr\u00e9sentation du Kata. It\u00e9ration 1: \"\"Impl\u00e9menter l'addition\"\" Introduction au Kata Introduction de SRP (Single Responsibility Principle) Refactor et \u00e9changes It\u00e9ration 2: \"\"Impl\u00e9menter la multiplication\"\" Pr\u00e9sentation des UseCases Introduction de OCP (Open-Close Principle) Refactor et \u00e9changes It\u00e9ration 3: \"\"Impl\u00e9menter la division\"\" Pr\u00e9sentation des UseCases Introduction de LSP (Liskov Substitution Principle) Refactor et \u00e9changes It\u00e9ration 4: \"\"Impl\u00e9menter un calculateur 'normal'\"\" Pr\u00e9sentation des UsesCases Introduction de DIP (Dependency Inversion Principle) Refactor et \u00e9changes\"","title":"Proposition de d\u00e9roul\u00e9 :"},{"location":"learn/formations/solid/slides/dip/","text":"Dependency Inversion Principle \u00b6 Par la pratique du RPN Calculator \u00b6 Slide 2 \u00b6 This reduces coupling, and makes abstract code reusable Keep Abstractions clean // Keep Abstractions Reusable // Focus On Abstraction, Not Detail It can be thought of the natural progression of the Liskov Substitution Principle, the Open Closed Principle and even the Single Responsibility Principle. Entities must depend on abstractions not on concretions. It states that the high level module must not depend on the low level module, but they should depend on abstractions. Smells Dependencies between classes (vs interface) Monolithic architecture Abstraction depends on details/implementation -- Vertical \u00b6 TODO Slide 3 \u00b6 -- Some stuff","title":"Dependency Inversion Principle"},{"location":"learn/formations/solid/slides/dip/#dependency-inversion-principle","text":"","title":"Dependency Inversion Principle"},{"location":"learn/formations/solid/slides/dip/#par-la-pratique-du-rpn-calculator","text":"","title":"Par la pratique du RPN Calculator"},{"location":"learn/formations/solid/slides/dip/#slide-2","text":"This reduces coupling, and makes abstract code reusable Keep Abstractions clean // Keep Abstractions Reusable // Focus On Abstraction, Not Detail It can be thought of the natural progression of the Liskov Substitution Principle, the Open Closed Principle and even the Single Responsibility Principle. Entities must depend on abstractions not on concretions. It states that the high level module must not depend on the low level module, but they should depend on abstractions. Smells Dependencies between classes (vs interface) Monolithic architecture Abstraction depends on details/implementation --","title":"Slide 2"},{"location":"learn/formations/solid/slides/dip/#vertical","text":"TODO","title":"Vertical"},{"location":"learn/formations/solid/slides/dip/#slide-3","text":"-- Some stuff","title":"Slide 3"},{"location":"learn/formations/solid/slides/intro/","text":"SOLID \u00b6 Par la pratique du RPN Calculator \u00b6 Slide 2 \u00b6 SOLID : si consciemment, tu ne les respecte pas, sache que tu fais de la m**** SOLID can be considered a set of best practices and recommendations made by experts (meaning they have been proved before) in order to provide a reliable foundation in how we design applications. These practices strive to make easier to maintain, extend, adapt and scale our applications https://www.vectorstock.com/royalty-free-vectors/stone-vectors -- Vertical \u00b6 TODO Slide 3 \u00b6 -- Some stuff","title":"SOLID"},{"location":"learn/formations/solid/slides/intro/#solid","text":"","title":"SOLID"},{"location":"learn/formations/solid/slides/intro/#par-la-pratique-du-rpn-calculator","text":"","title":"Par la pratique du RPN Calculator"},{"location":"learn/formations/solid/slides/intro/#slide-2","text":"SOLID : si consciemment, tu ne les respecte pas, sache que tu fais de la m**** SOLID can be considered a set of best practices and recommendations made by experts (meaning they have been proved before) in order to provide a reliable foundation in how we design applications. These practices strive to make easier to maintain, extend, adapt and scale our applications https://www.vectorstock.com/royalty-free-vectors/stone-vectors --","title":"Slide 2"},{"location":"learn/formations/solid/slides/intro/#vertical","text":"TODO","title":"Vertical"},{"location":"learn/formations/solid/slides/intro/#slide-3","text":"-- Some stuff","title":"Slide 3"},{"location":"learn/formations/solid/slides/isp/","text":"Interface Segregation Principle \u00b6 Par la pratique du RPN Calculator \u00b6 Slide 2 \u00b6 A client should never be forced to implement an interface that it doesn\u2019t use or clients shouldn\u2019t be forced to depend on methods they do not use Smells Fat interface/Class with lot of methods Interface has multiple responsibilities Difficulties to expose a subset of responsibilities ISP relates to important characteristics - cohesion and coupling. Ideally your components must be highly tailored. It improves code robustness and maintainability. ISP is important for user of your interface, if I want to manipulate headers do I have to bother with session management\u2026 The Key Is Minimizing Coupling Surface => Decreases Coupling Between Objects Can be interfaces Or Classes (Facade Pattern), Or Packages, Or Layers (View Layer, etc) => Inverts The Dependency Enforcing ISP gives you following bonuses: High cohesion - better understandability, robustness Low coupling - better maintainability, high resistance to changes -- Vertical \u00b6 TODO Slide 3 \u00b6 -- Some stuff","title":"Interface Segregation Principle"},{"location":"learn/formations/solid/slides/isp/#interface-segregation-principle","text":"","title":"Interface Segregation Principle"},{"location":"learn/formations/solid/slides/isp/#par-la-pratique-du-rpn-calculator","text":"","title":"Par la pratique du RPN Calculator"},{"location":"learn/formations/solid/slides/isp/#slide-2","text":"A client should never be forced to implement an interface that it doesn\u2019t use or clients shouldn\u2019t be forced to depend on methods they do not use Smells Fat interface/Class with lot of methods Interface has multiple responsibilities Difficulties to expose a subset of responsibilities ISP relates to important characteristics - cohesion and coupling. Ideally your components must be highly tailored. It improves code robustness and maintainability. ISP is important for user of your interface, if I want to manipulate headers do I have to bother with session management\u2026 The Key Is Minimizing Coupling Surface => Decreases Coupling Between Objects Can be interfaces Or Classes (Facade Pattern), Or Packages, Or Layers (View Layer, etc) => Inverts The Dependency Enforcing ISP gives you following bonuses: High cohesion - better understandability, robustness Low coupling - better maintainability, high resistance to changes --","title":"Slide 2"},{"location":"learn/formations/solid/slides/isp/#vertical","text":"TODO","title":"Vertical"},{"location":"learn/formations/solid/slides/isp/#slide-3","text":"-- Some stuff","title":"Slide 3"},{"location":"learn/formations/solid/slides/lsp/","text":"Liskov Substitution Principle \u00b6 Par la pratique du RPN Calculator \u00b6 Slide 2 \u00b6 Let q(x) be a property provable about objects of x of type T. Then q(y) should be provable for objects y of type S where S is a subtype of T. Every subclass/derived class should be substitutable for their base/parent class Smells You have to check for the type provided (e.g. instanceof) This principle is just an extension of the Open Close Principle and it means that we must make sure that new derived classes are extending the base classes without changing their behavior. every subclass/derived class should be substitutable for their base/parent class Preconditions cannot be strengthened in a subtype Postconditions cannot be weakened in a subtype Invariants of the supertype must be preserved in a subtype Exceptions Should Be Stricter -- Vertical \u00b6 TODO Slide 3 \u00b6 -- Some stuff","title":"Liskov Substitution Principle"},{"location":"learn/formations/solid/slides/lsp/#liskov-substitution-principle","text":"","title":"Liskov Substitution Principle"},{"location":"learn/formations/solid/slides/lsp/#par-la-pratique-du-rpn-calculator","text":"","title":"Par la pratique du RPN Calculator"},{"location":"learn/formations/solid/slides/lsp/#slide-2","text":"Let q(x) be a property provable about objects of x of type T. Then q(y) should be provable for objects y of type S where S is a subtype of T. Every subclass/derived class should be substitutable for their base/parent class Smells You have to check for the type provided (e.g. instanceof) This principle is just an extension of the Open Close Principle and it means that we must make sure that new derived classes are extending the base classes without changing their behavior. every subclass/derived class should be substitutable for their base/parent class Preconditions cannot be strengthened in a subtype Postconditions cannot be weakened in a subtype Invariants of the supertype must be preserved in a subtype Exceptions Should Be Stricter --","title":"Slide 2"},{"location":"learn/formations/solid/slides/lsp/#vertical","text":"TODO","title":"Vertical"},{"location":"learn/formations/solid/slides/lsp/#slide-3","text":"-- Some stuff","title":"Slide 3"},{"location":"learn/formations/solid/slides/ocp/","text":"Open-Close Principle \u00b6 Par la pratique du RPN Calculator \u00b6 Slide 2 \u00b6 Objects or entities should be open for extension, but closed for modification. Smells Complex switch/Lot of ifs High cyclomatic complexity Heavy use of polymorphism -- Vertical \u00b6 TODO Slide 3 \u00b6 -- Some stuff","title":"Open-Close Principle"},{"location":"learn/formations/solid/slides/ocp/#open-close-principle","text":"","title":"Open-Close Principle"},{"location":"learn/formations/solid/slides/ocp/#par-la-pratique-du-rpn-calculator","text":"","title":"Par la pratique du RPN Calculator"},{"location":"learn/formations/solid/slides/ocp/#slide-2","text":"Objects or entities should be open for extension, but closed for modification. Smells Complex switch/Lot of ifs High cyclomatic complexity Heavy use of polymorphism --","title":"Slide 2"},{"location":"learn/formations/solid/slides/ocp/#vertical","text":"TODO","title":"Vertical"},{"location":"learn/formations/solid/slides/ocp/#slide-3","text":"-- Some stuff","title":"Slide 3"},{"location":"learn/formations/solid/slides/srp/","text":"Single Responsibility Principle \u00b6 Par la pratique du RPN Calculator \u00b6 Slide 2 \u00b6 A class should have one and only one reason to change, meaning that a class should have only one job. Smells Large Class Long Method Lot of methods High Coupling/Low cohesion Helper class Multiple functional/technical concepts at the same place When every instance method touches every instance variable then the class is maximally cohesive. When no instance method shares an instance variable with any other, the class is minimally cohesive. -- Vertical \u00b6 TODO Slide 3 \u00b6 -- Some stuff","title":"Single Responsibility Principle"},{"location":"learn/formations/solid/slides/srp/#single-responsibility-principle","text":"","title":"Single Responsibility Principle"},{"location":"learn/formations/solid/slides/srp/#par-la-pratique-du-rpn-calculator","text":"","title":"Par la pratique du RPN Calculator"},{"location":"learn/formations/solid/slides/srp/#slide-2","text":"A class should have one and only one reason to change, meaning that a class should have only one job. Smells Large Class Long Method Lot of methods High Coupling/Low cohesion Helper class Multiple functional/technical concepts at the same place When every instance method touches every instance variable then the class is maximally cohesive. When no instance method shares an instance variable with any other, the class is minimally cohesive. --","title":"Slide 2"},{"location":"learn/formations/solid/slides/srp/#vertical","text":"TODO","title":"Vertical"},{"location":"learn/formations/solid/slides/srp/#slide-3","text":"-- Some stuff","title":"Slide 3"},{"location":"learn/formations/tdd/","text":"Raison d'\u00eatre de la formation En tant que d\u00e9veloppeur, A l'issue de la formation, je suis capable d'appliquer la m\u00e9thodologie TDD Afin d'effectuer mon travail, avec professionnalisme et brio Que contient cette formation ? \u00b6 Cette formation contient un parcours allant de : La sensibilisation aux Tests dans le d\u00e9veloppement logiciel L'introduction \u00e0 la m\u00e9thodologie de d\u00e9veloppement \" TDD \" La prise en main du TDD et des cl\u00e9s pour le mettre en place sur son projet. Voir aussi l'ensemble des Objectifs P\u00e9dagogiques auxquels r\u00e9pond cette formation A qui s'adresse cette formation ? \u00b6 Cette formation contient diff\u00e9rents modules. Les premiers modules de sensibilisation sont accessibles \u00e0 toute personne en lien avec le d\u00e9veloppement informatique. Les derniers modules sont plus techniques et sont destin\u00e9s \u00e0 des profils orient\u00e9s d\u00e9veloppeurs. Slides \u00b6 Quicky","title":"TDD"},{"location":"learn/formations/tdd/#que-contient-cette-formation","text":"Cette formation contient un parcours allant de : La sensibilisation aux Tests dans le d\u00e9veloppement logiciel L'introduction \u00e0 la m\u00e9thodologie de d\u00e9veloppement \" TDD \" La prise en main du TDD et des cl\u00e9s pour le mettre en place sur son projet. Voir aussi l'ensemble des Objectifs P\u00e9dagogiques auxquels r\u00e9pond cette formation","title":"Que contient cette formation ?"},{"location":"learn/formations/tdd/#a-qui-sadresse-cette-formation","text":"Cette formation contient diff\u00e9rents modules. Les premiers modules de sensibilisation sont accessibles \u00e0 toute personne en lien avec le d\u00e9veloppement informatique. Les derniers modules sont plus techniques et sont destin\u00e9s \u00e0 des profils orient\u00e9s d\u00e9veloppeurs.","title":"A qui s'adresse cette formation ?"},{"location":"learn/formations/tdd/#slides","text":"Quicky","title":"Slides"},{"location":"learn/formations/tdd/objectifs-p%C3%A9dagogiques/","text":"Tous les objectifs p\u00e9dagogiques de la formation. Raison d'\u00eatre de la formation En tant que d\u00e9veloppeur, A l'issue de la formation, je suis capable d'appliquer la m\u00e9thodologie TDD Afin d'effectuer mon travail, avec professionnalisme et brio Je suis capable d'\u00e9crire des tests : Un Test Unitaire Un Test FIRST Je suis capable de comprendre les rapports de test. Je sais utiliser un Framework de test Je sais utiliser un Framework de d'Assertions Je suis capable de citer le Mantra : \"Red/Green/Refactor\" Je suis capable de d\u00e9velopper une fonctionnalit\u00e9 en suivant les \u00e9tapes \"Red/Green/Refactor\" Dans un Kata Dans mon Projet Je sais que je peux toujours utiliser le TDD , quel que soit mon contexte projet, quel que soit mon langage. Je suis capable de choisir le bon Test Double dans mes tests","title":"Objectifs P\u00e9dagogiques"},{"location":"learn/formations/tdd/ressources/","text":"Conf\u00e9rences et Podcasts utiles \u00b6 \ud83d\udcf0 Testing Strategies in a Microservice Architecture \ud83d\udcfa J.B. Rainsberger - Integrated Tests Are A Scam \ud83d\udcfa TDD, Where Did It All Go Wrong, par Ian Cooper \ud83d\udcfa Architecture Hexagonale Level 2: Comment bien \u00e9crire ses TUs - Julien Top\u00e7u et Jordan Nourry \ud83d\udd0a #43 \u2013 Tester c\u2019est douter \u2013 Arnaud Lemaire","title":"Documents de travail"},{"location":"learn/formations/tdd/ressources/#conferences-et-podcasts-utiles","text":"\ud83d\udcf0 Testing Strategies in a Microservice Architecture \ud83d\udcfa J.B. Rainsberger - Integrated Tests Are A Scam \ud83d\udcfa TDD, Where Did It All Go Wrong, par Ian Cooper \ud83d\udcfa Architecture Hexagonale Level 2: Comment bien \u00e9crire ses TUs - Julien Top\u00e7u et Jordan Nourry \ud83d\udd0a #43 \u2013 Tester c\u2019est douter \u2013 Arnaud Lemaire","title":"Conf\u00e9rences et Podcasts utiles"},{"location":"learn/formations/tdd/slides/","text":"Test Driven Development \u00b6 aka. TDD \u00b6 Qu'est-ce que c'est ? \u00b6 -- -- M\u00e9thodologie de d\u00e9veloppement informatique \u00b6 Objectif : produire du code de prod ! Trois r\u00e8gles \u00b6 par \"Uncle Bob\" -- You are not allowed to write any production code unless it is to make a failing unit test pass Note: Interdit \u00c9crire du code de prod, avant un test en \u00e9chec Objectif du code de prod : faire passer un test. -- You are not allowed to write any more of a unit test than is sufficient to fail; and compilation failures are failures -- You are not allowed to write any more production code than is sufficient to pass the one failing unit test Comment on fait \u00b6 -- Red \u00b6 Make it fail \u00b6 Note: No code without a failing test Declare & Name Arrange-Act-Assert Given-When-Then -- Green \u00b6 Make it work \u00b6 Note: A simply as possible \u2192 Frugalit\u00e9 Implement solution Fake it Start over -- Refactor \u00b6 Make it Better \u00b6 -- Refactor \u00b6 Note: RED: Make it fail > No code without a failing test GREEN : Make it work > A simply as possible REFACTOR: Make it better > No new functionality Pourquoi faire ? \u00b6 -- You can test all you want, if you don\u2019t know how to approach the problem, you\u2019re not going to get a solution Note: Tu peux tester autant que tu veux, Si tu ne sais pas comment aborder le probl\u00e8me Tu n\u2019es pas pr\u00eat de trouver une solution -- TDD == GPS \u00b6 Savoir o\u00f9 on va Avancer pas \u00e0 pas --","title":"TDD"},{"location":"learn/formations/tdd/slides/#test-driven-development","text":"","title":"Test Driven Development"},{"location":"learn/formations/tdd/slides/#aka-tdd","text":"","title":"aka. TDD"},{"location":"learn/formations/tdd/slides/#quest-ce-que-cest","text":"-- --","title":"Qu'est-ce que c'est ?"},{"location":"learn/formations/tdd/slides/#methodologie-de-developpement-informatique","text":"Objectif : produire du code de prod !","title":"M\u00e9thodologie de d\u00e9veloppement informatique"},{"location":"learn/formations/tdd/slides/#trois-regles","text":"par \"Uncle Bob\" -- You are not allowed to write any production code unless it is to make a failing unit test pass Note: Interdit \u00c9crire du code de prod, avant un test en \u00e9chec Objectif du code de prod : faire passer un test. -- You are not allowed to write any more of a unit test than is sufficient to fail; and compilation failures are failures -- You are not allowed to write any more production code than is sufficient to pass the one failing unit test","title":"Trois r\u00e8gles"},{"location":"learn/formations/tdd/slides/#comment-on-fait","text":"--","title":"Comment on fait"},{"location":"learn/formations/tdd/slides/#red","text":"","title":" Red"},{"location":"learn/formations/tdd/slides/#make-it-fail","text":"Note: No code without a failing test Declare & Name Arrange-Act-Assert Given-When-Then --","title":"Make it fail"},{"location":"learn/formations/tdd/slides/#green","text":"","title":" Green"},{"location":"learn/formations/tdd/slides/#make-it-work","text":"Note: A simply as possible \u2192 Frugalit\u00e9 Implement solution Fake it Start over --","title":"Make it work"},{"location":"learn/formations/tdd/slides/#refactor","text":"","title":" Refactor"},{"location":"learn/formations/tdd/slides/#make-it-better","text":"--","title":"Make it Better"},{"location":"learn/formations/tdd/slides/#refactor_1","text":"Note: RED: Make it fail > No code without a failing test GREEN : Make it work > A simply as possible REFACTOR: Make it better > No new functionality","title":" Refactor"},{"location":"learn/formations/tdd/slides/#pourquoi-faire","text":"-- You can test all you want, if you don\u2019t know how to approach the problem, you\u2019re not going to get a solution Note: Tu peux tester autant que tu veux, Si tu ne sais pas comment aborder le probl\u00e8me Tu n\u2019es pas pr\u00eat de trouver une solution --","title":"Pourquoi faire ?"},{"location":"learn/formations/tdd/slides/#tdd-gps","text":"Savoir o\u00f9 on va Avancer pas \u00e0 pas --","title":"TDD == GPS"},{"location":"learn/formations/tdd/vrac/","text":"Synth\u00e8se \u00b6 D\u00e9velopper avec Qualit\u00e9 - Les Bases \ud83d\udd57 2h | \ud83d\udc6f Pr\u00e9sentiel | \ud83c\udf36\ufe0f Accessible \u00e0 tous **\ud83c\udfaf Objectif:** A l'issue de ce module, vous \u00eates sensibilit\u00e9s \u00e0 l'int\u00e9r\u00eat des Tests, et vous \u00eates en mesure de proposer une strat\u00e9gie de tests sur votre projet \ud83e\udde9 Serious Game | \ud83d\udc68\u200d\ud83c\udfeb \ud83d\udc69\u200d\ud83c\udfeb Pr\u00e9sentation Objectifs p\u00e9dagogiques \u00b6 Je suis convaincu de l'int\u00e9r\u00eat des tests sur un projet, et je peux l'expliquer. Je connais la pyramide des tests et je suis capable de la pr\u00e9senter. J'ai un plan d'action pour am\u00e9liorer la strat\u00e9gie de tests sur mon projet. Intervenants \u00b6 Public \u00b6 A qui s'adresse le module ? Ce module s'addrese \u00e0 toute personne ayant un lien avec le d\u00e9veloppement logiciel. D\u00e9velopper & Tester - Module : Qu'est ce que le TDD \ud83d\udd57 1J | \ud83d\udc6f Pr\u00e9sentiel | \ud83c\udf36\ud83c\udf36 D\u00e9veloppeurs **\ud83c\udfaf Objectif:** A l'issue de ce module, vous \u00eates sensibilit\u00e9s \u00e0 l'int\u00e9r\u00eat des Tests, et vous \u00eates en mesure de proposer une strat\u00e9gie de tests sur votre projet \ud83d\udc68\u200d\ud83c\udfeb \ud83d\udc69\u200d\ud83c\udfeb Pr\u00e9sentation | \ud83d\udcbb Pratique | \ud83d\udc31\u200d\ud83d\udc64 Kata \ud83e\udd4b Objectifs p\u00e9dagogiques \u00b6 Je suis capable d'\u00e9crire des tests : Un Test Unitaire Un Test FIRST Je suis capable de comprendre les rapports de test. Je sais utiliser un Framework de Test Je sais utiliser un Framework de d'Assertions Je suis capable de citer le Mantra : \"Red/Green/Refactor\" Je suis capable de d\u00e9velopper une fonctionnalit\u00e9 en suivant les \u00e9tapes \"Red/Green/Refactor\" Dans un Kata Dans mon Projet Intervenants \u00b6 Public \u00b6 A qui s'adresse le module ? Ce module s'adresse essentiellement aux d\u00e9veloppeurs ayant envie de ma\u00eetriser la m\u00e9thodologie \"TDD\" Synth\u00e8se \u00b6 D\u00e9velopper & Tester - Module : Aller plus loin \ud83d\udd57 1J | \ud83d\udc6f Pr\u00e9sentiel | \ud83c\udf36\ud83c\udf36\ud83c\udf36 D\u00e9veloppeurs ayant suivi le 1er module \"Qu'est-ce que le TDD\" **\ud83c\udfaf Objectif:** A l'issue de ce module, vous \u00eates sensibilit\u00e9s \u00e0 l'int\u00e9r\u00eat des Tests, et vous \u00eates en mesure de proposer une strat\u00e9gie de tests sur votre projet \u2615 Echanges & Discussions | \ud83d\udc68\u200d\ud83c\udfeb \ud83d\udc69\u200d\ud83c\udfeb Pr\u00e9sentation | \ud83d\udcbb Pratique | \ud83d\udc31\u200d\ud83d\udc64 Kata Objectifs p\u00e9dagogiques \u00b6 Je suis capable d'\u00e9crire des tests : Un Test Unitaire Un Test FIRST Je suis capable de comprendre les rapports de test. Je sais utiliser un Framework de Test Je sais utiliser un Framework de d'Assertions Je suis capable de citer le Mantra : \"Red/Green/Refactor\" Je suis capable de d\u00e9velopper une fonctionnalit\u00e9 en suivant les \u00e9tapes \"Red/Green/Refactor\" Dans un Kata Dans mon Projet Intervenants \u00b6 Public \u00b6 A qui s'adresse le module ? Ce module s'adresse essentiellement aux d\u00e9veloppeurs ayant suivi le Module \"Qu'est-ce que le TDD\" et qui approuvent le besoin d'aller plus loin, et de confronter leur exp\u00e9rience de la r\u00e9alit\u00e9 avec la th\u00e9orie apprise dans le pr\u00e9c\u00e9dent module .","title":"Vrac"},{"location":"learn/formations/tdd/vrac/#synthese","text":"D\u00e9velopper avec Qualit\u00e9 - Les Bases \ud83d\udd57 2h | \ud83d\udc6f Pr\u00e9sentiel | \ud83c\udf36\ufe0f Accessible \u00e0 tous **\ud83c\udfaf Objectif:** A l'issue de ce module, vous \u00eates sensibilit\u00e9s \u00e0 l'int\u00e9r\u00eat des Tests, et vous \u00eates en mesure de proposer une strat\u00e9gie de tests sur votre projet \ud83e\udde9 Serious Game | \ud83d\udc68\u200d\ud83c\udfeb \ud83d\udc69\u200d\ud83c\udfeb Pr\u00e9sentation","title":"Synth\u00e8se"},{"location":"learn/formations/tdd/vrac/#objectifs-pedagogiques","text":"Je suis convaincu de l'int\u00e9r\u00eat des tests sur un projet, et je peux l'expliquer. Je connais la pyramide des tests et je suis capable de la pr\u00e9senter. J'ai un plan d'action pour am\u00e9liorer la strat\u00e9gie de tests sur mon projet.","title":"Objectifs p\u00e9dagogiques"},{"location":"learn/formations/tdd/vrac/#intervenants","text":"","title":"Intervenants"},{"location":"learn/formations/tdd/vrac/#public","text":"A qui s'adresse le module ? Ce module s'addrese \u00e0 toute personne ayant un lien avec le d\u00e9veloppement logiciel. D\u00e9velopper & Tester - Module : Qu'est ce que le TDD \ud83d\udd57 1J | \ud83d\udc6f Pr\u00e9sentiel | \ud83c\udf36\ud83c\udf36 D\u00e9veloppeurs **\ud83c\udfaf Objectif:** A l'issue de ce module, vous \u00eates sensibilit\u00e9s \u00e0 l'int\u00e9r\u00eat des Tests, et vous \u00eates en mesure de proposer une strat\u00e9gie de tests sur votre projet \ud83d\udc68\u200d\ud83c\udfeb \ud83d\udc69\u200d\ud83c\udfeb Pr\u00e9sentation | \ud83d\udcbb Pratique | \ud83d\udc31\u200d\ud83d\udc64 Kata \ud83e\udd4b","title":"Public"},{"location":"learn/formations/tdd/vrac/#objectifs-pedagogiques_1","text":"Je suis capable d'\u00e9crire des tests : Un Test Unitaire Un Test FIRST Je suis capable de comprendre les rapports de test. Je sais utiliser un Framework de Test Je sais utiliser un Framework de d'Assertions Je suis capable de citer le Mantra : \"Red/Green/Refactor\" Je suis capable de d\u00e9velopper une fonctionnalit\u00e9 en suivant les \u00e9tapes \"Red/Green/Refactor\" Dans un Kata Dans mon Projet","title":"Objectifs p\u00e9dagogiques"},{"location":"learn/formations/tdd/vrac/#intervenants_1","text":"","title":"Intervenants"},{"location":"learn/formations/tdd/vrac/#public_1","text":"A qui s'adresse le module ? Ce module s'adresse essentiellement aux d\u00e9veloppeurs ayant envie de ma\u00eetriser la m\u00e9thodologie \"TDD\"","title":"Public"},{"location":"learn/formations/tdd/vrac/#synthese_1","text":"D\u00e9velopper & Tester - Module : Aller plus loin \ud83d\udd57 1J | \ud83d\udc6f Pr\u00e9sentiel | \ud83c\udf36\ud83c\udf36\ud83c\udf36 D\u00e9veloppeurs ayant suivi le 1er module \"Qu'est-ce que le TDD\" **\ud83c\udfaf Objectif:** A l'issue de ce module, vous \u00eates sensibilit\u00e9s \u00e0 l'int\u00e9r\u00eat des Tests, et vous \u00eates en mesure de proposer une strat\u00e9gie de tests sur votre projet \u2615 Echanges & Discussions | \ud83d\udc68\u200d\ud83c\udfeb \ud83d\udc69\u200d\ud83c\udfeb Pr\u00e9sentation | \ud83d\udcbb Pratique | \ud83d\udc31\u200d\ud83d\udc64 Kata","title":"Synth\u00e8se"},{"location":"learn/formations/tdd/vrac/#objectifs-pedagogiques_2","text":"Je suis capable d'\u00e9crire des tests : Un Test Unitaire Un Test FIRST Je suis capable de comprendre les rapports de test. Je sais utiliser un Framework de Test Je sais utiliser un Framework de d'Assertions Je suis capable de citer le Mantra : \"Red/Green/Refactor\" Je suis capable de d\u00e9velopper une fonctionnalit\u00e9 en suivant les \u00e9tapes \"Red/Green/Refactor\" Dans un Kata Dans mon Projet","title":"Objectifs p\u00e9dagogiques"},{"location":"learn/formations/tdd/vrac/#intervenants_2","text":"","title":"Intervenants"},{"location":"learn/formations/tdd/vrac/#public_2","text":"A qui s'adresse le module ? Ce module s'adresse essentiellement aux d\u00e9veloppeurs ayant suivi le Module \"Qu'est-ce que le TDD\" et qui approuvent le besoin d'aller plus loin, et de confronter leur exp\u00e9rience de la r\u00e9alit\u00e9 avec la th\u00e9orie apprise dans le pr\u00e9c\u00e9dent module .","title":"Public"},{"location":"learn/presentations/gamification/","text":"La Gamification \u00b6 Pr\u00e9sentation","title":"Gamification"},{"location":"learn/presentations/gamification/#la-gamification","text":"Pr\u00e9sentation","title":"La Gamification"},{"location":"learn/presentations/gamification/slides/","text":"blockquote.quote { background-color:white; opacity: 0.8; border-radius: 3rem; padding: 3rem; } Gamification \u00b6 G\u00e9n\u00e9ralit\u00e9s \u00b6 -- Gamification is the craft of deriving all the fun and engaging elements found in games and applying them to real-world or productive activities. Note: La Gamification est l'art de d\u00e9tourner tous les \u00e9l\u00e9ments amusants et attrayants des jeux pour de les appliquer \u00e0 des activit\u00e9s r\u00e9elles ou productives. -- Function-Focused Design \u00b6 Note: Most systems are \u201cfunction-focused,\u201d designed to get the job done quickly. -- Human-Focused Design \u00b6 How Do I Want My Users To Feel ? Note: Most systems are \u201cfunction-focused\u201d designed to get the job done quickly. This is like a factory that assumes that the workers within WILL do their jobs. However, Human-Focused Design remembers that people in the system have feelings, insecurities, and reasons why they want or do not want to do things, and therefore optimizes for their feelings, motivations, and engagement. -- Gamification == UX \u00b6 Note: Gamification : the gaming industry was the first to master human-focused design how to master motivation and engagement, we are now learning from games, Octalysis \u00b6 Framework de lecture \u00b6 -- The 8 Core Drives of Gamification \u00b6 Note: Core drive = motivations fondamentale -- Core #1 : Epic Meaning & Calling \u00b6 Note: https://yukaichou.com/gamification-study/8-core-drives-gamification-1-epic-meaning-calling/ -- Core #2 : Development & Accomplishment \u00b6 Note: https://yukaichou.com/gamification-study/8-core-drives-gamification-2-development-accomplishment/ -- Empowerment of Creativity & Feedback \u00b6 Core #3 \u00b6 Note: https://yukaichou.com/gamification-study/8-core-drives-gamification-3-empowerment-creativity-feedback/ -- Core #4 : Ownership & Possession \u00b6 Note: https://yukaichou.com/gamification-study/8-core-drives-gamification-4-ownership-possession/ -- Core #5 : Social Influence & Relatedness \u00b6 Note: https://yukaichou.com/gamification-study/8-core-drives-of-gamification-5-social-influence-relatedness/ -- Core #6 : Scarcity & Impatience \u00b6 Note: https://yukaichou.com/gamification-study/8-core-drives-gamification-6-scarcity-impatience/ -- Core #7 : Unpredictability & Curiosity \u00b6 Note: https://yukaichou.com/gamification-study/the-8-core-drives-of-gamification-7-unpredictability/ -- Core #8 : Loss & Avoidance \u00b6 Note: https://yukaichou.com/gamification-study/8-loss-and-avoidance/ Left Brain vs Right Brain \u00b6 Core Drives \u00b6 -- Left Brain Core Drives are Extrinsic Motivators \u00b6 -- Right Brain Core Drives are Intrinsic Motivators \u00b6 White Hat vs Black Hat \u00b6 Gamification \u00b6 -- White Hat Gamification \u00b6 Users feel very good and powerful -- Black Hat Gamification \u00b6 On the other hand, if you are always doing something because you don\u2019t know what will happen next, you are constantly in fear of losing something, or because there are things you can\u2019t have, even though you would still be extremely motivated to take the actions, it can often leave a bad taste in your mouth. Credits \u00b6 Gamification https://yukaichou.com/g Images Erik Mclean https://unsplash.com/photos/C3T8KTZxTFM Riho Kroll https://unsplash.com/photos/m4sGYaHYN5o Mel Poole https://unsplash.com/photos/eo5Hrzyb4D0","title":"Index"},{"location":"learn/presentations/gamification/slides/#gamification","text":"","title":"Gamification"},{"location":"learn/presentations/gamification/slides/#generalites","text":"-- Gamification is the craft of deriving all the fun and engaging elements found in games and applying them to real-world or productive activities. Note: La Gamification est l'art de d\u00e9tourner tous les \u00e9l\u00e9ments amusants et attrayants des jeux pour de les appliquer \u00e0 des activit\u00e9s r\u00e9elles ou productives. --","title":"G\u00e9n\u00e9ralit\u00e9s"},{"location":"learn/presentations/gamification/slides/#function-focused-design","text":"Note: Most systems are \u201cfunction-focused,\u201d designed to get the job done quickly. --","title":"Function-Focused Design"},{"location":"learn/presentations/gamification/slides/#human-focused-design","text":"How Do I Want My Users To Feel ? Note: Most systems are \u201cfunction-focused\u201d designed to get the job done quickly. This is like a factory that assumes that the workers within WILL do their jobs. However, Human-Focused Design remembers that people in the system have feelings, insecurities, and reasons why they want or do not want to do things, and therefore optimizes for their feelings, motivations, and engagement. --","title":"Human-Focused  Design"},{"location":"learn/presentations/gamification/slides/#gamification-ux","text":"Note: Gamification : the gaming industry was the first to master human-focused design how to master motivation and engagement, we are now learning from games,","title":"Gamification == UX"},{"location":"learn/presentations/gamification/slides/#octalysis","text":"","title":"Octalysis"},{"location":"learn/presentations/gamification/slides/#framework-de-lecture","text":"--","title":"Framework de lecture"},{"location":"learn/presentations/gamification/slides/#the-8-core-drives-of-gamification","text":"Note: Core drive = motivations fondamentale --","title":"The 8 Core Drives of Gamification"},{"location":"learn/presentations/gamification/slides/#core-1-epic-meaning-calling","text":"Note: https://yukaichou.com/gamification-study/8-core-drives-gamification-1-epic-meaning-calling/ --","title":"Core #1: Epic Meaning &amp; Calling"},{"location":"learn/presentations/gamification/slides/#core-2-development-accomplishment","text":"Note: https://yukaichou.com/gamification-study/8-core-drives-gamification-2-development-accomplishment/ --","title":"Core #2: Development &amp; Accomplishment"},{"location":"learn/presentations/gamification/slides/#empowerment-of-creativity-feedback","text":"","title":"Empowerment of Creativity &amp; Feedback"},{"location":"learn/presentations/gamification/slides/#core-3","text":"Note: https://yukaichou.com/gamification-study/8-core-drives-gamification-3-empowerment-creativity-feedback/ --","title":"Core #3"},{"location":"learn/presentations/gamification/slides/#core-4-ownership-possession","text":"Note: https://yukaichou.com/gamification-study/8-core-drives-gamification-4-ownership-possession/ --","title":"Core #4: Ownership &amp; Possession"},{"location":"learn/presentations/gamification/slides/#core-5-social-influence-relatedness","text":"Note: https://yukaichou.com/gamification-study/8-core-drives-of-gamification-5-social-influence-relatedness/ --","title":"Core #5: Social Influence &amp; Relatedness"},{"location":"learn/presentations/gamification/slides/#core-6-scarcity-impatience","text":"Note: https://yukaichou.com/gamification-study/8-core-drives-gamification-6-scarcity-impatience/ --","title":"Core #6: Scarcity &amp; Impatience"},{"location":"learn/presentations/gamification/slides/#core-7-unpredictability-curiosity","text":"Note: https://yukaichou.com/gamification-study/the-8-core-drives-of-gamification-7-unpredictability/ --","title":"Core #7: Unpredictability &amp; Curiosity"},{"location":"learn/presentations/gamification/slides/#core-8-loss-avoidance","text":"Note: https://yukaichou.com/gamification-study/8-loss-and-avoidance/","title":"Core #8: Loss &amp; Avoidance"},{"location":"learn/presentations/gamification/slides/#left-brainvsright-brain","text":"","title":"Left BrainvsRight Brain"},{"location":"learn/presentations/gamification/slides/#core-drives","text":"--","title":"Core Drives"},{"location":"learn/presentations/gamification/slides/#left-brain-core-drives-are-extrinsic-motivators","text":"--","title":"Left Brain Core Drives are Extrinsic Motivators"},{"location":"learn/presentations/gamification/slides/#right-brain-core-drives-are-intrinsic-motivators","text":"","title":"Right Brain Core Drives are Intrinsic Motivators"},{"location":"learn/presentations/gamification/slides/#white-hatvsblack-hat","text":"","title":"White HatvsBlack Hat"},{"location":"learn/presentations/gamification/slides/#gamification_1","text":"--","title":"Gamification"},{"location":"learn/presentations/gamification/slides/#white-hat-gamification","text":"Users feel very good and powerful --","title":"White Hat Gamification"},{"location":"learn/presentations/gamification/slides/#black-hat-gamification","text":"On the other hand, if you are always doing something because you don\u2019t know what will happen next, you are constantly in fear of losing something, or because there are things you can\u2019t have, even though you would still be extremely motivated to take the actions, it can often leave a bad taste in your mouth.","title":"Black Hat Gamification"},{"location":"learn/presentations/gamification/slides/#credits","text":"Gamification https://yukaichou.com/g Images Erik Mclean https://unsplash.com/photos/C3T8KTZxTFM Riho Kroll https://unsplash.com/photos/m4sGYaHYN5o Mel Poole https://unsplash.com/photos/eo5Hrzyb4D0","title":"Credits"},{"location":"learn/presentations/good-morning-learning/","text":"Good Morning Learning \u00b6 Good Morning learning, est un atelier pr\u00e9sent\u00e9 initialement pas Philippe Bourgau, dans cet article: Introduce Team G Morning Learning Sessions to Coach the Growth Mindset Pr\u00e9sentation","title":"Gooo Morning Learning"},{"location":"learn/presentations/good-morning-learning/#good-morning-learning","text":"Good Morning learning, est un atelier pr\u00e9sent\u00e9 initialement pas Philippe Bourgau, dans cet article: Introduce Team G Morning Learning Sessions to Coach the Growth Mindset Pr\u00e9sentation","title":"Good Morning Learning"},{"location":"learn/presentations/good-morning-learning/slides/","text":"blockquote.quote { background-color:white; opacity: 0.8; border-radius: 3rem; padding: 3rem; } Good Morning Learning \u00b6 Qu'est-ce que c'est ? \u00b6 -- Atelier \u00b6 5 R\u00e8gles \u00b6 -- #1 Quotidien \u00b6 Note: Faites-le tous les jours -- #2 Apprendre intensivement \u00b6 20 minutes \u00b6 Note: It can be watching a video, reading a book, reading an ebook, reading a blog, or anything else that will provide you with learning contents. -- #3 Partager \u00b6 10 minutes \u00b6 -- #4 Propager \u00b6 Aux invit\u00e9s venant d'une autre \u00e9quipe \u00b6 -- #5 Diviser \u00b6 Maintenez chaque groupe \u00e0 taille humaine \u00b6 Note: Si vous devenez trop nombreux, faites des groupes plus petits Conservez une taille humaine -- 5 R\u00e8gles \u00b6 Quotidien Apprendre intensivement Partager Propager Diviser Origine \u00b6 Good Morning Learning par Philippe Bourgau -- Temps de trajet \u00b6 Avant confinement 50 minutes Pendant confinement 50 secondes -- Gain : 49 minutes \u00b6 Comment utiliser ce temps ? \u00b6 -- Apprendre \u00b6 Ensemble \u00b6 Pourquoi faire ? \u00b6 -- Motivant \u00b6 Note: It\u2019s motivating! Daniel Pink told us in Drive that Mastery is a crucial element to intrinsic motivation. Growing your mastery on your topic, before anything else, will make every day feel more valuable! La ma\u00eetrise est un \u00e9l\u00e9ment crucial de la motivation intrins\u00e8que Am\u00e9liorer votre maitrise sur un sujet, avant toute chose dans la journ\u00e9e ; vous fait voir chaque jour comme \u00e9tant plus enrichissant -- Efficace \u00b6 Note: La pression sociale de devoir \"pr\u00e9senter\" vous rend plus efficace -- Durable \u00b6 Active recall en action \u00b6 Note: Rappel Actif Reformulating for your colleagues forces you to organize your new knowledge In the end, you will remember better -- Apprentissages \u00b6 crois\u00e9s \u00b6 Note: D\u00e9couvrir les sujets -- Propagation \u00b6 Note: Inviter une personne d'une autre \u00e9quipe est crucial. La plupart du temps, il va r\u00e9pliquer la pratique dans son \u00e9quipe lorsque le groupe grandis et doit se diviser. -- Objectif ? \u00b6 Instaurer une culture de l'apprentissage \u00b6 Note: Exceller Ensemble Comment ? \u00b6 -- Good Morning Learning \u00b6 Par o\u00f9 commencer ? \u00b6 -- Ouvrir son agenda. Planifier un rendez-vous quotidien de 30 minutes en tout d\u00e9but de journ\u00e9e Invitez vos participants une personne d'une autre \u00e9quipe Merci \u00b6","title":"Index"},{"location":"learn/presentations/good-morning-learning/slides/#good-morning-learning","text":"","title":"Good Morning Learning"},{"location":"learn/presentations/good-morning-learning/slides/#quest-ce-que-cest","text":"--","title":"Qu'est-ce que c'est ?"},{"location":"learn/presentations/good-morning-learning/slides/#atelier","text":"","title":"Atelier"},{"location":"learn/presentations/good-morning-learning/slides/#5-regles","text":"--","title":"5 R\u00e8gles"},{"location":"learn/presentations/good-morning-learning/slides/#1-quotidien","text":"Note: Faites-le tous les jours --","title":"#1 Quotidien"},{"location":"learn/presentations/good-morning-learning/slides/#2-apprendre-intensivement","text":"","title":"#2 Apprendre intensivement"},{"location":"learn/presentations/good-morning-learning/slides/#20-minutes","text":"Note: It can be watching a video, reading a book, reading an ebook, reading a blog, or anything else that will provide you with learning contents. --","title":"20 minutes"},{"location":"learn/presentations/good-morning-learning/slides/#3-partager","text":"","title":"#3 Partager"},{"location":"learn/presentations/good-morning-learning/slides/#10-minutes","text":"--","title":"10 minutes"},{"location":"learn/presentations/good-morning-learning/slides/#4-propager","text":"","title":"#4 Propager"},{"location":"learn/presentations/good-morning-learning/slides/#aux-invites-venant-dune-autre-equipe","text":"--","title":"Aux invit\u00e9s venant d'une autre \u00e9quipe"},{"location":"learn/presentations/good-morning-learning/slides/#5-diviser","text":"","title":"#5 Diviser"},{"location":"learn/presentations/good-morning-learning/slides/#maintenez-chaque-groupe-a-taille-humaine","text":"Note: Si vous devenez trop nombreux, faites des groupes plus petits Conservez une taille humaine --","title":"Maintenez chaque groupe \u00e0 taille humaine"},{"location":"learn/presentations/good-morning-learning/slides/#5-regles_1","text":"Quotidien Apprendre intensivement Partager Propager Diviser","title":"5 R\u00e8gles"},{"location":"learn/presentations/good-morning-learning/slides/#origine","text":"Good Morning Learning par Philippe Bourgau --","title":"Origine"},{"location":"learn/presentations/good-morning-learning/slides/#temps-de-trajet","text":"Avant confinement 50 minutes Pendant confinement 50 secondes --","title":"Temps de trajet"},{"location":"learn/presentations/good-morning-learning/slides/#gain-49-minutes","text":"","title":"Gain : 49 minutes"},{"location":"learn/presentations/good-morning-learning/slides/#comment-utiliser-ce-temps","text":"--","title":" Comment utiliser ce temps ?"},{"location":"learn/presentations/good-morning-learning/slides/#apprendre","text":"","title":" Apprendre"},{"location":"learn/presentations/good-morning-learning/slides/#ensemble","text":"","title":" Ensemble"},{"location":"learn/presentations/good-morning-learning/slides/#pourquoi-faire","text":"--","title":"Pourquoi faire ?"},{"location":"learn/presentations/good-morning-learning/slides/#motivant","text":"Note: It\u2019s motivating! Daniel Pink told us in Drive that Mastery is a crucial element to intrinsic motivation. Growing your mastery on your topic, before anything else, will make every day feel more valuable! La ma\u00eetrise est un \u00e9l\u00e9ment crucial de la motivation intrins\u00e8que Am\u00e9liorer votre maitrise sur un sujet, avant toute chose dans la journ\u00e9e ; vous fait voir chaque jour comme \u00e9tant plus enrichissant --","title":"Motivant"},{"location":"learn/presentations/good-morning-learning/slides/#efficace","text":"Note: La pression sociale de devoir \"pr\u00e9senter\" vous rend plus efficace --","title":"Efficace"},{"location":"learn/presentations/good-morning-learning/slides/#durable","text":"","title":"Durable"},{"location":"learn/presentations/good-morning-learning/slides/#active-recall-en-action","text":"Note: Rappel Actif Reformulating for your colleagues forces you to organize your new knowledge In the end, you will remember better --","title":"Active recall en action"},{"location":"learn/presentations/good-morning-learning/slides/#apprentissages","text":"","title":"Apprentissages"},{"location":"learn/presentations/good-morning-learning/slides/#croises","text":"Note: D\u00e9couvrir les sujets --","title":"crois\u00e9s"},{"location":"learn/presentations/good-morning-learning/slides/#propagation","text":"Note: Inviter une personne d'une autre \u00e9quipe est crucial. La plupart du temps, il va r\u00e9pliquer la pratique dans son \u00e9quipe lorsque le groupe grandis et doit se diviser. --","title":"Propagation"},{"location":"learn/presentations/good-morning-learning/slides/#objectif","text":"","title":"Objectif ?"},{"location":"learn/presentations/good-morning-learning/slides/#instaurer-une-culture-de-lapprentissage","text":"Note: Exceller Ensemble","title":"Instaurer une culture de l'apprentissage"},{"location":"learn/presentations/good-morning-learning/slides/#comment","text":"--","title":"Comment ?"},{"location":"learn/presentations/good-morning-learning/slides/#good-morning-learning_1","text":"","title":"Good Morning Learning"},{"location":"learn/presentations/good-morning-learning/slides/#par-ou-commencer","text":"-- Ouvrir son agenda. Planifier un rendez-vous quotidien de 30 minutes en tout d\u00e9but de journ\u00e9e Invitez vos participants une personne d'une autre \u00e9quipe","title":"Par o\u00f9 commencer ?"},{"location":"learn/presentations/good-morning-learning/slides/#merci","text":"","title":"Merci"},{"location":"learn/serious-games/pair-practice/","text":"\ud83d\udee0\ufe0fAtelier/SeriousGame \ud83e\udde9: Pair Practice Atelier de 20-30minutes, permettant de faire vivre le PP sans coder, avec des mouvement et quelques contraintes. Le but est de pouvoir \u00e9changer sur le ressentis des participants \u00e0 la fin de l'atelier.","title":"Pair practice"},{"location":"learn/serious-games/sensibiliser-aux-tests-unitaires/","text":"Tests Unitaires - Sensibiliser sans coder \u00b6 \ud83d\udd57 1h | \ud83d\udc6f Pr\u00e9sentiel / Distanciel | \ud83c\udf36\ufe0f Accessible \u00e0 tous \ud83e\udde9 Serious Game | \ud83d\udee0\ufe0fAtelier Parfois, les tests unitaires sont mis de c\u00f4t\u00e9s pour des raisons de temps et/ou de budget. Cet atelier est un Serious Game, o\u00f9 l'on va constuire une application, sans tests unitaires, puis avec. Le langage utilis\u00e9 : 2 jeux de 52 cartes \u00e0 jouer! Dur\u00e9e: \ud83d\udd57 1h Format: Atelier \ud83e\udde9 Serious Game","title":"Tests Unitaires - Sensibiliser sans coder"},{"location":"learn/serious-games/sensibiliser-aux-tests-unitaires/#tests-unitaires-sensibiliser-sans-coder","text":"\ud83d\udd57 1h | \ud83d\udc6f Pr\u00e9sentiel / Distanciel | \ud83c\udf36\ufe0f Accessible \u00e0 tous \ud83e\udde9 Serious Game | \ud83d\udee0\ufe0fAtelier Parfois, les tests unitaires sont mis de c\u00f4t\u00e9s pour des raisons de temps et/ou de budget. Cet atelier est un Serious Game, o\u00f9 l'on va constuire une application, sans tests unitaires, puis avec. Le langage utilis\u00e9 : 2 jeux de 52 cartes \u00e0 jouer! Dur\u00e9e: \ud83d\udd57 1h Format: Atelier \ud83e\udde9 Serious Game","title":"Tests Unitaires - Sensibiliser sans coder"},{"location":"learn/workshops/cold-watching/","text":"\u2013 Cold Watching \u2013 \u00b6 NB: La version \"\u00e0 froid\" de l'Xtrem Watching. Devrait d\u00e9cire le Miro et le process derri\u00e8re Introduction Venez visionner, et \u00e9changer autour d'une conf\u00e9rence, choisie par l'assembl\u00e9e, pour am\u00e9liorer votre intelligence collective. Public Tout public Format Pr\u00e9sentiel / Brown Bag Lunch (BBL) 750px-Simple_icon_time.svg.png 2h people.png 2-99 Personnes (optimal: 8) Pr\u00e9requis Avoir des yeux pour \u00e9couter et des oreilles pour voir. Comprendre les conf\u00e9rences en anglais Mat\u00e9riel Salle + Ecran + Son + PC pour projeter. Programme / D\u00e9roul\u00e9 Introduction 750px-Simple_icon_time.svg.png5 mins Accueil D\u00e9ballage des sandwiches (Optionel) Pr\u00e9sentation de l'atelier XtremWatching.pptx Pr\u00e9senter les Conf\u00e9rences 5 mins How to Tour de table. Bien cerner le sujet, en amont, pour ne pas avoir de mauvaise surprise Faciliter Quelques questions : Qu'est ce qui t'int\u00e9resse dans cette conf\u00e9rence ? Pourquoi la proposer ? Choisir la Conf\u00e9rence 2 mins How to Par un syst\u00e8me de vote Faciliter Visionner la Conf\u00e9rence 45mins - 1h How to Essayer de garder les commentaires pour le d\u00e9brieff Faciliter 4. Partager 10-15mins How to Tour de table R\u00e9capituler sur un support visuel (tableau, poster, post-its) Faciliter @Tester : Co-construire un support visuel de synth\u00e8se @Tester : Un volontaire se propose pour pitcher le sujet au prochain \"Qu-Oui-Ck\" 5. Evaluer ? 5 mins How to Est-ce que la conf\u00e9rence \u00e9tait facile \u00e0 suivre ? Est-ce que je recommande cette conf\u00e9rence \u00e0 d'autres personnes ? Faciliter Plus la note est \u00e9lev\u00e9e, plus le retour est positif. Chaque fiche de note est propre \u00e0 la conf\u00e9rence. R\u00e9trospective 750px-Simple_icon_time.svg.png 15 mins Feed-back sur la session Qu'est ce que vous avez appris ? Est-ce que vous vous \u00eates amus\u00e9s ? Est-ce que vous reviendrez ?","title":"\u2013 Cold Watching \u2013"},{"location":"learn/workshops/cold-watching/#cold-watching","text":"NB: La version \"\u00e0 froid\" de l'Xtrem Watching. Devrait d\u00e9cire le Miro et le process derri\u00e8re Introduction Venez visionner, et \u00e9changer autour d'une conf\u00e9rence, choisie par l'assembl\u00e9e, pour am\u00e9liorer votre intelligence collective. Public Tout public Format Pr\u00e9sentiel / Brown Bag Lunch (BBL) 750px-Simple_icon_time.svg.png 2h people.png 2-99 Personnes (optimal: 8) Pr\u00e9requis Avoir des yeux pour \u00e9couter et des oreilles pour voir. Comprendre les conf\u00e9rences en anglais Mat\u00e9riel Salle + Ecran + Son + PC pour projeter. Programme / D\u00e9roul\u00e9 Introduction 750px-Simple_icon_time.svg.png5 mins Accueil D\u00e9ballage des sandwiches (Optionel) Pr\u00e9sentation de l'atelier XtremWatching.pptx Pr\u00e9senter les Conf\u00e9rences 5 mins How to Tour de table. Bien cerner le sujet, en amont, pour ne pas avoir de mauvaise surprise Faciliter Quelques questions : Qu'est ce qui t'int\u00e9resse dans cette conf\u00e9rence ? Pourquoi la proposer ? Choisir la Conf\u00e9rence 2 mins How to Par un syst\u00e8me de vote Faciliter Visionner la Conf\u00e9rence 45mins - 1h How to Essayer de garder les commentaires pour le d\u00e9brieff Faciliter 4. Partager 10-15mins How to Tour de table R\u00e9capituler sur un support visuel (tableau, poster, post-its) Faciliter @Tester : Co-construire un support visuel de synth\u00e8se @Tester : Un volontaire se propose pour pitcher le sujet au prochain \"Qu-Oui-Ck\" 5. Evaluer ? 5 mins How to Est-ce que la conf\u00e9rence \u00e9tait facile \u00e0 suivre ? Est-ce que je recommande cette conf\u00e9rence \u00e0 d'autres personnes ? Faciliter Plus la note est \u00e9lev\u00e9e, plus le retour est positif. Chaque fiche de note est propre \u00e0 la conf\u00e9rence. R\u00e9trospective 750px-Simple_icon_time.svg.png 15 mins Feed-back sur la session Qu'est ce que vous avez appris ? Est-ce que vous vous \u00eates amus\u00e9s ? Est-ce que vous reviendrez ?","title":"\u2013 Cold Watching \u2013"},{"location":"learn/workshops/xtrem-reading/","text":"\u2013 Xtrem Reading \u2013 \u00b6 Disclaimer : Pratique cr\u00e9\u00e9e par C\u00e9dric Tamavond & Yoan Thirion. Voir aussi : https://www.xtrem-reading.com Introduction Venez lire autrement, en cultivant votre intelligence collective Vous avez des livres qui prennent la poussi\u00e8re ? Vous avez vraiment envie de les lire mais vous ne trouvez pas le temps ? Cet atelier est fait pour vous ! Venez apprendre \u00e0 lire en groupe, et lisez 2 livres en 1 heure. Public / Cible Tout public Format Hand's on 750px-Simple_icon_time.svg.png 2h people.png 2-99 Personnes (optimal: multiple de 3) Mat\u00e9riel 1 livre / participant : Chaque participant apporte un livre L'animateur apporte assez de livre pour tout le monde D\u00e9roul\u00e9 Introduction 5 mins Accueil des participants Pr\u00e9sentation (optionelle) 30 mins Uniquement pour rassurer ceux qui restent un peu sceptique : Xtrem Reading.pptx 1. Choisir un Livre 2 mins How to Si les participants ont apport\u00e9 leur propres livres, cette partie n'est pas n\u00e9cessaire Faciliter Mettre les livres en trop, sur une table un peu loin du coin de lecture. Cela permet d'\u00e9viter que les livres surnum\u00e9raires restent au milieu, et que certains commencent \u00e0 les feuilleter. Pr\u00e9senter votre choix 5 mins How to Tour de table. Au fur et \u00e0 mesure que les participants choisissent leur livre. Faciliter Poser la question : Pourquoi avoir choisi ce livre ? Se regrouper 2 mins How to Groupez-vous par int\u00e9r\u00eats pour les lectures de uns et des autres Faciliter Faire faire des groupes de 2 ou 3. Lire 45 mins How to Lisez votre livre d\u2019abord (20mins) Prenez un des livre de votre groupe Lisez le second livre (20mins) Faciliter Choisir une dur\u00e9e de lecture entre 15-25mins / livre http://www.timer-tab.com / https://tomato-timer.com Quelques cl\u00e9s de la lecture rapide \u2192 slide Rappeler le temps : mi-temps + quart temps de la fin. 5. Partager 20-30 mins How to 5-7 minutes par livre, tous les lecteurs se partagent le m\u00eame temps de pr\u00e9sentation Faciliter Evaluer 5 mins How to Chaque participant \u00e9value les deux livres qu'il a lu Est-ce que le livre \u00e9tait facile \u00e0 lire ? Est-ce que je recommande aux autres de lire ce livre ? Faciliter Plus la note est \u00e9lev\u00e9e, plus le retour est positif. Chaque fiche de note est propre au livre R\u00e9trospective 15 mins Feed-back sur la session Qu'est ce que vous avez appris ? Est-ce que vous vous \u00eates amus\u00e9s ? Est-ce que vous reviendrez ?","title":"\u2013 Xtrem Reading \u2013"},{"location":"learn/workshops/xtrem-reading/#xtrem-reading","text":"Disclaimer : Pratique cr\u00e9\u00e9e par C\u00e9dric Tamavond & Yoan Thirion. Voir aussi : https://www.xtrem-reading.com Introduction Venez lire autrement, en cultivant votre intelligence collective Vous avez des livres qui prennent la poussi\u00e8re ? Vous avez vraiment envie de les lire mais vous ne trouvez pas le temps ? Cet atelier est fait pour vous ! Venez apprendre \u00e0 lire en groupe, et lisez 2 livres en 1 heure. Public / Cible Tout public Format Hand's on 750px-Simple_icon_time.svg.png 2h people.png 2-99 Personnes (optimal: multiple de 3) Mat\u00e9riel 1 livre / participant : Chaque participant apporte un livre L'animateur apporte assez de livre pour tout le monde D\u00e9roul\u00e9 Introduction 5 mins Accueil des participants Pr\u00e9sentation (optionelle) 30 mins Uniquement pour rassurer ceux qui restent un peu sceptique : Xtrem Reading.pptx 1. Choisir un Livre 2 mins How to Si les participants ont apport\u00e9 leur propres livres, cette partie n'est pas n\u00e9cessaire Faciliter Mettre les livres en trop, sur une table un peu loin du coin de lecture. Cela permet d'\u00e9viter que les livres surnum\u00e9raires restent au milieu, et que certains commencent \u00e0 les feuilleter. Pr\u00e9senter votre choix 5 mins How to Tour de table. Au fur et \u00e0 mesure que les participants choisissent leur livre. Faciliter Poser la question : Pourquoi avoir choisi ce livre ? Se regrouper 2 mins How to Groupez-vous par int\u00e9r\u00eats pour les lectures de uns et des autres Faciliter Faire faire des groupes de 2 ou 3. Lire 45 mins How to Lisez votre livre d\u2019abord (20mins) Prenez un des livre de votre groupe Lisez le second livre (20mins) Faciliter Choisir une dur\u00e9e de lecture entre 15-25mins / livre http://www.timer-tab.com / https://tomato-timer.com Quelques cl\u00e9s de la lecture rapide \u2192 slide Rappeler le temps : mi-temps + quart temps de la fin. 5. Partager 20-30 mins How to 5-7 minutes par livre, tous les lecteurs se partagent le m\u00eame temps de pr\u00e9sentation Faciliter Evaluer 5 mins How to Chaque participant \u00e9value les deux livres qu'il a lu Est-ce que le livre \u00e9tait facile \u00e0 lire ? Est-ce que je recommande aux autres de lire ce livre ? Faciliter Plus la note est \u00e9lev\u00e9e, plus le retour est positif. Chaque fiche de note est propre au livre R\u00e9trospective 15 mins Feed-back sur la session Qu'est ce que vous avez appris ? Est-ce que vous vous \u00eates amus\u00e9s ? Est-ce que vous reviendrez ?","title":"\u2013 Xtrem Reading \u2013"},{"location":"learn/workshops/xtrem-tech-watch/","text":"\u2013 Xtrem Tech Watch \u2013 \u00b6 Cr\u00e9dits : https://www.agilepartner.net/en/xtrem-tech-watch/","title":"\u2013 Xtrem Tech Watch \u2013"},{"location":"learn/workshops/xtrem-tech-watch/#xtrem-tech-watch","text":"Cr\u00e9dits : https://www.agilepartner.net/en/xtrem-tech-watch/","title":"\u2013 Xtrem Tech Watch \u2013"},{"location":"learn/workshops/xtrem-watching/","text":"\u2013 Xtrem Watching \u2013 \u00b6 Introduction Venez visionner, et \u00e9changer autour d'une conf\u00e9rence, choisie par l'assembl\u00e9e, pour am\u00e9liorer votre intelligence collective. Public Tout public Format Pr\u00e9sentiel / Brown Bag Lunch (BBL) 750px-Simple_icon_time.svg.png 2h people.png 2-99 Personnes (optimal: 8) Pr\u00e9requis Avoir des yeux pour \u00e9couter et des oreilles pour voir. Comprendre les conf\u00e9rences en anglais Mat\u00e9riel Salle + Ecran + Son + PC pour projeter. Programme / D\u00e9roul\u00e9 Introduction 750px-Simple_icon_time.svg.png5 mins Accueil D\u00e9ballage des sandwiches (Optionel) Pr\u00e9sentation de l'atelier XtremWatching.pptx Pr\u00e9senter les Conf\u00e9rences 5 mins How to Tour de table. Bien cerner le sujet, en amont, pour ne pas avoir de mauvaise surprise Faciliter Quelques questions : Qu'est ce qui t'int\u00e9resse dans cette conf\u00e9rence ? Pourquoi la proposer ? Choisir la Conf\u00e9rence 2 mins How to Par un syst\u00e8me de vote Faciliter Visionner la Conf\u00e9rence 45mins - 1h How to Essayer de garder les commentaires pour le d\u00e9brieff Faciliter 4. Partager 10-15mins How to Tour de table R\u00e9capituler sur un support visuel (tableau, poster, post-its) Faciliter @Tester : Co-construire un support visuel de synth\u00e8se @Tester : Un volontaire se propose pour pitcher le sujet au prochain \"Qu-Oui-Ck\" 5. Evaluer ? 5 mins How to Est-ce que la conf\u00e9rence \u00e9tait facile \u00e0 suivre ? Est-ce que je recommande cette conf\u00e9rence \u00e0 d'autres personnes ? Faciliter Plus la note est \u00e9lev\u00e9e, plus le retour est positif. Chaque fiche de note est propre \u00e0 la conf\u00e9rence. R\u00e9trospective 750px-Simple_icon_time.svg.png 15 mins Feed-back sur la session Qu'est ce que vous avez appris ? Est-ce que vous vous \u00eates amus\u00e9s ? Est-ce que vous reviendrez ?","title":"\u2013 Xtrem Watching \u2013"},{"location":"learn/workshops/xtrem-watching/#xtrem-watching","text":"Introduction Venez visionner, et \u00e9changer autour d'une conf\u00e9rence, choisie par l'assembl\u00e9e, pour am\u00e9liorer votre intelligence collective. Public Tout public Format Pr\u00e9sentiel / Brown Bag Lunch (BBL) 750px-Simple_icon_time.svg.png 2h people.png 2-99 Personnes (optimal: 8) Pr\u00e9requis Avoir des yeux pour \u00e9couter et des oreilles pour voir. Comprendre les conf\u00e9rences en anglais Mat\u00e9riel Salle + Ecran + Son + PC pour projeter. Programme / D\u00e9roul\u00e9 Introduction 750px-Simple_icon_time.svg.png5 mins Accueil D\u00e9ballage des sandwiches (Optionel) Pr\u00e9sentation de l'atelier XtremWatching.pptx Pr\u00e9senter les Conf\u00e9rences 5 mins How to Tour de table. Bien cerner le sujet, en amont, pour ne pas avoir de mauvaise surprise Faciliter Quelques questions : Qu'est ce qui t'int\u00e9resse dans cette conf\u00e9rence ? Pourquoi la proposer ? Choisir la Conf\u00e9rence 2 mins How to Par un syst\u00e8me de vote Faciliter Visionner la Conf\u00e9rence 45mins - 1h How to Essayer de garder les commentaires pour le d\u00e9brieff Faciliter 4. Partager 10-15mins How to Tour de table R\u00e9capituler sur un support visuel (tableau, poster, post-its) Faciliter @Tester : Co-construire un support visuel de synth\u00e8se @Tester : Un volontaire se propose pour pitcher le sujet au prochain \"Qu-Oui-Ck\" 5. Evaluer ? 5 mins How to Est-ce que la conf\u00e9rence \u00e9tait facile \u00e0 suivre ? Est-ce que je recommande cette conf\u00e9rence \u00e0 d'autres personnes ? Faciliter Plus la note est \u00e9lev\u00e9e, plus le retour est positif. Chaque fiche de note est propre \u00e0 la conf\u00e9rence. R\u00e9trospective 750px-Simple_icon_time.svg.png 15 mins Feed-back sur la session Qu'est ce que vous avez appris ? Est-ce que vous vous \u00eates amus\u00e9s ? Est-ce que vous reviendrez ?","title":"\u2013 Xtrem Watching \u2013"},{"location":"me/cv/","text":"comment : <> (socialImage: \"/media/me/fhiegel.jpg\") \u00b6 To be generated CV \u00b6","title":"CV"},{"location":"me/cv/#comment-socialimage-mediamefhiegeljpg","text":"To be generated","title":"comment: &lt;&gt; (socialImage: \"/media/me/fhiegel.jpg\")"},{"location":"me/cv/#cv","text":"","title":"CV"},{"location":"me/nocv/","text":"comment : <> (socialImage: \"/media/me/fhiegel.jpg\") \u00b6 To be generated 2020 \u00b6 2019 \u00b6 2019-02-08 : Arriv\u00e9e de #2 : Eva. 2019-02-01 : Formation en ligne: Bloculus - Stecknoting 2019-01-24 : Mon anniversaire, mais aussi une initiation Rust 2018 \u00b6 2018-12-10 : Arriv\u00e9e chez Oui.scnf en tant que D\u00e9veloppeur 2018-12-07 : D\u00e9part de Paris, pour installation \u00e0 Nantes 2018-11-19 : R\u00e9trospective: Animation pour une \u00e9quipe autre que la mienne 2018-10-30 : Formateur SOLID - LaCombe Du Lion Vert Promo#7 2018-09-07 : Formateur TDD, Test Double - LaCombe Du Lion Vert Promo#6 2018-09-05 : R\u00e9trospective: ma pre\u00ee\u00e8re animation chez Vidal 2018-06-06 : D\u00e9couverte de \"NoCV\" 2018-06-02 : Pour d\u00e9finir les nouveaux process, l'\u00e9quipe \"Posologie\" d\u00e9cide de me nommer Scrum Master 2018-05-14 : Formateur, une premi\u00e8re - LaCombe Du Lion Vert Promo#5 2018-xx-xx : D\u00e9couverte de 'How To Take Smart Notes' 2018-xx-xx : NCraft","title":"NoCV"},{"location":"me/nocv/#comment-socialimage-mediamefhiegeljpg","text":"To be generated","title":"comment: &lt;&gt; (socialImage: \"/media/me/fhiegel.jpg\")"},{"location":"me/nocv/#2020","text":"","title":"2020"},{"location":"me/nocv/#2019","text":"2019-02-08 : Arriv\u00e9e de #2 : Eva. 2019-02-01 : Formation en ligne: Bloculus - Stecknoting 2019-01-24 : Mon anniversaire, mais aussi une initiation Rust","title":"2019"},{"location":"me/nocv/#2018","text":"2018-12-10 : Arriv\u00e9e chez Oui.scnf en tant que D\u00e9veloppeur 2018-12-07 : D\u00e9part de Paris, pour installation \u00e0 Nantes 2018-11-19 : R\u00e9trospective: Animation pour une \u00e9quipe autre que la mienne 2018-10-30 : Formateur SOLID - LaCombe Du Lion Vert Promo#7 2018-09-07 : Formateur TDD, Test Double - LaCombe Du Lion Vert Promo#6 2018-09-05 : R\u00e9trospective: ma pre\u00ee\u00e8re animation chez Vidal 2018-06-06 : D\u00e9couverte de \"NoCV\" 2018-06-02 : Pour d\u00e9finir les nouveaux process, l'\u00e9quipe \"Posologie\" d\u00e9cide de me nommer Scrum Master 2018-05-14 : Formateur, une premi\u00e8re - LaCombe Du Lion Vert Promo#5 2018-xx-xx : D\u00e9couverte de 'How To Take Smart Notes' 2018-xx-xx : NCraft","title":"2018"},{"location":"practices/coding-dojo/","text":"Coding Dojo \u00b6 Objectif Apprendre quelque chose de nouveau, en s'amusant, \u00e0 l'aide d'un exercice de code, dans un espace ouvert aux erreurs et \u00e0 l'exp\u00e9rimentation. Un Coding Dojo \ud83d\udd57 2h | 5-15 Personnes (optimal: 8) R\u00e9p\u00e9ter r\u00e9guli\u00e8rement D\u00e9roul\u00e9 \u00b6 Introduction \u00b6 \ud83d\udd57 15 mins Rappel du contexte du Dojo Choix du Kata Que cherchons nous \u00e0 apprendre ? Choix du langage Un m\u00eame langage pour tous dans la session Choix du format Randori, Randori par paires, Autres Choix des contraintes Pour apprendre davantage ? Autres Coder \u00b6 \ud83d\udd57 90 mins R\u00e8gles du Dojo Venez comme vous \u00eates (avec vos connaissances et vos acquis) Ralentissez ! Tout le monde doit apprendre. Trouvez le ma\u00eetre qui est/sera en vous. Utiliser la m\u00e9thodologie TDD Focus ! Code et exercice sont plus importants que Style et guerre de chapelle Faciliter le Dojo Laisser le temps aux participants de faire des erreurs Mettre en place une atmosph\u00e8re saine et bienveillante Garder le focus sur le code et l'exercice. \u00c9viter de se disperser dans des refactors trop cons\u00e9quents D\u00e9mo \u00b6 \ud83d\udd57 5 mins/personne (ou bin\u00f4me) Je veux voir du code ! Tout le monde y passe ! Echange et critiques positives autour du code Il est indispensable d'\u00e9changer sur le code produit. Le format de la d\u00e9mo d\u00e9pend du format utilis\u00e9 pour la session du Dojo. Demander syst\u00e9matique des critiques positives sur le code montr\u00e9. R\u00e9trospective \u00b6 \ud83d\udd57 15 mins Feed-back sur la session Qu'est ce que vous avez appris ? Est-ce que vous vous \u00eates amus\u00e9s ? Est-ce que vous reviendrez ? Pourquoi venir \u00e0 un Coding Dojo \u00b6 Pratiquer \ud83e\udd4b S'entra\u00eener \ud83c\udfcb\ufe0f Exp\u00e9rimenter \ud83e\uddea \"Pourquoi est-ce que je viendrais \u00e0 un Coding Dojo ?\" \ud83c\udf08 C'est fun \ud83c\udf08 \ud83e\udd1d Je rencontre des gens diff\u00e9rents, qui ne sont pas m\u00e9chants \ud83d\udc79 \u2728 Je partage. J'apprends. J'enseigne. \u2728 \"Mais \u00e7a consiste en quoi, en fait ?\" On d\u00e9termine ensemble un sujet que l'on souhaite am\u00e9liorer (langage, algo, framework, pratqiue de d\u00e9veloppement, licorne) On d\u00e9termine ensemble un langage (Java, Javascript, Rust, Kotlin, etc.) On d\u00e9termine ensemble un exercice (un Kata de code) On code On \u00e9change sur le code produit, et \u00e7a, c'est cool \ud83d\ude0e Il est possible de s'organiser en amont, s'il y a un sujet que vous souhaitez aborder et/ou pr\u00e9senter.","title":"Coding Dojo"},{"location":"practices/coding-dojo/#coding-dojo","text":"Objectif Apprendre quelque chose de nouveau, en s'amusant, \u00e0 l'aide d'un exercice de code, dans un espace ouvert aux erreurs et \u00e0 l'exp\u00e9rimentation. Un Coding Dojo \ud83d\udd57 2h | 5-15 Personnes (optimal: 8) R\u00e9p\u00e9ter r\u00e9guli\u00e8rement","title":"Coding Dojo"},{"location":"practices/coding-dojo/#deroule","text":"","title":"D\u00e9roul\u00e9"},{"location":"practices/coding-dojo/#introduction","text":"\ud83d\udd57 15 mins Rappel du contexte du Dojo Choix du Kata Que cherchons nous \u00e0 apprendre ? Choix du langage Un m\u00eame langage pour tous dans la session Choix du format Randori, Randori par paires, Autres Choix des contraintes Pour apprendre davantage ? Autres","title":"Introduction"},{"location":"practices/coding-dojo/#coder","text":"\ud83d\udd57 90 mins R\u00e8gles du Dojo Venez comme vous \u00eates (avec vos connaissances et vos acquis) Ralentissez ! Tout le monde doit apprendre. Trouvez le ma\u00eetre qui est/sera en vous. Utiliser la m\u00e9thodologie TDD Focus ! Code et exercice sont plus importants que Style et guerre de chapelle Faciliter le Dojo Laisser le temps aux participants de faire des erreurs Mettre en place une atmosph\u00e8re saine et bienveillante Garder le focus sur le code et l'exercice. \u00c9viter de se disperser dans des refactors trop cons\u00e9quents","title":"Coder"},{"location":"practices/coding-dojo/#demo","text":"\ud83d\udd57 5 mins/personne (ou bin\u00f4me) Je veux voir du code ! Tout le monde y passe ! Echange et critiques positives autour du code Il est indispensable d'\u00e9changer sur le code produit. Le format de la d\u00e9mo d\u00e9pend du format utilis\u00e9 pour la session du Dojo. Demander syst\u00e9matique des critiques positives sur le code montr\u00e9.","title":"D\u00e9mo"},{"location":"practices/coding-dojo/#retrospective","text":"\ud83d\udd57 15 mins Feed-back sur la session Qu'est ce que vous avez appris ? Est-ce que vous vous \u00eates amus\u00e9s ? Est-ce que vous reviendrez ?","title":"R\u00e9trospective"},{"location":"practices/coding-dojo/#pourquoi-venir-a-un-coding-dojo","text":"Pratiquer \ud83e\udd4b S'entra\u00eener \ud83c\udfcb\ufe0f Exp\u00e9rimenter \ud83e\uddea \"Pourquoi est-ce que je viendrais \u00e0 un Coding Dojo ?\" \ud83c\udf08 C'est fun \ud83c\udf08 \ud83e\udd1d Je rencontre des gens diff\u00e9rents, qui ne sont pas m\u00e9chants \ud83d\udc79 \u2728 Je partage. J'apprends. J'enseigne. \u2728 \"Mais \u00e7a consiste en quoi, en fait ?\" On d\u00e9termine ensemble un sujet que l'on souhaite am\u00e9liorer (langage, algo, framework, pratqiue de d\u00e9veloppement, licorne) On d\u00e9termine ensemble un langage (Java, Javascript, Rust, Kotlin, etc.) On d\u00e9termine ensemble un exercice (un Kata de code) On code On \u00e9change sur le code produit, et \u00e7a, c'est cool \ud83d\ude0e Il est possible de s'organiser en amont, s'il y a un sujet que vous souhaitez aborder et/ou pr\u00e9senter.","title":"Pourquoi venir \u00e0 un Coding Dojo"},{"location":"practices/coding-dojo/slides/","text":"Coding Dojo \u00b6 Objectif \u00b6 Objectif : Apprendre quelque chose de nouveau, \u00e0 l'aide d'un exercice de code, en s'amusant, dans un espace bienveillant et ouvert aux erreurs. -- Vertical \u00b6 TODO R\u00e8gles des 2 pieds \u00b6 Si le sujet ne vous pla\u00eet pas Si vous avez mieux \u00e0 faire -> Suivez vos pieds ; ils vous am\u00e8neront \u00e0 un endroit davantatage appropri\u00e9 Feedback : dites-le, et pourquoi -- Some stuff D\u00c9ROUL\u00c9 \u00b6 En 4 \u00e9tapes \u00b6 Introduction (\u00bc) \u00b6 D\u00e9finir l'\u00e9nonc\u00e9 du probl\u00e8me -- Que cherchons-nous \u00e0 apprendre ? \u00b6 Choisir le kata appropri\u00e9 -- Comment allons-nous nous exprimer ? \u00b6 Choisir le langage et l'IDE. D\u00e9finir un m\u00eame langage pour tous les participants est un plus -- Choix du format: ex Randori, Randori par paires, Autres -- Choix des contraintes Pour apprendre davantage ? Coder (2/4) \u00b6 Dans une atmosph\u00e8re saine et bienveillante -- Venez comme vous \u00eates \u00b6 -- Ralentissez ! Tout le monde doit apprendre. \u00b6 -- Trouvez le ma\u00eetre qui est/sera en vous. \u00b6 -- Utiliser TDD \u00b6 -- Focus ! \u00b6 Style et guerre de chapelle < Code et exercice D\u00e9mo (\u00be) \u00b6 Le format de la d\u00e9mo d\u00e9pend du format du Dojo. -- Je veux voir du code ! -- Echange et critiques positives autour du code -- Tout le monde y passe ! R\u00e9tro (4/4) \u00b6 Qu'est-ce que vous avez appris ? Est-ce que vous vous \u00eates amus\u00e9s ? Est-ce que vous reviendrez ? Kata Catalogue \u00b6 TODO : r\u00e9cup\u00e9rer les reps que je connais Contraintes \u00b6 TODO : r\u00e9cup\u00e9rer les repos que je connais","title":"Presentation"},{"location":"practices/coding-dojo/slides/#coding-dojo","text":"","title":"Coding Dojo"},{"location":"practices/coding-dojo/slides/#objectif","text":"Objectif : Apprendre quelque chose de nouveau, \u00e0 l'aide d'un exercice de code, en s'amusant, dans un espace bienveillant et ouvert aux erreurs. --","title":"Objectif"},{"location":"practices/coding-dojo/slides/#vertical","text":"TODO","title":"Vertical"},{"location":"practices/coding-dojo/slides/#regles-des-2-pieds","text":"Si le sujet ne vous pla\u00eet pas Si vous avez mieux \u00e0 faire -> Suivez vos pieds ; ils vous am\u00e8neront \u00e0 un endroit davantatage appropri\u00e9 Feedback : dites-le, et pourquoi -- Some stuff","title":"R\u00e8gles des 2 pieds"},{"location":"practices/coding-dojo/slides/#deroule","text":"","title":"D\u00c9ROUL\u00c9"},{"location":"practices/coding-dojo/slides/#en-4-etapes","text":"","title":"En 4 \u00e9tapes"},{"location":"practices/coding-dojo/slides/#introduction-14","text":"D\u00e9finir l'\u00e9nonc\u00e9 du probl\u00e8me --","title":"Introduction (1/4)"},{"location":"practices/coding-dojo/slides/#que-cherchons-nous-a-apprendre","text":"Choisir le kata appropri\u00e9 --","title":"Que cherchons-nous \u00e0 apprendre ?"},{"location":"practices/coding-dojo/slides/#comment-allons-nous-nous-exprimer","text":"Choisir le langage et l'IDE. D\u00e9finir un m\u00eame langage pour tous les participants est un plus -- Choix du format: ex Randori, Randori par paires, Autres -- Choix des contraintes Pour apprendre davantage ?","title":"Comment allons-nous nous exprimer ?"},{"location":"practices/coding-dojo/slides/#coder-24","text":"Dans une atmosph\u00e8re saine et bienveillante --","title":"Coder (2/4)"},{"location":"practices/coding-dojo/slides/#venez-comme-vous-etes","text":"--","title":"Venez comme vous \u00eates"},{"location":"practices/coding-dojo/slides/#ralentissez-tout-le-monde-doit-apprendre","text":"--","title":"Ralentissez ! Tout le monde doit apprendre."},{"location":"practices/coding-dojo/slides/#trouvez-le-maitre-qui-estsera-en-vous","text":"--","title":"Trouvez le ma\u00eetre qui est/sera en vous."},{"location":"practices/coding-dojo/slides/#utiliser-tdd","text":"--","title":"Utiliser TDD"},{"location":"practices/coding-dojo/slides/#focus","text":"Style et guerre de chapelle < Code et exercice","title":"Focus !"},{"location":"practices/coding-dojo/slides/#demo-34","text":"Le format de la d\u00e9mo d\u00e9pend du format du Dojo. -- Je veux voir du code ! -- Echange et critiques positives autour du code -- Tout le monde y passe !","title":"D\u00e9mo (3/4)"},{"location":"practices/coding-dojo/slides/#retro-44","text":"Qu'est-ce que vous avez appris ? Est-ce que vous vous \u00eates amus\u00e9s ? Est-ce que vous reviendrez ?","title":"R\u00e9tro (4/4)"},{"location":"practices/coding-dojo/slides/#kata-catalogue","text":"TODO : r\u00e9cup\u00e9rer les reps que je connais","title":"Kata Catalogue"},{"location":"practices/coding-dojo/slides/#contraintes","text":"TODO : r\u00e9cup\u00e9rer les repos que je connais","title":"Contraintes"},{"location":"practices/deliberate-practice/","text":"What is Deliberate Practice? \u00b6 Deliberate practice refers to a special type of practice that is purposeful and systematic. While regular practice might include mindless repetitions, deliberate practice requires focused attention and is conducted with the specific goal of improving performance. When Ben Hogan carefully reconstructed each step of his golf swing, he was engaging in deliberate practice. He wasn't just taking cuts. He was finely tuning his technique.","title":"Deliberate Practice"},{"location":"practices/deliberate-practice/#what-is-deliberate-practice","text":"Deliberate practice refers to a special type of practice that is purposeful and systematic. While regular practice might include mindless repetitions, deliberate practice requires focused attention and is conducted with the specific goal of improving performance. When Ben Hogan carefully reconstructed each step of his golf swing, he was engaging in deliberate practice. He wasn't just taking cuts. He was finely tuning his technique.","title":"What is Deliberate Practice?"},{"location":"practices/katas/","text":"Le Kata : Quoi et pourquoi ? \u00b6 Kata \u00b6 Dans le jargon informatique, un Kata est un exercice de programmation, o\u00f9 l'\u00e9nonc\u00e9 est relativement court, et de difficult\u00e9 variable. Le terme Kata fait r\u00e9f\u00e9rence aux arts martiaux, car l'exercice est fait pour \u00eatre pratiqu\u00e9 encore et encore, en d\u00e9couvrant \u00e0 chaque fois de nouvelles choses. Deliberate Practice \u00b6 Pratiquer un Kata s'inscrit dans une d\u00e9marche de Deliberate Practice . L\u00e0 o\u00f9 la pratique \"classique\" consiste \u00e0 r\u00e9p\u00e9ter encore et encore l'exercice, la \" Deliberate Practice \" est une approche r\u00e9fl\u00e9chie et syst\u00e9matique du d\u00e9roul\u00e9 de l'exercice. Deliberate Practice demande de se concentrer sur la pratique, avec l'objectif conscient de s'am\u00e9liorer. Dans le cadre des Kata en informatique, il s'agit de d\u00e9rouler l'exercice en appliquant une pratique ou une autre du d\u00e9veloppement, Par exemple TDD , TCR , ou le Pair-Programming , ou bien de s'imposer des contraintes","title":"Katas"},{"location":"practices/katas/#le-kata-quoi-et-pourquoi","text":"","title":"Le Kata : Quoi et pourquoi ?"},{"location":"practices/katas/#kata","text":"Dans le jargon informatique, un Kata est un exercice de programmation, o\u00f9 l'\u00e9nonc\u00e9 est relativement court, et de difficult\u00e9 variable. Le terme Kata fait r\u00e9f\u00e9rence aux arts martiaux, car l'exercice est fait pour \u00eatre pratiqu\u00e9 encore et encore, en d\u00e9couvrant \u00e0 chaque fois de nouvelles choses.","title":"Kata"},{"location":"practices/katas/#deliberate-practice","text":"Pratiquer un Kata s'inscrit dans une d\u00e9marche de Deliberate Practice . L\u00e0 o\u00f9 la pratique \"classique\" consiste \u00e0 r\u00e9p\u00e9ter encore et encore l'exercice, la \" Deliberate Practice \" est une approche r\u00e9fl\u00e9chie et syst\u00e9matique du d\u00e9roul\u00e9 de l'exercice. Deliberate Practice demande de se concentrer sur la pratique, avec l'objectif conscient de s'am\u00e9liorer. Dans le cadre des Kata en informatique, il s'agit de d\u00e9rouler l'exercice en appliquant une pratique ou une autre du d\u00e9veloppement, Par exemple TDD , TCR , ou le Pair-Programming , ou bien de s'imposer des contraintes","title":"Deliberate Practice"},{"location":"practices/katas/Diamound/","text":"Le \"Fizz-Buzz\" est une question d'entretien d'embauche, construite pour \u00e9vincer 99.5% des candidats \u00e0 un poste de d\u00e9veloppeur qui n'ont pas la moindre id\u00e9e de la mani\u00e8re de programmer. \u00c9nonc\u00e9 \u00b6 A partir d'une lettre, affichez un losange dont la pointe est la lettre \"A\", et avec la lettre fournie au point le plus large. Par exemple, le diamant pour la lettre C donnera : A B B C C B B A A propos du kata \u00b6 A propos du Kata \ud83d\udc31\u200d\ud83d\udc64 \ud83d\udd57 2h | \ud83c\udf36\ufe0f\ud83c\udf36\ufe0f Moyen Comp\u00e9tences cl\u00e9s: \u2697\ufe0f TDD | \u2702\ufe0fD\u00e9couper Complexit\u00e9 Ce Kata permet introduire de d\u00e9coupage d'un probl\u00e8me par la complexit\u00e9 . Nouveau Challenge ? \u00b6 Afficher un Hexagone plat Afficher un Hexagone pointu Le Kata sur d'autres sites \u00b6 Sur le WikiWikiWeb CodingDojo.org","title":"Diamound"},{"location":"practices/katas/Diamound/#enonce","text":"A partir d'une lettre, affichez un losange dont la pointe est la lettre \"A\", et avec la lettre fournie au point le plus large. Par exemple, le diamant pour la lettre C donnera : A B B C C B B A","title":"\u00c9nonc\u00e9"},{"location":"practices/katas/Diamound/#a-propos-du-kata","text":"A propos du Kata \ud83d\udc31\u200d\ud83d\udc64 \ud83d\udd57 2h | \ud83c\udf36\ufe0f\ud83c\udf36\ufe0f Moyen Comp\u00e9tences cl\u00e9s: \u2697\ufe0f TDD | \u2702\ufe0fD\u00e9couper Complexit\u00e9 Ce Kata permet introduire de d\u00e9coupage d'un probl\u00e8me par la complexit\u00e9 .","title":"A propos du kata"},{"location":"practices/katas/Diamound/#nouveau-challenge","text":"Afficher un Hexagone plat Afficher un Hexagone pointu","title":"Nouveau Challenge ?"},{"location":"practices/katas/Diamound/#le-kata-sur-dautres-sites","text":"Sur le WikiWikiWeb CodingDojo.org","title":"Le Kata sur d'autres sites"},{"location":"practices/katas/FizzBuzz/","text":"Le \"Fizz-Buzz\" est une question d'entretien d'embauche, construite pour \u00e9vincer 99.5% des candidats \u00e0 un poste de d\u00e9veloppeur qui n'ont pas la moindre id\u00e9e de la mani\u00e8re de programmer. \u00c9nonc\u00e9 \u00b6 \u00c9crivez un programme affichant les nombres de 1 \u00e0 100. Mais, pour tous les multiples de trois, affichez \"Fizz\" \u00e0 la place du nombre, et pour les multiples de cinq, affichez \"Buzz\". Pour les multiples de trois et de cinq, affichez \"FizzBuzz\". A propos du kata \u00b6 A propos du Kata \ud83d\udc31\u200d\ud83d\udc64 \ud83d\udd57 1h | \ud83c\udf36\ufe0f Facile Comp\u00e9tences cl\u00e9s: \u2697\ufe0f TDD | \ud83d\udc76 Baby Steps Ce Kata est id\u00e9al pour introduire et illustrer les concepts du TDD . Il s'agit d'un exercice permettant d'arriver \u00e0 une solution finale au bout d'1h environ. Ce Kata est \u00e9galement adapt\u00e9 pour travailler des Contraintes ind\u00e9pendantes de l'algorithmie. Par exmple: \"Essayer une nouveau langage\", ou \"D\u00e9velopper sans souris\". Le Kata sur d'autres sites \u00b6 FizzBuzz sur le WikiWikiWeb avec des proposition d'impl\u00e9mentation dans diff\u00e9rents langages CodingDojo.org","title":"FizzBuzz"},{"location":"practices/katas/FizzBuzz/#enonce","text":"\u00c9crivez un programme affichant les nombres de 1 \u00e0 100. Mais, pour tous les multiples de trois, affichez \"Fizz\" \u00e0 la place du nombre, et pour les multiples de cinq, affichez \"Buzz\". Pour les multiples de trois et de cinq, affichez \"FizzBuzz\".","title":"\u00c9nonc\u00e9"},{"location":"practices/katas/FizzBuzz/#a-propos-du-kata","text":"A propos du Kata \ud83d\udc31\u200d\ud83d\udc64 \ud83d\udd57 1h | \ud83c\udf36\ufe0f Facile Comp\u00e9tences cl\u00e9s: \u2697\ufe0f TDD | \ud83d\udc76 Baby Steps Ce Kata est id\u00e9al pour introduire et illustrer les concepts du TDD . Il s'agit d'un exercice permettant d'arriver \u00e0 une solution finale au bout d'1h environ. Ce Kata est \u00e9galement adapt\u00e9 pour travailler des Contraintes ind\u00e9pendantes de l'algorithmie. Par exmple: \"Essayer une nouveau langage\", ou \"D\u00e9velopper sans souris\".","title":"A propos du kata"},{"location":"practices/katas/FizzBuzz/#le-kata-sur-dautres-sites","text":"FizzBuzz sur le WikiWikiWeb avec des proposition d'impl\u00e9mentation dans diff\u00e9rents langages CodingDojo.org","title":"Le Kata sur d'autres sites"},{"location":"practices/mob/slides/","text":"Mob Programming \u00b6 Ensemble Programming Collaborer \u00b6 -- Comp\u00e9tence \u00b6 Pas imm\u00e9diat Difficile au d\u00e9but Propre \u00e0 chaque \u00e9quipe Qu'est-ce que c'est \u00b6 -- All the brilliant people, working on the same thing, at the same time, in the same space, and at the same computer. Woody Zuil Pourquoi faire ? \u00b6 -- Consolide l'\u00e9quipe \u00b6 Team Building continu Transparence totale Moins de stress -- Acc\u00e9l\u00e8re le processus de d\u00e9cision \u00b6 Prise de risque ensemble -- Gagne en efficacit\u00e9 \u00b6 R\u00e9duit la boucle de feedback (cf. XP) Se concentre sur \"Finir une t\u00e2che\" Moins de d\u00e9lais Moins de besoin de synchronisation Moins de r\u00e9unions inutiles -- Gagne en connaissance \u00b6 Apprendre rapidement Le code Le fonctionnel L'infra Tout le reste Note: Any types of issue or discussion can be done in real time. -- L'\u00e9quipe est \"un\" \u00b6 Loi de Conway Synchronisation ext\u00e9rieure Note: les organisations qui con\u00e7oivent des syst\u00e8mes tendent in\u00e9vitablement \u00e0 produire des designs qui sont des copies de la structure de communication de leur organisation. Comment Faire ? \u00b6 -- Un seul ordinateur / Un seul point d'attention Une seule personne au clavier -- Strong Style Navigation \u00b6 -- For an idea to go from your head into the computer it MUST go through someone else's hands ** Llewellyn Falco** -- R\u00f4les \u00b6 Driver Navigator -- Intention Emplacement D\u00e9tail -- Autres R\u00f4les \u00b6 Facilitator Recorder Researcher Devil\u2019s Advocate Charte de travail \u00b6 -- Savoir \u00eatre \u00b6 Loi des deux pieds Transparence -- R\u00e8gles d'or \u00b6 \"Oui, et...\" Faites les deux G\u00e9rer le temps \u00b6 -- Planifier une session \u00b6 Dur\u00e9e : 2h / \u00bdj / 1j Date de d\u00e9but/fin Privil\u00e9gier le matin D\u00e9finir l'objectif de la session -- Pomodoro \u00b6 Concentration intense pendant 20-25mins Vraie pause de 5-15mins Jouer le jeu -- Tourner le clavier/les r\u00f4les \u00b6 Fr\u00e9quemment 4-8 minutes Mobster -- G\u00e9rer les urgences \u00b6 D\u00e9tacher une paire pour r\u00e9soudre les incidents. R\u00e9tro \u00b6 Syst\u00e9matique apr\u00e8s une session de Mob Smells \u00b6 D\u00e9tecter quand les choses se passent mal Ressources \u00b6 -- Qui suivre ? \u00b6 Woody Llywen Falco Emily Bache Maaret Pyh\u00e4j\u00e4rvi @maaretp Mob Mentality Show -- Autres documents \u00b6 Guide de premi\u00e8re facilitation Mob Programming Patterns Guide du mob programming Mob Programming Conference The Remote Experiment Software Profession Resource Mob Programming During a Pandemic: Lessons Learned Comprendre la loi de Conway pour r\u00e9ussir sa transformation DevOps Llewellyn\u2019s strong-style pairing REX Mob Programming : la coh\u00e9sion d\u2019\u00e9quipe maximale Mob Programming - an Interview with Woody Zuill Mob Programming - an Interview with Woody Zuill Because the cost of code review when pair/mob programming is almost zero","title":"CodingDojo"},{"location":"practices/mob/slides/#mob-programming","text":"Ensemble Programming","title":"Mob Programming"},{"location":"practices/mob/slides/#collaborer","text":"--","title":"Collaborer"},{"location":"practices/mob/slides/#competence","text":"Pas imm\u00e9diat Difficile au d\u00e9but Propre \u00e0 chaque \u00e9quipe","title":"Comp\u00e9tence"},{"location":"practices/mob/slides/#quest-ce-que-cest","text":"-- All the brilliant people, working on the same thing, at the same time, in the same space, and at the same computer. Woody Zuil","title":"Qu'est-ce que c'est"},{"location":"practices/mob/slides/#pourquoi-faire","text":"--","title":"Pourquoi faire ?"},{"location":"practices/mob/slides/#consolide-lequipe","text":"Team Building continu Transparence totale Moins de stress --","title":"Consolide l'\u00e9quipe"},{"location":"practices/mob/slides/#accelere-le-processus-de-decision","text":"Prise de risque ensemble --","title":"Acc\u00e9l\u00e8re le processus de d\u00e9cision"},{"location":"practices/mob/slides/#gagne-en-efficacite","text":"R\u00e9duit la boucle de feedback (cf. XP) Se concentre sur \"Finir une t\u00e2che\" Moins de d\u00e9lais Moins de besoin de synchronisation Moins de r\u00e9unions inutiles --","title":"Gagne en efficacit\u00e9"},{"location":"practices/mob/slides/#gagne-en-connaissance","text":"Apprendre rapidement Le code Le fonctionnel L'infra Tout le reste Note: Any types of issue or discussion can be done in real time. --","title":"Gagne en connaissance"},{"location":"practices/mob/slides/#lequipe-est-un","text":"Loi de Conway Synchronisation ext\u00e9rieure Note: les organisations qui con\u00e7oivent des syst\u00e8mes tendent in\u00e9vitablement \u00e0 produire des designs qui sont des copies de la structure de communication de leur organisation.","title":"L'\u00e9quipe est \"un\""},{"location":"practices/mob/slides/#comment-faire","text":"-- Un seul ordinateur / Un seul point d'attention Une seule personne au clavier --","title":"Comment Faire ?"},{"location":"practices/mob/slides/#strong-style-navigation","text":"-- For an idea to go from your head into the computer it MUST go through someone else's hands ** Llewellyn Falco** --","title":"Strong Style Navigation"},{"location":"practices/mob/slides/#roles","text":"Driver Navigator -- Intention Emplacement D\u00e9tail --","title":"R\u00f4les"},{"location":"practices/mob/slides/#autres-roles","text":"Facilitator Recorder Researcher Devil\u2019s Advocate","title":"Autres R\u00f4les"},{"location":"practices/mob/slides/#charte-de-travail","text":"--","title":"Charte de travail"},{"location":"practices/mob/slides/#savoir-etre","text":"Loi des deux pieds Transparence --","title":"Savoir \u00eatre"},{"location":"practices/mob/slides/#regles-dor","text":"\"Oui, et...\" Faites les deux","title":"R\u00e8gles d'or"},{"location":"practices/mob/slides/#gerer-le-temps","text":"--","title":"G\u00e9rer le temps"},{"location":"practices/mob/slides/#planifier-une-session","text":"Dur\u00e9e : 2h / \u00bdj / 1j Date de d\u00e9but/fin Privil\u00e9gier le matin D\u00e9finir l'objectif de la session --","title":"Planifier une session"},{"location":"practices/mob/slides/#pomodoro","text":"Concentration intense pendant 20-25mins Vraie pause de 5-15mins Jouer le jeu --","title":"Pomodoro"},{"location":"practices/mob/slides/#tourner-le-clavierles-roles","text":"Fr\u00e9quemment 4-8 minutes Mobster --","title":"Tourner le clavier/les r\u00f4les"},{"location":"practices/mob/slides/#gerer-les-urgences","text":"D\u00e9tacher une paire pour r\u00e9soudre les incidents.","title":"G\u00e9rer les urgences"},{"location":"practices/mob/slides/#retro","text":"Syst\u00e9matique apr\u00e8s une session de Mob","title":"R\u00e9tro"},{"location":"practices/mob/slides/#smells","text":"D\u00e9tecter quand les choses se passent mal","title":"Smells"},{"location":"practices/mob/slides/#ressources","text":"--","title":"Ressources"},{"location":"practices/mob/slides/#qui-suivre","text":"Woody Llywen Falco Emily Bache Maaret Pyh\u00e4j\u00e4rvi @maaretp Mob Mentality Show --","title":"Qui suivre ?"},{"location":"practices/mob/slides/#autres-documents","text":"Guide de premi\u00e8re facilitation Mob Programming Patterns Guide du mob programming Mob Programming Conference The Remote Experiment Software Profession Resource Mob Programming During a Pandemic: Lessons Learned Comprendre la loi de Conway pour r\u00e9ussir sa transformation DevOps Llewellyn\u2019s strong-style pairing REX Mob Programming : la coh\u00e9sion d\u2019\u00e9quipe maximale Mob Programming - an Interview with Woody Zuill Mob Programming - an Interview with Woody Zuill Because the cost of code review when pair/mob programming is almost zero","title":"Autres documents"}]}